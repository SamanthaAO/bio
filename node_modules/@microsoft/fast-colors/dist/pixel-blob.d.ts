import { ColorRGBA64 } from "./color-rgba-64";
export interface PixelBlob {
    width: number;
    height: number;
    totalPixels: number;
    getPixel(x: number, y: number): ColorRGBA64;
    /**
     * Returns an array of 4 numbers in the range [0,255] in order RGBA
     */
    getPixelRGBA(x: number, y: number): number[];
}
/**
 * Creates an HTMLImageElement and loads the source argument as its src. Then an HTMLCanvasElement is created and the image is copied into the canvas. The pixel data is then returned from the CanvasRenderingContext2D for that canvas.
 */
export declare function loadImageData(source: string): Promise<ImageData>;
export declare class ImageDataPixelBlob implements PixelBlob {
    constructor(image: ImageData);
    private image;
    readonly width: number;
    readonly height: number;
    readonly totalPixels: number;
    getPixel: (x: number, y: number) => ColorRGBA64;
    getPixelRGBA: (x: number, y: number) => number[];
}
