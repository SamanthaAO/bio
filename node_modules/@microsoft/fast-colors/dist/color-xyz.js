// tslint:disable:member-ordering
import { roundToPrecisionSmall } from "./math-utilities";
// XYZ color space
// https://en.wikipedia.org/wiki/CIE_1931_color_space
// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.
// https://en.wikipedia.org/wiki/Illuminant_D65
// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.
export class ColorXYZ {
    constructor(x, y, z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }
    static fromObject(data) {
        if (data && !isNaN(data.x) && !isNaN(data.y) && !isNaN(data.z)) {
            return new ColorXYZ(data.x, data.y, data.z);
        }
        return null;
    }
    equalValue(rhs) {
        return this.x === rhs.x && this.y === rhs.y && this.z === rhs.z;
    }
    roundToPrecision(precision) {
        return new ColorXYZ(roundToPrecisionSmall(this.x, precision), roundToPrecisionSmall(this.y, precision), roundToPrecisionSmall(this.z, precision));
    }
    toObject() {
        return { x: this.x, y: this.y, z: this.z };
    }
}
// D65 2 degree white point
ColorXYZ.whitePoint = new ColorXYZ(0.95047, 1.0, 1.08883);
