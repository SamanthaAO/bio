import { ColorHSL } from "./color-hsl";
import { ColorHSV } from "./color-hsv";
import { ColorLAB } from "./color-lab";
import { ColorLCH } from "./color-lch";
import { ColorRGBA64 } from "./color-rgba-64";
import { ColorXYZ } from "./color-xyz";
/**
 * Get the relative luminance of a color.
 * Adjusts the color to sRGB space, which is necessary for the WCAG contrast spec.
 * The alpha channel of the input is ignored.
 * @param rgb The input color
 */
export declare function rgbToRelativeLuminance(rgb: ColorRGBA64): number;
export declare function contrastRatio(a: ColorRGBA64, b: ColorRGBA64): number;
/**
 * Get the luminance of a color in the linear RGB space.
 * This is not the same as the relative luminance in the sRGB space for WCAG contrast calculations. Use rgbToRelativeLuminance instead.
 * @param rgb The input color
 */
export declare function rgbToLinearLuminance(rgb: ColorRGBA64): number;
export declare function rgbToHSL(rgb: ColorRGBA64): ColorHSL;
export declare function hslToRGB(hsl: ColorHSL, alpha?: number): ColorRGBA64;
export declare function rgbToHSV(rgb: ColorRGBA64): ColorHSV;
export declare function hsvToRGB(hsv: ColorHSV, alpha?: number): ColorRGBA64;
export declare function lchToLAB(lch: ColorLCH): ColorLAB;
export declare function labToLCH(lab: ColorLAB): ColorLCH;
export declare function labToXYZ(lab: ColorLAB): ColorXYZ;
export declare function xyzToLAB(xyz: ColorXYZ): ColorLAB;
export declare function rgbToXYZ(rgb: ColorRGBA64): ColorXYZ;
export declare function xyzToRGB(xyz: ColorXYZ, alpha?: number): ColorRGBA64;
export declare function rgbToLAB(rgb: ColorRGBA64): ColorLAB;
export declare function labToRGB(lab: ColorLAB, alpha?: number): ColorRGBA64;
export declare function rgbToLCH(rgb: ColorRGBA64): ColorLCH;
export declare function lchToRGB(lch: ColorLCH, alpha?: number): ColorRGBA64;
export declare function temperatureToRGB(tempKelvin: number, alpha?: number): ColorRGBA64;
export declare function rgbToTemperature(rgb: ColorRGBA64): number;
