import Foundation from "@microsoft/fast-components-foundation-react";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
import { TypographySize, TypographyTag, } from "./typography.props";
class Typography extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            managedClasses: void 0,
            tag: void 0,
            size: void 0,
        };
    }
    /**
     * Stores HTML tag for use in render
     */
    get tag() {
        return this.generateHTMLTag();
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(this.tag, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames() }), this.props.children));
    }
    /**
     * Generates class names based on props
     */
    generateClassNames() {
        const managedClasses = this.props.managedClasses;
        return super.generateClassNames(classNames(managedClasses.typography, managedClasses[`typography__${this.props.size}`]));
    }
    /**
     * Creates tags for rendering based on href
     */
    generateHTMLTag() {
        return TypographyTag[this.props.tag] || TypographyTag.p;
    }
}
Typography.defaultProps = {
    tag: TypographyTag.p,
    size: TypographySize._1,
    managedClasses: {},
};
Typography.displayName = `${DisplayNamePrefix}Typography`;
export default Typography;
export * from "./typography.props";
