import Foundation from "@microsoft/fast-components-foundation-react";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
export var ProgressType;
(function (ProgressType) {
    ProgressType["determinate"] = "determinate";
    ProgressType["indeterminate"] = "indeterminate";
})(ProgressType || (ProgressType = {}));
class Progress extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            children: void 0,
            managedClasses: void 0,
            maxValue: void 0,
            minValue: void 0,
            value: void 0,
        };
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement("div", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), role: "progressbar", "aria-valuenow": this.props.value, "aria-valuemin": this.props.minValue, "aria-valuemax": this.props.maxValue }), this.renderChildren()));
    }
    /**
     * Generates class names
     */
    generateClassNames() {
        return super.generateClassNames(classNames(this.props.managedClasses.progress));
    }
    /**
     * Renders children based on value prop
     */
    renderChildren() {
        return this.props.value !== undefined
            ? this.withSlot(ProgressType.determinate)
            : this.withSlot(ProgressType.indeterminate);
    }
}
Progress.defaultProps = {
    minValue: 0,
    maxValue: 100,
    managedClasses: {},
};
Progress.displayName = `${DisplayNamePrefix}Progress`;
export default Progress;
