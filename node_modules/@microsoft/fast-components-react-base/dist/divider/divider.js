import Foundation from "@microsoft/fast-components-foundation-react";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
import { DividerRoles, } from "./divider.props";
/* tslint:disable-next-line */
class Divider extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            managedClasses: void 0,
            role: void 0,
        };
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement("hr", Object.assign({}, this.unhandledProps(), this.generateAttributes(), { className: this.generateClassNames() })));
    }
    /**
     * Generates the attributes
     */
    generateAttributes() {
        // Do not render role="separator" on page because it's intrinsically set.
        if (this.props.role && this.props.role !== DividerRoles.separator) {
            return { role: DividerRoles[this.props.role] };
        }
    }
    /**
     * Generates class names
     */
    generateClassNames() {
        return super.generateClassNames(classNames(this.props.managedClasses.divider));
    }
}
Divider.displayName = `${DisplayNamePrefix}Divider`;
Divider.defaultProps = {
    managedClasses: {},
};
export default Divider;
export * from "./divider.props";
