import { ToggleClassNameContract } from "@microsoft/fast-components-class-name-contracts-base";
import Foundation, { HandledProps } from "@microsoft/fast-components-foundation-react";
import React from "react";
import { ToggleHandledProps, ToggleProps, ToggleUnhandledProps } from "./toggle.props";
/**
 * Toggle state interface
 */
export interface ToggleState {
    selected: boolean;
}
/**
 * Toggle base component
 */
declare class Toggle extends Foundation<ToggleHandledProps, ToggleUnhandledProps, ToggleState> {
    static displayName: string;
    static defaultProps: Partial<ToggleProps>;
    /**
     * React life-cycle method
     */
    static getDerivedStateFromProps(nextProps: ToggleProps, prevState: ToggleState): null | Partial<ToggleState>;
    protected handledProps: HandledProps<ToggleHandledProps>;
    /**
     * Define constructor
     */
    constructor(props: ToggleProps);
    /**
     * Renders the component
     */
    render(): React.ReactElement<HTMLDivElement>;
    /**
     * Generates class names
     */
    protected generateClassNames(): string;
    /**
     * Creates proper string based on state
     */
    private generateToggleStateLabel;
    /**
     * Handles onChange as a controlled component
     */
    private handleToggleChange;
    /**
     * Generates label if it exists
     */
    private generateLabel;
    private renderStatusMessage;
}
export default Toggle;
export * from "./toggle.props";
export { ToggleClassNameContract };
