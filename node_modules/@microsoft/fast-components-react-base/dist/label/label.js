import Foundation from "@microsoft/fast-components-foundation-react";
import { classNames } from "@microsoft/fast-web-utilities";
import { isUndefined } from "lodash-es";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
import { LabelTag, } from "./label.props";
class Label extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            hidden: void 0,
            managedClasses: void 0,
            tag: void 0,
        };
    }
    /**
     * Stores HTML tag for use in render
     */
    get tag() {
        return isUndefined(LabelTag[this.props.tag])
            ? LabelTag.label
            : LabelTag[this.props.tag];
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(this.tag, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames() }), this.props.children));
    }
    /**
     * Generates class names based on props
     */
    generateClassNames() {
        const { label, label__hidden, } = this.props.managedClasses;
        return super.generateClassNames(classNames(label, [label__hidden, this.props.hidden]));
    }
}
Label.displayName = `${DisplayNamePrefix}Label`;
Label.defaultProps = {
    tag: LabelTag.label,
    managedClasses: {},
};
export default Label;
export * from "./label.props";
