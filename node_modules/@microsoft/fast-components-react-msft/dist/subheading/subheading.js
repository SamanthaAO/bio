import Foundation from "@microsoft/fast-components-foundation-react";
import { TypographySize, TypographyTag } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { Typography } from "../typography";
import { DisplayNamePrefix } from "../utilities";
import { SubheadingSize, SubheadingTag, } from "./subheading.props";
class Subheading extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            size: void 0,
            managedClasses: void 0,
            tag: void 0,
        };
    }
    get size() {
        switch (this.props.size) {
            case SubheadingSize._1:
                return TypographySize._3;
            case SubheadingSize._2:
                return TypographySize._4;
            case SubheadingSize._3:
                return TypographySize._5;
            case SubheadingSize._4:
                return TypographySize._6;
            case SubheadingSize._5:
                return TypographySize._7;
            case SubheadingSize._6:
                return TypographySize._8;
            case SubheadingSize._7:
                return TypographySize._9;
        }
    }
    render() {
        return (React.createElement(Typography, Object.assign({}, this.unhandledProps(), { tag: TypographyTag[this.props.tag], size: this.size, className: this.generateClassNames() }), this.props.children));
    }
    generateClassNames() {
        const managedClasses = this.props.managedClasses;
        return super.generateClassNames(classNames(managedClasses.subheading, managedClasses[`subheading__${this.props.size}`]));
    }
}
Subheading.defaultProps = {
    size: SubheadingSize._1,
    tag: SubheadingTag.h3,
    managedClasses: {},
};
Subheading.displayName = `${DisplayNamePrefix}Subheading`;
export default Subheading;
export * from "./subheading.props";
