import Foundation from "@microsoft/fast-components-foundation-react";
import { TypographySize, TypographyTag } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { Typography } from "../typography";
import { DisplayNamePrefix } from "../utilities";
import { HeadingSize, } from "./heading.props";
class Heading extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            size: void 0,
            managedClasses: void 0,
            tag: void 0,
        };
    }
    /**
     * Stores HTML tag for use in render
     */
    get tag() {
        return this.props.tag ? TypographyTag[this.props.tag] : TypographyTag.h1;
    }
    /**
     * Stores size for use in render
     */
    get size() {
        return TypographySize[`_${this.props.size}`];
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(Typography, Object.assign({}, this.unhandledProps(), { tag: this.tag, size: this.size, className: this.generateClassNames() }), this.props.children));
    }
    /**
     * Generates class names based on props
     */
    generateClassNames() {
        const managedClasses = this.props.managedClasses;
        return super.generateClassNames(classNames(managedClasses.heading, managedClasses[`heading__${this.props.size}`]));
    }
}
Heading.displayName = `${DisplayNamePrefix}Heading`;
Heading.defaultProps = {
    size: HeadingSize._1,
    managedClasses: {},
};
export default Heading;
export * from "./heading.props";
