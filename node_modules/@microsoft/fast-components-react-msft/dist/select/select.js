import Foundation from "@microsoft/fast-components-foundation-react";
import { Select as BaseSelect } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
import { Background } from "../background";
import { neutralLayerFloating } from "@microsoft/fast-components-styles-msft";
class Select extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            disabled: void 0,
            managedClasses: void 0,
            menu: void 0,
        };
        /**
         * The function that renders the default styled trigger
         */
        this.defaultTriggerRenderFunction = (props, state, triggerId) => {
            if (props.multiselectable) {
                return null;
            }
            const { select_button, select_buttonContentRegion, select_buttonDisplayText, } = this.props.managedClasses;
            const labelledBy = `${this.props.labelledBy} ${triggerId}`;
            return (React.createElement("button", { id: triggerId, disabled: props.disabled, className: classNames(select_button), "aria-haspopup": "listbox", "aria-labelledby": labelledBy, "aria-expanded": state.isMenuOpen, "aria-live": "polite" },
                React.createElement("span", { className: classNames(select_buttonContentRegion) },
                    React.createElement("div", { className: classNames(select_buttonDisplayText) }, state.displayString),
                    this.generateGlyph())));
        };
        this.defaultMenuRenderFunction = (props, state, defaultMenu) => {
            return (React.createElement(Background, { value: neutralLayerFloating, tag: null }, defaultMenu));
        };
        /**
         * Gets the dropdown glyph
         * TODO: scomea - replace with ref to a glyph resource (https://github.com/Microsoft/fast-dna/issues/1488)
         */
        this.generateGlyph = () => {
            return (React.createElement("svg", { width: "16", height: "16", viewBox: "0 0 16 12", className: classNames(this.props.managedClasses.select_toggleGlyph), "aria-hidden": true, xmlns: "http://www.w3.org/2000/svg" },
                React.createElement("path", { d: "M11.3613 2.73633L11.8887 3.26367L6 9.15234L0.111328 3.26367L0.638672 2.73633L6 8.09766L11.3613 2.73633Z" })));
        };
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(BaseSelect, Object.assign({}, this.unhandledProps(), { managedClasses: this.props.managedClasses, disabled: this.props.disabled, menu: typeof this.props.menu === "function"
                ? this.props.menu
                : this.defaultMenuRenderFunction, trigger: typeof this.props.trigger === "function"
                ? this.props.trigger
                : this.defaultTriggerRenderFunction }), this.props.children));
    }
}
Select.displayName = `${DisplayNamePrefix}Select`;
Select.defaultProps = {
    managedClasses: {},
};
export default Select;
