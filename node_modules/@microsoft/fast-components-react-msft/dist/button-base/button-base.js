import Foundation from "@microsoft/fast-components-foundation-react";
import { Button as BaseButton } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import { isNil } from "lodash-es";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
class ButtonBase extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            beforeContent: void 0,
            afterContent: void 0,
            disabled: void 0,
            href: void 0,
            managedClasses: void 0,
        };
    }
    /**
     * Renders the component
     */
    render() {
        const managedClasses = this.props.managedClasses;
        return (React.createElement(BaseButton, Object.assign({}, this.unhandledProps(), { managedClasses: managedClasses, className: this.generateClassNames(), href: this.props.href, disabled: this.props.disabled }),
            this.generateBeforeContent(),
            React.createElement("span", { className: classNames(managedClasses.button_contentRegion) }, this.props.children),
            this.generateAfterContent()));
    }
    generateClassNames() {
        return super.generateClassNames(classNames([
            this.props.managedClasses.button__hasBeforeOrAfterAndChildren,
            this.hasBeforeOrAfterAndChildren(),
        ]));
    }
    generateBeforeContent() {
        if (typeof this.props.beforeContent === "function") {
            return this.props.beforeContent(classNames(this.props.managedClasses.button_beforeContent));
        }
    }
    generateAfterContent() {
        if (typeof this.props.afterContent === "function") {
            return this.props.afterContent(classNames(this.props.managedClasses.button_afterContent));
        }
    }
    hasBeforeOrAfterAndChildren() {
        return (!isNil(this.props.children) &&
            (!isNil(this.props.beforeContent) || !isNil(this.props.afterContent)));
    }
}
ButtonBase.displayName = `${DisplayNamePrefix}ButtonBase`;
ButtonBase.defaultProps = {
    managedClasses: {},
};
export default ButtonBase;
