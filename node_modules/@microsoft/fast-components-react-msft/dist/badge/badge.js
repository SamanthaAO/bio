import Foundation from "@microsoft/fast-components-foundation-react";
import { Badge as BaseBadge } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { DisplayNamePrefix } from "../utilities";
import { BadgeSize, } from "./badge.props";
class Badge extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            filled: void 0,
            size: void 0,
            managedClasses: void 0,
        };
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(BaseBadge, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), managedClasses: this.props.managedClasses }), this.props.children));
    }
    /**
     * Generates class names
     */
    generateClassNames() {
        const { badge__filled, badge__small, badge__large, } = this.props.managedClasses;
        return super.generateClassNames(classNames([badge__filled, this.props.filled], [badge__large, this.props.size === BadgeSize.large], [badge__small, this.props.size === BadgeSize.small]));
    }
}
Badge.displayName = `${DisplayNamePrefix}Badge`;
Badge.defaultProps = {
    size: BadgeSize.small,
    filled: true,
    managedClasses: {},
};
export default Badge;
export * from "./badge.props";
