/// <reference types="react" />
import Foundation, { HandledProps } from "@microsoft/fast-components-foundation-react";
import { TextActionHandledProps, TextActionProps, TextActionUnhandledProps } from "./text-action.props";
/**
 * Text action state interface
 */
export interface TextActionState {
    focused: boolean;
}
declare class TextAction extends Foundation<TextActionHandledProps, TextActionUnhandledProps, TextActionState> {
    static displayName: string;
    static defaultProps: Partial<TextActionProps>;
    protected handledProps: HandledProps<TextActionHandledProps>;
    constructor(props: TextActionProps);
    /**
     * Renders the component
     */
    render(): JSX.Element;
    /**
     * Generates class names
     */
    protected generateClassNames(): string;
    /**
     * Adds focus state to outer wrapper and fires callback if passed
     * In order to correctly focus the input and then the
     * possible button, a class must be added instead of using
     * focus-within via style
     */
    private handleOnFocus;
    /**
     * Removes focus state and fires callback if passed
     */
    private handleOnBlur;
    /**
     * Returns truthy if button exist
     */
    private buttonExists;
    /**
     * Generate button
     */
    private generateButton;
    /**
     * Generates after glyph based on props
     */
    private generateAfterGlyph;
    /**
     * Generates before glyph based on props
     */
    private generateBeforeGlyph;
}
export default TextAction;
export * from "./text-action.props";
