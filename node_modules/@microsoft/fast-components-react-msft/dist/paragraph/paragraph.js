import Foundation from "@microsoft/fast-components-foundation-react";
import { TypographySize, TypographyTag } from "@microsoft/fast-components-react-base";
import { classNames } from "@microsoft/fast-web-utilities";
import React from "react";
import { Typography } from "../typography";
import { DisplayNamePrefix } from "../utilities";
import { ParagraphSize, } from "./paragraph.props";
class Paragraph extends Foundation {
    constructor() {
        super(...arguments);
        this.handledProps = {
            size: void 0,
            managedClasses: void 0,
        };
    }
    /**
     * Renders the component
     */
    render() {
        return (React.createElement(Typography, Object.assign({}, this.unhandledProps(), { tag: TypographyTag.p, size: this.size, className: this.generateClassNames() }), this.props.children));
    }
    /**
     * Generates class names based on props
     */
    generateClassNames() {
        const managedClasses = this.props.managedClasses;
        return super.generateClassNames(classNames(managedClasses.paragraph, managedClasses[`paragraph__${this.props.size}`]));
    }
    /**
     * Stores size for use in render
     */
    get size() {
        switch (this.props.size) {
            case ParagraphSize._1:
                return TypographySize._5;
            case ParagraphSize._2:
                return TypographySize._6;
            default:
                return TypographySize._7;
        }
    }
}
Paragraph.defaultProps = {
    size: ParagraphSize._3,
    managedClasses: {},
};
Paragraph.displayName = `${DisplayNamePrefix}Paragraph`;
export default Paragraph;
export * from "./paragraph.props";
