/// <reference types="react" />
import { GridHandledProps, GridProps, GridUnhandledProps } from "./grid.props";
import Foundation, { HandledProps } from "@microsoft/fast-components-foundation-react";
export interface GridClassNamesContract {
    grid?: string;
}
export declare class Grid extends Foundation<GridHandledProps, GridUnhandledProps, {}> {
    /**
     * Stores HTML tag for use in render
     */
    private readonly tag;
    static displayName: string;
    static defaultProps: Partial<GridProps>;
    private static display;
    protected handledProps: HandledProps<GridHandledProps>;
    /**
     * Renders the Grid markup
     */
    render(): JSX.Element;
    /**
     * Component has mounted
     */
    componentDidMount(): void;
    /**
     * Component will be unmounted
     */
    componentWillUnmount(): void;
    /**
     * Component has updated
     */
    componentDidUpdate(previousProps: GridProps): void;
    protected generateClassNames(): string;
    /**
     * Determines if we should be tracking breakpoints based on a set of props
     */
    private shouldTrackBreakpoints;
    /**
     * Generates the column-span value
     */
    private generateGutter;
    private generateAlignment;
    /**
     * Force the component to update
     */
    private update;
    private generateStyleAttributes;
    private cssGridStyles;
    private msGridStyles;
    /**
     * Creates tags for rendering based on href
     */
    private generateHTMLTag;
    private renderChildren;
}
export * from "./grid.props";
