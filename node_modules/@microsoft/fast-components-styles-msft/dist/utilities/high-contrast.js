import { format, important, toPx } from "@microsoft/fast-jss-utilities";
import { canUseForcedColors } from "@microsoft/fast-web-utilities";
import { focusOutlineWidth, outlineWidth } from "./design-system";
export const highContrastSelector = "@media (-ms-high-contrast:active)";
export var HighContrastColor;
(function (HighContrastColor) {
    HighContrastColor["text"] = "WindowText";
    HighContrastColor["forcedColorLink"] = "LinkText";
    HighContrastColor["msLink"] = "-ms-hotlight";
    HighContrastColor["disabledText"] = "GrayText";
    HighContrastColor["selectedText"] = "HighlightText";
    HighContrastColor["selectedBackground"] = "Highlight";
    HighContrastColor["buttonText"] = "ButtonText";
    HighContrastColor["buttonBackground"] = "ButtonFace";
    HighContrastColor["background"] = "Window";
})(HighContrastColor || (HighContrastColor = {}));
// Function used to to opt-out of high contrast color scheme for '-ms' prefixes
function applyhighContrastOptOutProperty() {
    return {
        "-ms-high-contrast-adjust": "none",
    };
}
// Used to to opt-out of high contrast color scheme
export const highContrastOptOutProperty = applyhighContrastOptOutProperty();
// Function used to to set link color base on 'forced-color' query
export function applyHighContrastLinkValue() {
    return canUseForcedColors() ? "LinkText !important" : "-ms-hotlight !important";
}
// Used to to set high contrast base on 'forced-color' query
export const highContrastLinkValue = applyHighContrastLinkValue();
// Used to remove text backplate and borders in 'ButtonText' colors
export const highContrastStealth = {
    [highContrastSelector]: Object.assign({ background: HighContrastColor.buttonBackground, border: "none", color: HighContrastColor.buttonText, fill: HighContrastColor.buttonText }, highContrastOptOutProperty),
};
// Used to remove text backplate in 'ButtonText' and 'ButtonFace' colors
export const highContrastOutline = {
    [highContrastSelector]: Object.assign({ background: HighContrastColor.buttonBackground, "border-color": HighContrastColor.buttonText, color: HighContrastColor.buttonText, fill: HighContrastColor.buttonText }, highContrastOptOutProperty),
};
// Used to remove text backplate in 'HighlightText' and 'Highlight' colors
export const highContrastAccent = {
    [highContrastSelector]: Object.assign({ background: HighContrastColor.selectedBackground, "border-color": HighContrastColor.selectedBackground, color: HighContrastColor.selectedText, fill: HighContrastColor.selectedText }, highContrastOptOutProperty),
};
// Used to set button with a border to 'link' color
export const highContrastLinkOutline = {
    [highContrastSelector]: {
        background: HighContrastColor.background,
        "border-color": highContrastLinkValue,
        color: highContrastLinkValue,
        fill: highContrastLinkValue,
    },
};
// Used to set a borderless component to disabled color
export const highContrastDisabled = {
    [highContrastSelector]: {
        opacity: "1",
        background: important(HighContrastColor.buttonBackground),
        color: important(HighContrastColor.disabledText),
        fill: important(HighContrastColor.disabledText),
    },
};
// Used to set a components with border to disabled color
export const highContrastDisabledBorder = {
    [highContrastSelector]: {
        opacity: "1",
        background: important(HighContrastColor.buttonBackground),
        color: important(HighContrastColor.disabledText),
        fill: important(HighContrastColor.disabledText),
        "border-color": important(HighContrastColor.disabledText),
    },
};
// Used to set foreground to disabled color
export const highContrastDisabledForeground = {
    [highContrastSelector]: {
        opacity: "1",
        color: important(HighContrastColor.disabledText),
        fill: important(HighContrastColor.disabledText),
    },
};
// Used to set background to disabled color
export const highContrastDisabledBackground = {
    [highContrastSelector]: {
        opacity: "1",
        background: important(HighContrastColor.disabledText),
    },
};
// Used to set focus with keyboard focus
export const highContrastOutlineFocus = {
    [highContrastSelector]: {
        "border-color": HighContrastColor.buttonText,
        "box-shadow": format("0 0 0 {0} inset {1}", toPx(outlineWidth), () => HighContrastColor.buttonText),
    },
};
// Used to set double focus with keyboard focus
export const highContrastDoubleFocus = {
    [highContrastSelector]: {
        "border-color": important(HighContrastColor.buttonText),
        "box-shadow": format("0 0 0 {0} inset {1}", toPx(focusOutlineWidth), () => HighContrastColor.buttonBackground),
    },
};
// Used to set background to 'Highlight' foreground to 'HighlightText'
export const highContrastSelected = {
    [highContrastSelector]: {
        background: HighContrastColor.selectedBackground,
        color: HighContrastColor.selectedText,
        fill: HighContrastColor.selectedText,
    },
};
/**
 * @deprecated Use 'highContrastSelected' instead
 */
export const highContrastSelection = highContrastSelected;
// Used to set 'Highlight' color with an outline
export const highContrastSelectedOutline = {
    [highContrastSelector]: {
        background: HighContrastColor.selectedText,
        "border-color": HighContrastColor.selectedBackground,
        color: HighContrastColor.selectedBackground,
        fill: HighContrastColor.selectedBackground,
    },
};
// Used to set foreground and glyph to be 'WindowText' color
export const highContrastTextForeground = {
    [highContrastSelector]: {
        color: important(HighContrastColor.text),
        fill: important(HighContrastColor.text),
    },
};
// Used to set foreground and glyph to be 'ButtonText' color
export const highContrastForeground = {
    [highContrastSelector]: {
        color: important(HighContrastColor.buttonText),
        fill: important(HighContrastColor.buttonText),
    },
};
// Used to set foreground and glyph to be 'HighlightText' color
export const highContrastSelectedForeground = {
    [highContrastSelector]: {
        color: important(HighContrastColor.selectedText),
        fill: important(HighContrastColor.selectedText),
    },
};
// Used to set foreground and glyph to be 'Highlight' color
export const highContrastHighlightForeground = {
    [highContrastSelector]: {
        color: important(HighContrastColor.selectedBackground),
        fill: important(HighContrastColor.selectedBackground),
    },
};
// Used to set foreground and glyph to be 'link' color
export const highContrastLinkForeground = {
    [highContrastSelector]: {
        color: highContrastLinkValue,
        fill: highContrastLinkValue,
    },
};
// Used to set borders to be 'WindowText' color
export const highContrastBorder = {
    [highContrastSelector]: {
        border: format("{0} solid {1}", toPx(outlineWidth), () => HighContrastColor.text),
    },
};
// Used to set border color to be 'ButtonText' color
export const highContrastBorderColor = {
    [highContrastSelector]: {
        "border-color": HighContrastColor.buttonText,
    },
};
// Used to set box-shadow border color to be 'link' color
export const highContrastLinkBorder = {
    [highContrastSelector]: {
        "box-shadow": format("0 0 0 {0} inset {1}", toPx(outlineWidth), () => highContrastLinkValue),
    },
};
// Used to set background to be 'Window' color
export const highContrastColorBackground = {
    [highContrastSelector]: {
        background: HighContrastColor.background,
    },
};
// Used to set background to be 'ButtonText' color
export const highContrastBackground = {
    [highContrastSelector]: {
        background: HighContrastColor.buttonText,
    },
};
// Used to set background to be 'ButtonFace' color
export const highContrastButtonBackground = {
    [highContrastSelector]: {
        background: HighContrastColor.buttonBackground,
    },
};
// Used to set background to be 'HighlightText' color
export const highContrastSelectedBackground = {
    [highContrastSelector]: {
        background: HighContrastColor.selectedText,
    },
};
// Used to set background to be 'Highlight' color
export const highContrastHighlightBackground = {
    [highContrastSelector]: {
        background: HighContrastColor.selectedBackground,
    },
};
// Used to set background to be 'link' color
export const highContrastLinkBackground = {
    [highContrastSelector]: {
        background: highContrastLinkValue,
    },
};
// Used to set background to be 'ButtonFace' and border to 'HighlightText'
export const highContrastButtonColorIndicator = {
    [highContrastSelector]: {
        opacity: "1",
        background: HighContrastColor.buttonBackground,
        "border-color": HighContrastColor.selectedText,
    },
};
// Used to set background to be 'Highlight' and border to 'HighlightText'
export const highContrastHighlightColorIndicator = {
    [highContrastSelector]: {
        opacity: "1",
        background: HighContrastColor.selectedBackground,
        "border-color": HighContrastColor.selectedText,
    },
};
