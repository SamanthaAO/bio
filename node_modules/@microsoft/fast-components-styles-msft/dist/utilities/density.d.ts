import { DesignSystem, DesignSystemResolver } from "../design-system";
export declare enum DensityCategory {
    compact = "compact",
    normal = "normal",
    spacious = "spacious"
}
/**
 * Returns the component height formatted in the provided unit or px by default.
 *
 * @param lines The logical number of lines the component takes, typically 1.
 * @param unit The unit of measurement; px by default.
 */
export declare function height(lines?: number, unit?: string): DesignSystemResolver<string>;
/**
 * Returns the component height as a number.
 *
 * @param lines The logical number of lines the component takes, typically 1.
 */
export declare function heightNumber(lines?: number): DesignSystemResolver<number>;
/**
 * Returns the higher-level category for the density setting.
 *
 * @param designSystem The design system config.
 */
export declare function getDensityCategory(designSystem: DesignSystem): DensityCategory;
/**
 * Returns a value based on the higher-level category for the density setting.
 * Used to adjust things like type size and sizing that is based on the category rather than individual density.
 *
 * @param compactValue The adjustment when the category is "compact"
 * @param normalValue The adjustment when the category is "normal"
 * @param spaciousValue The adjustment when the category is "spacious"
 */
export declare function densityCategorySwitch<T = number>(compactValue: T | DesignSystemResolver<T>, normalValue: T | DesignSystemResolver<T>, spaciousValue: T | DesignSystemResolver<T>): DesignSystemResolver<T>;
/**
 * Returns the standard horizontal spacing for text and icons formatted in the provided unit or px by default.
 *
 * @param adjustment Any border that should be removed from the overall content spacing.
 * @param unit The unit of measurement; px by default.
 */
export declare function horizontalSpacing(adjustment?: number | DesignSystemResolver<number>, unit?: string): DesignSystemResolver<string>;
/**
 * Returns the standard horizontal spacing for text and icons as a number.
 *
 * @param adjustment Any border that should be removed from the overall content spacing.
 */
export declare function horizontalSpacingNumber(adjustment?: number): DesignSystemResolver<number>;
/**
 * Returns the width and height for an icon formatted in pixels.
 */
export declare function glyphSize(designSystem: DesignSystem): string;
export declare function glyphSize(unit: string): DesignSystemResolver<string>;
/**
 * Returns the width and height for an icon as a number.
 */
export declare function glyphSizeNumber(designSystem: DesignSystem): number;
/**
 * @deprecated Use height instead.
 * @param value
 * @param unit
 */
export declare function density(value: number, unit?: string): (config: DesignSystem) => string;
