import { DesignSystem, DesignSystemResolver } from "../design-system";
import { Palette } from "../utilities/color/palette";
import { Direction } from "@microsoft/fast-web-utilities";
import { FontWeight } from "./fonts";
/**
 * Safely retrieves the value from a key of the DesignSystem.
 */
export declare function getDesignSystemValue<T extends DesignSystem, K extends keyof T>(key: K): (designSystem?: T) => T[K];
/**
 * Retrieve the backgroundColor when invoked with a DesignSystem
 */
export declare const backgroundColor: DesignSystemResolver<string>;
/**
 * Retrieve the accentBaseColor when invoked with a DesignSystem
 */
export declare const accentBaseColor: DesignSystemResolver<string>;
/**
 * Retrieve the cornerRadius when invoked with a DesignSystem
 */
export declare const cornerRadius: DesignSystemResolver<number>;
/**
 * Retrieve the elevatedCornerRadius when invoked with a DesignSystem
 */
export declare const elevatedCornerRadius: DesignSystemResolver<number>;
/**
 * Retrieve the neutral palette from the design system
 */
export declare const neutralPalette: DesignSystemResolver<Palette>;
/**
 * Retrieve the accent palette from the design system
 */
export declare const accentPalette: DesignSystemResolver<Palette>;
/**
 * Retrieve the contrast from the design system
 */
export declare const contrast: DesignSystemResolver<number>;
/**
 * Retrieve the designUnit from the design system
 */
export declare const designUnit: DesignSystemResolver<number>;
/**
 * Retrieve the baseHeightMultiplier from the design system
 */
export declare const baseHeightMultiplier: DesignSystemResolver<number>;
/**
 * Retrieve the baseHorizontalSpacingMultiplier from the design system
 */
export declare const baseHorizontalSpacingMultiplier: DesignSystemResolver<number>;
/**
 * Retrieve the direction from the design system
 */
export declare const direction: DesignSystemResolver<Direction>;
/**
 * Retrieve the outlineWidth from the design system
 */
export declare const outlineWidth: DesignSystemResolver<number>;
/**
 * Retrieve the focusOutlineWidth from the design system
 */
export declare const focusOutlineWidth: DesignSystemResolver<number>;
/**
 * Retrieve the direction from the design system
 */
export declare const disabledOpacity: DesignSystemResolver<number>;
export declare const accentFillRestDelta: DesignSystemResolver<number>;
export declare const accentFillHoverDelta: DesignSystemResolver<number>;
export declare const accentFillActiveDelta: DesignSystemResolver<number>;
export declare const accentFillFocusDelta: DesignSystemResolver<number>;
export declare const accentFillSelectedDelta: DesignSystemResolver<number>;
export declare const accentForegroundRestDelta: DesignSystemResolver<number>;
export declare const accentForegroundHoverDelta: DesignSystemResolver<number>;
export declare const accentForegroundActiveDelta: DesignSystemResolver<number>;
export declare const accentForegroundFocusDelta: DesignSystemResolver<number>;
export declare const neutralFillRestDelta: DesignSystemResolver<number>;
export declare const neutralFillHoverDelta: DesignSystemResolver<number>;
export declare const neutralFillActiveDelta: DesignSystemResolver<number>;
export declare const neutralFillFocusDelta: DesignSystemResolver<number>;
export declare const neutralFillSelectedDelta: DesignSystemResolver<number>;
export declare const neutralFillInputRestDelta: DesignSystemResolver<number>;
export declare const neutralFillInputHoverDelta: DesignSystemResolver<number>;
export declare const neutralFillInputActiveDelta: DesignSystemResolver<number>;
export declare const neutralFillInputFocusDelta: DesignSystemResolver<number>;
export declare const neutralFillInputSelectedDelta: DesignSystemResolver<number>;
export declare const neutralFillStealthRestDelta: DesignSystemResolver<number>;
export declare const neutralFillStealthHoverDelta: DesignSystemResolver<number>;
export declare const neutralFillStealthActiveDelta: DesignSystemResolver<number>;
export declare const neutralFillStealthFocusDelta: DesignSystemResolver<number>;
export declare const neutralFillStealthSelectedDelta: DesignSystemResolver<number>;
export declare const neutralFillToggleHoverDelta: DesignSystemResolver<number>;
export declare const neutralFillToggleActiveDelta: DesignSystemResolver<number>;
export declare const neutralFillToggleFocusDelta: DesignSystemResolver<number>;
export declare const baseLayerLuminance: DesignSystemResolver<number>;
export declare const neutralFillCardDelta: DesignSystemResolver<number>;
/**
 * @deprecated Neutral foreground is now based on contrast and this is no longer used.
 */
export declare const neutralForegroundDarkIndex: DesignSystemResolver<number>;
/**
 * @deprecated Neutral foreground is now based on contrast and this is no longer used.
 */
export declare const neutralForegroundLightIndex: DesignSystemResolver<number>;
export declare const neutralForegroundHoverDelta: DesignSystemResolver<number>;
export declare const neutralForegroundActiveDelta: DesignSystemResolver<number>;
export declare const neutralForegroundFocusDelta: DesignSystemResolver<number>;
export declare const neutralDividerRestDelta: DesignSystemResolver<number>;
export declare const neutralOutlineRestDelta: DesignSystemResolver<number>;
export declare const neutralOutlineHoverDelta: DesignSystemResolver<number>;
export declare const neutralOutlineActiveDelta: DesignSystemResolver<number>;
export declare const getFontWeight: DesignSystemResolver<FontWeight>;
export declare const neutralOutlineFocusDelta: DesignSystemResolver<number>;
