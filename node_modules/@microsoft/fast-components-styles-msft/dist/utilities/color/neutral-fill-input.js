import { findClosestBackgroundIndex, getSwatch, isDarkMode } from "./palette";
import { colorRecipeFactory, } from "./common";
import { neutralFillInputActiveDelta, neutralFillInputFocusDelta, neutralFillInputHoverDelta, neutralFillInputRestDelta, neutralFillInputSelectedDelta, neutralPalette, } from "../design-system";
/**
 * Algorithm for determining neutral backplate colors
 */
function neutralFillInputAlgorithm(indexResolver) {
    return (designSystem) => {
        const direction = isDarkMode(designSystem) ? -1 : 1;
        return getSwatch(findClosestBackgroundIndex(designSystem) -
            indexResolver(designSystem) * direction, neutralPalette(designSystem));
    };
}
export const neutralFillInput = colorRecipeFactory((designSystem) => {
    return {
        rest: neutralFillInputRest(designSystem),
        hover: neutralFillInputHover(designSystem),
        active: neutralFillInputActive(designSystem),
        focus: neutralFillInputFocus(designSystem),
        selected: neutralFillInputSelected(designSystem),
    };
});
export const neutralFillInputRest = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputRestDelta));
export const neutralFillInputHover = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputHoverDelta));
export const neutralFillInputActive = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputActiveDelta));
export const neutralFillInputFocus = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputFocusDelta));
export const neutralFillInputSelected = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputSelectedDelta));
