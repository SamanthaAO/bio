import { neutralFillActiveDelta, neutralFillFocusDelta, neutralFillHoverDelta, neutralFillRestDelta, neutralFillStealthActiveDelta, neutralFillStealthFocusDelta, neutralFillStealthHoverDelta, neutralFillStealthRestDelta, neutralFillStealthSelectedDelta, neutralPalette, } from "../design-system";
import { colorRecipeFactory, designSystemResolverMax, } from "./common";
import { findClosestBackgroundIndex, getSwatch } from "./palette";
const neutralFillStealthSwapThreshold = designSystemResolverMax(neutralFillRestDelta, neutralFillHoverDelta, neutralFillActiveDelta, neutralFillFocusDelta, neutralFillStealthRestDelta, neutralFillStealthHoverDelta, neutralFillStealthActiveDelta, neutralFillStealthFocusDelta);
function neutralFillStealthAlgorithm(deltaResolver) {
    return (designSystem) => {
        const backgroundIndex = findClosestBackgroundIndex(designSystem);
        const swapThreshold = neutralFillStealthSwapThreshold(designSystem);
        const direction = backgroundIndex >= swapThreshold ? -1 : 1;
        return getSwatch(backgroundIndex + direction * deltaResolver(designSystem), neutralPalette(designSystem));
    };
}
export const neutralFillStealth = colorRecipeFactory((designSystem) => {
    return {
        rest: neutralFillStealthRest(designSystem),
        hover: neutralFillStealthHover(designSystem),
        active: neutralFillStealthActive(designSystem),
        focus: neutralFillStealthFocus(designSystem),
        selected: neutralFillStealthSelected(designSystem),
    };
});
export const neutralFillStealthRest = colorRecipeFactory(neutralFillStealthAlgorithm(neutralFillStealthRestDelta));
export const neutralFillStealthHover = colorRecipeFactory(neutralFillStealthAlgorithm(neutralFillStealthHoverDelta));
export const neutralFillStealthActive = colorRecipeFactory(neutralFillStealthAlgorithm(neutralFillStealthActiveDelta));
export const neutralFillStealthFocus = colorRecipeFactory(neutralFillStealthAlgorithm(neutralFillStealthFocusDelta));
export const neutralFillStealthSelected = colorRecipeFactory(neutralFillStealthAlgorithm(neutralFillStealthSelectedDelta));
