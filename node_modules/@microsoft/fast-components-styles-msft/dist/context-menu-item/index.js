import { applyCursorPointer } from "../utilities/cursor";
import { add, applyFocusVisible, format, toPx } from "@microsoft/fast-jss-utilities";
import { applyCornerRadius, applyFocusPlaceholderBorder } from "../utilities/border";
import { neutralFillStealthActive, neutralFillStealthHover, neutralFocus, neutralForegroundRest, } from "../utilities/color";
import { height, horizontalSpacingNumber } from "../utilities/density";
import { designUnit, focusOutlineWidth } from "../utilities/design-system";
import { applyDisabledState } from "../utilities/disabled";
import { applyScaledTypeRamp } from "../utilities/typography";
import { HighContrastColor, highContrastDisabled, highContrastSelected, highContrastSelector, highContrastStealth, } from "../utilities/high-contrast";
const glyphWidth = 16;
const styles = {
    contextMenuItem: Object.assign({ "list-style-type": "none", "box-sizing": "border-box", height: height(), display: "grid", "grid-template-columns": format("{0} auto {0}", toPx(add(horizontalSpacingNumber(-2), glyphWidth, horizontalSpacingNumber()))), "grid-template-rows": "auto", "justify-items": "center", "align-items": "center", padding: "0", margin: format("0 {0}", toPx(designUnit)), color: neutralForegroundRest, fill: neutralForegroundRest, "white-space": "nowrap", overflow: "hidden" }, applyCursorPointer(), applyScaledTypeRamp("t7"), applyCornerRadius(), applyFocusPlaceholderBorder(), applyFocusVisible({
        "border-color": neutralFocus,
        [highContrastSelector]: {
            color: HighContrastColor.selectedText,
            fill: HighContrastColor.selectedText,
            background: HighContrastColor.selectedBackground,
            "box-shadow": format("0 0 0 {0} inset {1}", toPx(focusOutlineWidth), () => HighContrastColor.buttonText),
        },
    }), { "&:hover": Object.assign({ background: neutralFillStealthHover }, highContrastSelected), "&:active": Object.assign({ background: neutralFillStealthActive }, highContrastSelected) }, highContrastStealth),
    contextMenuItem_contentRegion: {
        "grid-column-start": "2",
        "justify-self": "start",
        overflow: "hidden",
        "text-overflow": "ellipsis",
    },
    contextMenuItem__disabled: Object.assign({}, applyDisabledState(), highContrastDisabled, { "&:hover": Object.assign({}, highContrastDisabled) }),
};
export default styles;
