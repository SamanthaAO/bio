import { directionSwitch, format, toPx } from "@microsoft/fast-jss-utilities";
import { neutralFillStealthHover, neutralFillStealthRest, neutralForegroundRest, neutralOutlineRest, } from "../utilities/color";
import { designUnit, outlineWidth } from "../utilities/design-system";
import { highContrastButtonColorIndicator, HighContrastColor, highContrastColorBackground, highContrastForeground, highContrastHighlightColorIndicator, highContrastOptOutProperty, highContrastSelector, } from "../utilities/high-contrast";
const white = "#FFF";
const black = "#101010";
const darkModeNeutralForegroundRest = neutralForegroundRest(() => black);
const lightModeNeutralForegroundRest = neutralForegroundRest(() => white);
const darkModeNeutralFillStealthRest = neutralFillStealthRest(() => black);
const lightModeNeutralFillStealthRest = neutralFillStealthRest(() => white);
const darkModeNeutralOutlineRest = neutralOutlineRest(() => black);
const lightModeNeutralOutlineRest = neutralOutlineRest(() => white);
function flipperStyles() {
    return {
        position: "absolute",
        top: "calc(50% - 20px)",
        "z-index": "100",
        opacity: "0",
        transition: "all 0.2s ease-in-out",
    };
}
const styles = {
    carousel: {
        position: "relative",
        display: "inline-block",
        "&:hover": {
            "& $carousel_flipperPrevious, & $carousel_flipperNext": {
                opacity: "1",
            },
        },
        [highContrastSelector]: Object.assign({}, highContrastOptOutProperty),
    },
    carousel_slides: {},
    carousel_sequenceIndicators: {
        position: "absolute",
        bottom: "8px",
        display: "inline-flex",
        padding: "0",
        "text-align": "center",
        "z-index": "100",
        "max-width": "100%",
        left: "50%",
        transform: "translate(-50%, -50%)",
        "& > :first-child:nth-last-child(1)": {
            display: "none",
        },
    },
    carousel_sequenceIndicator: {
        display: "inline-block",
        padding: "0 2px",
        "&:focus": {
            outline: "none",
        },
        "&::before": {
            opacity: "0.45",
            border: "1px solid transparent",
            "border-radius": "40px",
            content: "''",
            display: "block",
            height: toPx(designUnit),
            width: "32px",
            transition: "all 0.05s ease-in-out",
        },
        "&:not($carousel_sequenceIndicator__active)": {
            "&:hover": {
                "&::before": Object.assign({ opacity: "0.9" }, highContrastHighlightColorIndicator),
            },
        },
    },
    carousel_sequenceIndicator__active: {
        "&::before": {
            opacity: "1",
        },
    },
    carousel_tabPanel: {
        display: "block",
    },
    carousel_tabPanel__hidden: {
        display: "none",
    },
    carousel_tabPanels: {},
    carousel_tabPanelContent: {},
    carousel_flipperPrevious: Object.assign({}, flipperStyles(), { left: directionSwitch("6px", ""), right: directionSwitch("", "6px") }),
    carousel_flipperNext: Object.assign({}, flipperStyles(), { right: directionSwitch("6px", ""), left: directionSwitch("", "6px") }),
    carousel__themeDark: {
        "& $carousel_flipperPrevious, & $carousel_flipperNext": {
            "&::before": Object.assign({ color: darkModeNeutralForegroundRest, fill: darkModeNeutralForegroundRest, background: darkModeNeutralFillStealthRest, border: format("{0} solid {1}", toPx(outlineWidth), darkModeNeutralOutlineRest) }, highContrastColorBackground),
            "& span::before": {
                "border-color": darkModeNeutralForegroundRest,
            },
            "&:hover": {
                "&::before": {
                    background: neutralFillStealthHover(() => black),
                    [highContrastSelector]: {
                        background: HighContrastColor.selectedBackground,
                        border: format("{0} solid {1}", toPx(outlineWidth), () => HighContrastColor.selectedText),
                    },
                },
                "& span::before": {
                    "border-color": darkModeNeutralForegroundRest,
                },
            },
            "& > svg": Object.assign({ fill: darkModeNeutralForegroundRest }, highContrastForeground),
            [highContrastSelector]: {
                background: "none",
            },
        },
        "& $carousel_sequenceIndicator": {
            "&::before": Object.assign({ background: darkModeNeutralFillStealthRest, "border-color": darkModeNeutralOutlineRest }, highContrastButtonColorIndicator),
            "&$carousel_sequenceIndicator__active": {
                "&::before": Object.assign({ background: darkModeNeutralFillStealthRest }, highContrastHighlightColorIndicator),
            },
        },
    },
    carousel__themeLight: {
        "& $carousel_flipperPrevious, & $carousel_flipperNext": {
            "&::before": Object.assign({ color: lightModeNeutralForegroundRest, fill: lightModeNeutralForegroundRest, background: lightModeNeutralFillStealthRest, border: format("{0} solid {1}", toPx(outlineWidth), lightModeNeutralOutlineRest) }, highContrastColorBackground),
            "& span::before": {
                "border-color": lightModeNeutralForegroundRest,
            },
            "&:hover": {
                "&::before": {
                    background: neutralFillStealthHover(() => white),
                    [highContrastSelector]: {
                        background: HighContrastColor.selectedBackground,
                        border: format("{0} solid {1}", toPx(outlineWidth), () => HighContrastColor.selectedText),
                    },
                },
                "& span::before": {
                    "border-color": lightModeNeutralForegroundRest,
                },
            },
            "& > svg": Object.assign({ fill: lightModeNeutralForegroundRest }, highContrastForeground),
            [highContrastSelector]: {
                background: "none",
            },
        },
        "& $carousel_sequenceIndicator": {
            "&::before": Object.assign({ background: lightModeNeutralFillStealthRest, "border-color": lightModeNeutralOutlineRest }, highContrastButtonColorIndicator),
            "&$carousel_sequenceIndicator__active": {
                "&::before": Object.assign({ background: lightModeNeutralFillStealthRest }, highContrastHighlightColorIndicator),
            },
        },
    },
    carousel__slideAnimatePrevious: {},
    carousel__slideAnimateNext: {},
};
export default styles;
