import { baseButton, buttonStyles } from "../patterns/button";
import { accentForegroundActive, accentForegroundHover, accentForegroundRest, neutralForegroundRest, } from "../utilities/color";
import { applyFocusVisible, toPx } from "@microsoft/fast-jss-utilities";
import { focusOutlineWidth } from "../utilities/design-system";
import { HighContrastColor, highContrastDisabledForeground, highContrastHighlightBackground, highContrastHighlightForeground, highContrastLinkValue, highContrastSelector, highContrastStealth, } from "../utilities/high-contrast";
const styles = Object.assign({}, baseButton, { button: Object.assign({}, buttonStyles(), { padding: "0", border: "0", "justify-content": "flex-start", "background-color": "transparent", color: accentForegroundRest, fill: accentForegroundRest }, applyFocusVisible(Object.assign({ "border-color": "transparent", "box-shadow": "none" }, highContrastHighlightForeground, { "& $button_contentRegion::before": Object.assign({ background: neutralForegroundRest, height: toPx(focusOutlineWidth) }, highContrastHighlightBackground) })), { "a&, button&": {}, 
        // Underline
        "& $button_contentRegion::before": {
            [highContrastSelector]: {
                background: HighContrastColor.buttonText,
            },
        }, "&:hover $button_contentRegion::before": Object.assign({ background: accentForegroundHover }, highContrastHighlightBackground), "&:hover$button__disabled $button_contentRegion::before": {
            display: "none",
        }, "&:active $button_contentRegion::before": Object.assign({ background: accentForegroundActive }, highContrastHighlightBackground), "&$button__disabled, &$button__disabled $button_contentRegion::before": Object.assign({ "background-color": "transparent" }, highContrastDisabledForeground), "&:hover:enabled": Object.assign({ color: accentForegroundHover, fill: accentForegroundHover, "background-color": "transparent" }, highContrastHighlightForeground), "&:active:enabled": {
            color: accentForegroundActive,
            fill: accentForegroundActive,
            "background-color": "transparent",
        } }, highContrastStealth, { "a&": {
            [highContrastSelector]: {
                background: HighContrastColor.background,
                color: highContrastLinkValue,
                fill: highContrastLinkValue,
            },
            // Underline
            "&:hover $button_contentRegion::before": {
                background: highContrastLinkValue,
            },
            "& $button_contentRegion::before": {
                [highContrastSelector]: {
                    background: "transparent",
                },
            },
        } }) });
export default styles;
