import { applyFocusVisible, format, subtract, toPx } from "@microsoft/fast-jss-utilities";
import { baseButton, buttonStyles } from "../patterns/button";
import { neutralFocus, neutralForegroundRest, neutralOutlineActive, neutralOutlineHover, neutralOutlineRest, } from "../utilities/color";
import { horizontalSpacing } from "../utilities/density";
import { focusOutlineWidth, outlineWidth } from "../utilities/design-system";
import { highContrastDisabledBorder, highContrastLinkBorder, highContrastLinkOutline, highContrastOutline, highContrastOutlineFocus, highContrastSelected, highContrastSelector, } from "../utilities/high-contrast";
const styles = Object.assign({}, baseButton, { button: Object.assign({}, buttonStyles(), { color: neutralForegroundRest, fill: neutralForegroundRest, background: "transparent", border: format("{0} solid {1}", toPx(outlineWidth), neutralOutlineRest), padding: format("0 {0}", horizontalSpacing(outlineWidth)), "&:hover:enabled": Object.assign({ background: "transparent", border: format("{0} solid {1}", toPx(outlineWidth), neutralOutlineHover) }, highContrastSelected), "&:active:enabled": {
            background: "transparent",
            border: format("{0} solid {1}", toPx(outlineWidth), neutralOutlineActive),
        } }, applyFocusVisible(Object.assign({ "box-shadow": format("0 0 0 {0} {1} inset", toPx(subtract(focusOutlineWidth, outlineWidth)), neutralFocus), "border-color": neutralFocus }, highContrastOutlineFocus)), { "&:disabled": Object.assign({}, highContrastDisabledBorder) }, highContrastOutline, { "a&": Object.assign({}, highContrastLinkOutline, { "&:hover": Object.assign({}, highContrastLinkBorder), "&$button__disabled": Object.assign({}, highContrastDisabledBorder, { "&:hover": {
                    [highContrastSelector]: {
                        "box-shadow": "none !important",
                    },
                } }) }) }) });
export default styles;
