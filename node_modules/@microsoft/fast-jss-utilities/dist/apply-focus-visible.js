import { canUseFocusVisible } from "@microsoft/fast-web-utilities";
/**
 * Returns the selector for the browser native :focus-visible implementation
 */
export function applyFocusVisibleSelector(selector = "") {
    return `&:focus-visible${selector}`;
}
/**
 * Returns the selector for the focus-visible polyfill
 */
export function applyFocusVisiblePolyfillSelector(selector = "") {
    return `body:not(.js-focus-visible) &:focus${selector}, .js-focus-visible &.focus-visible${selector}, .js-focus-visible [data-focus-visible-added]&${selector}`;
}
export function applyFocusVisible(a, b) {
    let styles;
    let selector;
    if (typeof a === "object" && a !== null) {
        selector = "";
        styles = a;
    }
    else if (typeof a === "string") {
        selector = a;
        styles = b;
    }
    else {
        return {};
    }
    return Object.assign({
        "&:focus": {
            outline: "none",
        },
    }, canUseFocusVisible()
        ? {
            [applyFocusVisibleSelector(selector)]: styles,
        }
        : {
            [applyFocusVisiblePolyfillSelector(selector)]: styles,
        });
}
