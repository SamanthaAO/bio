/**
 * Expose ltr and rtl strings
 */
export declare enum Direction {
    ltr = "ltr",
    rtl = "rtl"
}
/**
 * Localizes top/left/bottom/right formatted arguments, such as the format used by CSS's padding and margin
 * properties.
 * eg. when dir is RTL, "2px 3px 4px 5px" -> "2px 5px 4px 3px"
 */
export declare function localizeSpacing(dir: Direction): (value: string) => string;
/**
 * Returns a css property based on a given direction value
 */
export declare function applyLocalizedProperty(ltrProperty: string, rtlProperty: string, dir: Direction): string;
/**
 * Utility for returning one of two values, where the predicate is the
 * direction property on the design-system. If provided values are functions,
 * the function will return the return value of the function invoked with
 * the design system
 */
export declare function directionSwitch<T extends {
    direction: Direction;
}, S>(ltr: S | ((designSystem: T) => S), rtl: S | ((designSystem: T) => S)): (designSystem: T) => S;
