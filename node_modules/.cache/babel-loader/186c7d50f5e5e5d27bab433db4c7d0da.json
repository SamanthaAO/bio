{"ast":null,"code":"import { accentBaseColor, accentFillActiveDelta, accentFillFocusDelta, accentFillHoverDelta, accentFillSelectedDelta, accentPalette, neutralFillActiveDelta, neutralFillHoverDelta, neutralFillRestDelta } from \"../design-system\";\nimport { accentForegroundCut } from \"./accent-foreground-cut\";\nimport { colorRecipeFactory, contrast, designSystemResolverMax, swatchFamilyToSwatchRecipeFactory, SwatchFamilyType } from \"./common\";\nimport { findClosestBackgroundIndex, findClosestSwatchIndex, getSwatch, isDarkMode } from \"./palette\";\nimport { inRange } from \"lodash-es\";\nvar neutralFillThreshold = designSystemResolverMax(neutralFillRestDelta, neutralFillHoverDelta, neutralFillActiveDelta);\n\nfunction accentFillAlgorithm(contrastTarget) {\n  return function (designSystem) {\n    var palette = accentPalette(designSystem);\n    var paletteLength = palette.length;\n    var accent = accentBaseColor(designSystem);\n    var textColor = accentForegroundCut(Object.assign({}, designSystem, {\n      backgroundColor: accent\n    }));\n    var hoverDelta = accentFillHoverDelta(designSystem); // Use the hover direction that matches the neutral fill recipe.\n\n    var backgroundIndex = findClosestBackgroundIndex(designSystem);\n    var swapThreshold = neutralFillThreshold(designSystem);\n    var direction = backgroundIndex >= swapThreshold ? -1 : 1;\n    var maxIndex = paletteLength - 1;\n    var accentIndex = findClosestSwatchIndex(accentPalette, accent)(designSystem);\n    var accessibleOffset = 0; // Move the accent color the direction of hover, while maintaining the foreground color.\n\n    while (accessibleOffset < direction * hoverDelta && inRange(accentIndex + accessibleOffset + direction, 0, paletteLength) && contrast(palette[accentIndex + accessibleOffset + direction], textColor) >= contrastTarget && inRange(accentIndex + accessibleOffset + direction + direction, 0, maxIndex)) {\n      accessibleOffset += direction;\n    }\n\n    var hoverIndex = accentIndex + accessibleOffset;\n    var restIndex = hoverIndex + direction * -1 * hoverDelta;\n    var activeIndex = restIndex + direction * accentFillActiveDelta(designSystem);\n    var focusIndex = restIndex + direction * accentFillFocusDelta(designSystem);\n    return {\n      rest: getSwatch(restIndex, palette),\n      hover: getSwatch(hoverIndex, palette),\n      active: getSwatch(activeIndex, palette),\n      focus: getSwatch(focusIndex, palette),\n      selected: getSwatch(restIndex + (isDarkMode(designSystem) ? accentFillSelectedDelta(designSystem) * -1 : accentFillSelectedDelta(designSystem)), palette)\n    };\n  };\n}\n\nexport var accentFill = colorRecipeFactory(accentFillAlgorithm(4.5));\nexport var accentFillLarge = colorRecipeFactory(accentFillAlgorithm(3));\nexport var accentFillRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, accentFill);\nexport var accentFillHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, accentFill);\nexport var accentFillActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, accentFill);\nexport var accentFillFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, accentFill);\nexport var accentFillSelected = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.selected, accentFill);\nexport var accentFillLargeRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, accentFillLarge);\nexport var accentFillLargeHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, accentFillLarge);\nexport var accentFillLargeActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, accentFillLarge);\nexport var accentFillLargeFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, accentFillLarge);\nexport var accentFillLargeSelected = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.selected, accentFillLarge);","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-styles-msft/dist/utilities/color/accent-fill.js"],"names":["accentBaseColor","accentFillActiveDelta","accentFillFocusDelta","accentFillHoverDelta","accentFillSelectedDelta","accentPalette","neutralFillActiveDelta","neutralFillHoverDelta","neutralFillRestDelta","accentForegroundCut","colorRecipeFactory","contrast","designSystemResolverMax","swatchFamilyToSwatchRecipeFactory","SwatchFamilyType","findClosestBackgroundIndex","findClosestSwatchIndex","getSwatch","isDarkMode","inRange","neutralFillThreshold","accentFillAlgorithm","contrastTarget","designSystem","palette","paletteLength","length","accent","textColor","Object","assign","backgroundColor","hoverDelta","backgroundIndex","swapThreshold","direction","maxIndex","accentIndex","accessibleOffset","hoverIndex","restIndex","activeIndex","focusIndex","rest","hover","active","focus","selected","accentFill","accentFillLarge","accentFillRest","accentFillHover","accentFillActive","accentFillFocus","accentFillSelected","accentFillLargeRest","accentFillLargeHover","accentFillLargeActive","accentFillLargeFocus","accentFillLargeSelected"],"mappings":"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","sourcesContent":["import { accentBaseColor, accentFillActiveDelta, accentFillFocusDelta, accentFillHoverDelta, accentFillSelectedDelta, accentPalette, neutralFillActiveDelta, neutralFillHoverDelta, neutralFillRestDelta, } from \"../design-system\";\nimport { accentForegroundCut } from \"./accent-foreground-cut\";\nimport { colorRecipeFactory, contrast, designSystemResolverMax, swatchFamilyToSwatchRecipeFactory, SwatchFamilyType, } from \"./common\";\nimport { findClosestBackgroundIndex, findClosestSwatchIndex, getSwatch, isDarkMode, } from \"./palette\";\nimport { inRange } from \"lodash-es\";\nconst neutralFillThreshold = designSystemResolverMax(neutralFillRestDelta, neutralFillHoverDelta, neutralFillActiveDelta);\nfunction accentFillAlgorithm(contrastTarget) {\n    return (designSystem) => {\n        const palette = accentPalette(designSystem);\n        const paletteLength = palette.length;\n        const accent = accentBaseColor(designSystem);\n        const textColor = accentForegroundCut(Object.assign({}, designSystem, {\n            backgroundColor: accent,\n        }));\n        const hoverDelta = accentFillHoverDelta(designSystem);\n        // Use the hover direction that matches the neutral fill recipe.\n        const backgroundIndex = findClosestBackgroundIndex(designSystem);\n        const swapThreshold = neutralFillThreshold(designSystem);\n        const direction = backgroundIndex >= swapThreshold ? -1 : 1;\n        const maxIndex = paletteLength - 1;\n        const accentIndex = findClosestSwatchIndex(accentPalette, accent)(designSystem);\n        let accessibleOffset = 0;\n        // Move the accent color the direction of hover, while maintaining the foreground color.\n        while (accessibleOffset < direction * hoverDelta &&\n            inRange(accentIndex + accessibleOffset + direction, 0, paletteLength) &&\n            contrast(palette[accentIndex + accessibleOffset + direction], textColor) >=\n                contrastTarget &&\n            inRange(accentIndex + accessibleOffset + direction + direction, 0, maxIndex)) {\n            accessibleOffset += direction;\n        }\n        const hoverIndex = accentIndex + accessibleOffset;\n        const restIndex = hoverIndex + direction * -1 * hoverDelta;\n        const activeIndex = restIndex + direction * accentFillActiveDelta(designSystem);\n        const focusIndex = restIndex + direction * accentFillFocusDelta(designSystem);\n        return {\n            rest: getSwatch(restIndex, palette),\n            hover: getSwatch(hoverIndex, palette),\n            active: getSwatch(activeIndex, palette),\n            focus: getSwatch(focusIndex, palette),\n            selected: getSwatch(restIndex +\n                (isDarkMode(designSystem)\n                    ? accentFillSelectedDelta(designSystem) * -1\n                    : accentFillSelectedDelta(designSystem)), palette),\n        };\n    };\n}\nexport const accentFill = colorRecipeFactory(accentFillAlgorithm(4.5));\nexport const accentFillLarge = colorRecipeFactory(accentFillAlgorithm(3));\nexport const accentFillRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, accentFill);\nexport const accentFillHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, accentFill);\nexport const accentFillActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, accentFill);\nexport const accentFillFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, accentFill);\nexport const accentFillSelected = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.selected, accentFill);\nexport const accentFillLargeRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, accentFillLarge);\nexport const accentFillLargeHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, accentFillLarge);\nexport const accentFillLargeActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, accentFillLarge);\nexport const accentFillLargeFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, accentFillLarge);\nexport const accentFillLargeSelected = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.selected, accentFillLarge);\n"]},"metadata":{},"sourceType":"module"}