{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { textFieldOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { TextField } from \"../text-field\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TextActionAppearance, TextActionButtonPosition } from \"./text-action.props\";\n\nclass TextAction extends Foundation {\n  constructor(props) {\n    super(props);\n    this.handledProps = {\n      appearance: void 0,\n      afterGlyph: void 0,\n      beforeGlyph: void 0,\n      button: void 0,\n      buttonPosition: void 0,\n      className: void 0,\n      managedClasses: void 0\n    };\n    /**\n     * Adds focus state to outer wrapper and fires callback if passed\n     * In order to correctly focus the input and then the\n     * possible button, a class must be added instead of using\n     * focus-within via style\n     */\n\n    this.handleOnFocus = e => {\n      this.setState({\n        focused: true\n      });\n\n      if (typeof this.props.onFocus === \"function\") {\n        this.props.onFocus(e);\n      }\n    };\n    /**\n     * Removes focus state and fires callback if passed\n     */\n\n\n    this.handleOnBlur = e => {\n      this.setState({\n        focused: false\n      });\n\n      if (typeof this.props.onBlur === \"function\") {\n        this.props.onBlur(e);\n      }\n    };\n\n    this.state = {\n      focused: false\n    };\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.generateClassNames()\n    }, this.buttonExists() && this.props.buttonPosition === TextActionButtonPosition.before ? this.generateButton() : null, this.generateBeforeGlyph(), React.createElement(TextField, Object.assign({}, this.unhandledProps(), {\n      disabled: get(this.props, \"disabled\", null),\n      placeholder: get(this.props, \"placeholder\", null),\n      jssStyleSheet: textFieldOverrides,\n      onBlur: this.handleOnBlur,\n      onFocus: this.handleOnFocus\n    })), this.generateAfterGlyph(), this.buttonExists() && this.props.buttonPosition === TextActionButtonPosition.after ? this.generateButton() : null);\n  }\n  /**\n   * Generates class names\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          textAction = _this$props$managedCl.textAction,\n          textAction__disabled = _this$props$managedCl.textAction__disabled,\n          textAction__focus = _this$props$managedCl.textAction__focus;\n    return super.generateClassNames(classNames(textAction, [this.props.managedClasses[`textAction__${TextActionAppearance[this.props.appearance]}`], !!this.props.appearance], [textAction__disabled, this.props.disabled], [textAction__focus, this.state.focused]));\n  }\n  /**\n   * Returns truthy if button exist\n   */\n\n\n  buttonExists() {\n    return typeof this.props.button === \"function\";\n  }\n  /**\n   * Generate button\n   */\n\n\n  generateButton() {\n    return this.props.button(classNames(this.props.managedClasses.textAction_button), this.props.disabled);\n  }\n  /**\n   * Generates after glyph based on props\n   */\n\n\n  generateAfterGlyph() {\n    if (typeof this.props.afterGlyph === \"function\") {\n      return this.props.afterGlyph(classNames(this.props.managedClasses.textAction_afterGlyph));\n    }\n  }\n  /**\n   * Generates before glyph based on props\n   */\n\n\n  generateBeforeGlyph() {\n    if (typeof this.props.beforeGlyph === \"function\") {\n      return this.props.beforeGlyph(classNames(this.props.managedClasses.textAction_beforeGlyph));\n    }\n  }\n\n}\n\nTextAction.displayName = `${DisplayNamePrefix}TextAction`;\nTextAction.defaultProps = {\n  buttonPosition: TextActionButtonPosition.after,\n  managedClasses: {}\n};\nexport default TextAction;\nexport * from \"./text-action.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/text-action/text-action.js"],"names":["Foundation","textFieldOverrides","classNames","get","React","TextField","DisplayNamePrefix","TextActionAppearance","TextActionButtonPosition","TextAction","constructor","props","handledProps","appearance","afterGlyph","beforeGlyph","button","buttonPosition","className","managedClasses","handleOnFocus","e","setState","focused","onFocus","handleOnBlur","onBlur","state","render","createElement","generateClassNames","buttonExists","before","generateButton","generateBeforeGlyph","Object","assign","unhandledProps","disabled","placeholder","jssStyleSheet","generateAfterGlyph","after","textAction","textAction__disabled","textAction__focus","textAction_button","textAction_afterGlyph","textAction_beforeGlyph","displayName","defaultProps"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { textFieldOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { TextField } from \"../text-field\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TextActionAppearance, TextActionButtonPosition, } from \"./text-action.props\";\nclass TextAction extends Foundation {\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            appearance: void 0,\n            afterGlyph: void 0,\n            beforeGlyph: void 0,\n            button: void 0,\n            buttonPosition: void 0,\n            className: void 0,\n            managedClasses: void 0,\n        };\n        /**\n         * Adds focus state to outer wrapper and fires callback if passed\n         * In order to correctly focus the input and then the\n         * possible button, a class must be added instead of using\n         * focus-within via style\n         */\n        this.handleOnFocus = (e) => {\n            this.setState({ focused: true });\n            if (typeof this.props.onFocus === \"function\") {\n                this.props.onFocus(e);\n            }\n        };\n        /**\n         * Removes focus state and fires callback if passed\n         */\n        this.handleOnBlur = (e) => {\n            this.setState({ focused: false });\n            if (typeof this.props.onBlur === \"function\") {\n                this.props.onBlur(e);\n            }\n        };\n        this.state = {\n            focused: false,\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(\"div\", { className: this.generateClassNames() },\n            this.buttonExists() &&\n                this.props.buttonPosition === TextActionButtonPosition.before\n                ? this.generateButton()\n                : null,\n            this.generateBeforeGlyph(),\n            React.createElement(TextField, Object.assign({}, this.unhandledProps(), { disabled: get(this.props, \"disabled\", null), placeholder: get(this.props, \"placeholder\", null), jssStyleSheet: textFieldOverrides, onBlur: this.handleOnBlur, onFocus: this.handleOnFocus })),\n            this.generateAfterGlyph(),\n            this.buttonExists() &&\n                this.props.buttonPosition === TextActionButtonPosition.after\n                ? this.generateButton()\n                : null));\n    }\n    /**\n     * Generates class names\n     */\n    generateClassNames() {\n        const { textAction, textAction__disabled, textAction__focus, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(textAction, [\n            this.props.managedClasses[`textAction__${TextActionAppearance[this.props.appearance]}`],\n            !!this.props.appearance,\n        ], [textAction__disabled, this.props.disabled], [textAction__focus, this.state.focused]));\n    }\n    /**\n     * Returns truthy if button exist\n     */\n    buttonExists() {\n        return typeof this.props.button === \"function\";\n    }\n    /**\n     * Generate button\n     */\n    generateButton() {\n        return this.props.button(classNames(this.props.managedClasses.textAction_button), this.props.disabled);\n    }\n    /**\n     * Generates after glyph based on props\n     */\n    generateAfterGlyph() {\n        if (typeof this.props.afterGlyph === \"function\") {\n            return this.props.afterGlyph(classNames(this.props.managedClasses.textAction_afterGlyph));\n        }\n    }\n    /**\n     * Generates before glyph based on props\n     */\n    generateBeforeGlyph() {\n        if (typeof this.props.beforeGlyph === \"function\") {\n            return this.props.beforeGlyph(classNames(this.props.managedClasses.textAction_beforeGlyph));\n        }\n    }\n}\nTextAction.displayName = `${DisplayNamePrefix}TextAction`;\nTextAction.defaultProps = {\n    buttonPosition: TextActionButtonPosition.after,\n    managedClasses: {},\n};\nexport default TextAction;\nexport * from \"./text-action.props\";\n"]},"metadata":{},"sourceType":"module"}