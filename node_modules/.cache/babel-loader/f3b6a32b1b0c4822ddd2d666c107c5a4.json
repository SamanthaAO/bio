{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeEscape, keyCodeTab } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport Tabbable from \"tabbable\";\n\nvar Dialog =\n/*#__PURE__*/\nfunction (_Foundation) {\n  _inherits(Dialog, _Foundation);\n\n  function Dialog() {\n    var _this;\n\n    _classCallCheck(this, Dialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dialog).apply(this, arguments));\n    _this.handledProps = {\n      describedBy: void 0,\n      label: void 0,\n      labelledBy: void 0,\n      contentWidth: void 0,\n      contentHeight: void 0,\n      modal: void 0,\n      managedClasses: void 0,\n      onDismiss: void 0,\n      visible: void 0\n    };\n    _this.rootElement = React.createRef();\n    /**\n     * Check if props demand a key listener\n     */\n\n    _this.shouldAddKeyListener = function (props) {\n      if (props.modal || props.onDismiss) {\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * handles document key down events\n     */\n\n\n    _this.handleDocumentKeyDown = function (event) {\n      if (!event.defaultPrevented && _this.props.visible) {\n        switch (event.keyCode) {\n          case keyCodeEscape:\n            _this.checkForSoftDismiss(event);\n\n            break;\n\n          case keyCodeTab:\n            _this.handleTabKeyDown(event);\n\n            break;\n        }\n      }\n    };\n    /**\n     * Invokes dialog soft dismiss if appropriate\n     */\n\n\n    _this.checkForSoftDismiss = function (event) {\n      if (_this.props.onDismiss && typeof _this.props.onDismiss === \"function\" && _this.props.visible) {\n        _this.props.onDismiss(event);\n      }\n    };\n    /**\n     * process tab key down events\n     */\n\n\n    _this.handleTabKeyDown = function (event) {\n      if (!_this.props.modal) {\n        // only handle tab keystrokes when modal\n        return;\n      }\n\n      var tabbableElements = Tabbable(_this.rootElement.current);\n      var tabbableElementCount = tabbableElements.length;\n\n      if (tabbableElementCount === 0) {\n        _this.tryFocusOnRootElement();\n\n        event.preventDefault();\n        return;\n      } // intervene in normal tab order for first and last items in list\n\n\n      if (event.shiftKey && event.target === tabbableElements[0]) {\n        tabbableElements[tabbableElementCount - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && event.target === tabbableElements[tabbableElementCount - 1]) {\n        tabbableElements[0].focus();\n        event.preventDefault();\n      }\n    };\n    /**\n     * forces focus to first tabbable element of modal dialog if document gains focus while dialog is open\n     */\n\n\n    _this.handleDocumentFocus = function (event) {\n      if (!event.defaultPrevented && _this.shouldForceFocus(event.target)) {\n        _this.focusOnFirstElement();\n\n        event.preventDefault();\n      }\n    };\n    /**\n     * test to avoid forcing focus when focus is already within\n     */\n\n\n    _this.shouldForceFocus = function (currentFocusElement) {\n      return _this.props.visible && _this.rootElement.current instanceof HTMLElement && !_this.rootElement.current.contains(currentFocusElement);\n    };\n    /**\n     * focus on first element of tab queue\n     */\n\n\n    _this.focusOnFirstElement = function () {\n      if (canUseDOM() && _this.rootElement.current instanceof HTMLElement) {\n        var tabbableElements = Tabbable(_this.rootElement.current);\n\n        if (tabbableElements.length === 0) {\n          _this.tryFocusOnRootElement();\n        } else {\n          tabbableElements[0].focus();\n        }\n      }\n    };\n    /**\n     * if no tabbable elements try to focus root element\n     * generally a modal dialog should be expected to have a focusable element\n     */\n\n\n    _this.tryFocusOnRootElement = function () {\n      if (_this.rootElement.current instanceof HTMLElement) {\n        _this.rootElement.current.focus();\n      }\n    };\n\n    return _this;\n  }\n  /**\n   * Renders the component\n   */\n\n\n  _createClass(Dialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$managedCl = this.props.managedClasses,\n          dialog_positioningRegion = _this$props$managedCl.dialog_positioningRegion,\n          dialog_contentRegion = _this$props$managedCl.dialog_contentRegion;\n      return React.createElement(\"div\", Object.assign({\n        ref: this.rootElement\n      }, this.unhandledProps(), {\n        className: this.generateClassNames(),\n        \"aria-hidden\": !this.props.visible\n      }), React.createElement(\"div\", {\n        className: classNames(dialog_positioningRegion)\n      }, this.renderModalOverlay(), React.createElement(\"div\", {\n        role: \"dialog\",\n        tabIndex: -1,\n        className: classNames(dialog_contentRegion),\n        style: {\n          height: this.props.contentHeight,\n          width: this.props.contentWidth\n        },\n        \"aria-describedby\": this.props.describedBy,\n        \"aria-labelledby\": this.props.labelledBy,\n        \"aria-label\": this.props.label\n      }, this.props.children)));\n    }\n    /**\n     * React life-cycle method\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM()) {\n        if (this.shouldAddKeyListener(this.props)) {\n          document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n        }\n\n        if (this.props.modal) {\n          document.addEventListener(\"focusin\", this.handleDocumentFocus);\n\n          if (this.shouldForceFocus(document.activeElement)) {\n            this.focusOnFirstElement();\n          }\n        }\n      }\n    }\n    /**\n     * React life-cycle method\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (canUseDOM()) {\n        if (!prevProps.modal && this.props.modal) {\n          document.addEventListener(\"focusin\", this.handleDocumentFocus);\n          this.focusOnFirstElement();\n        } else if (prevProps.modal && !this.props.modal) {\n          document.removeEventListener(\"focusin\", this.handleDocumentFocus);\n        }\n\n        if (!this.shouldAddKeyListener(prevProps) && this.shouldAddKeyListener(this.props)) {\n          document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n        } else if (this.shouldAddKeyListener(prevProps) && !this.shouldAddKeyListener(this.props)) {\n          document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n        }\n      }\n    }\n    /**\n     * React life-cycle method\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (canUseDOM()) {\n        if (this.shouldAddKeyListener(this.props)) {\n          document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n        }\n\n        if (this.props.modal) {\n          document.removeEventListener(\"focusin\", this.handleDocumentFocus);\n        }\n      }\n    }\n    /**\n     * Generates class names\n     */\n\n  }, {\n    key: \"generateClassNames\",\n    value: function generateClassNames() {\n      return _get(_getPrototypeOf(Dialog.prototype), \"generateClassNames\", this).call(this, classNames(this.props.managedClasses.dialog));\n    }\n    /**\n     * Renders the modal overlay\n     */\n\n  }, {\n    key: \"renderModalOverlay\",\n    value: function renderModalOverlay() {\n      if (!this.props.modal) {\n        return;\n      }\n\n      return React.createElement(\"div\", {\n        className: classNames(this.props.managedClasses.dialog_modalOverlay),\n        onClick: this.checkForSoftDismiss,\n        onTouchStart: this.checkForSoftDismiss,\n        role: \"presentation\",\n        tabIndex: -1,\n        style: {\n          touchAction: \"none\"\n        }\n      });\n    }\n  }]);\n\n  return Dialog;\n}(Foundation);\n\nDialog.defaultProps = {\n  contentHeight: \"480px\",\n  contentWidth: \"640px\",\n  visible: false,\n  managedClasses: {}\n};\nDialog.displayName = \"\".concat(DisplayNamePrefix, \"Dialog\");\nexport default Dialog;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/dialog/dialog.js"],"names":["Foundation","classNames","keyCodeEscape","keyCodeTab","canUseDOM","React","DisplayNamePrefix","Tabbable","Dialog","arguments","handledProps","describedBy","label","labelledBy","contentWidth","contentHeight","modal","managedClasses","onDismiss","visible","rootElement","createRef","shouldAddKeyListener","props","handleDocumentKeyDown","event","defaultPrevented","keyCode","checkForSoftDismiss","handleTabKeyDown","tabbableElements","current","tabbableElementCount","length","tryFocusOnRootElement","preventDefault","shiftKey","target","focus","handleDocumentFocus","shouldForceFocus","focusOnFirstElement","currentFocusElement","HTMLElement","contains","dialog_positioningRegion","dialog_contentRegion","createElement","Object","assign","ref","unhandledProps","className","generateClassNames","renderModalOverlay","role","tabIndex","style","height","width","children","document","addEventListener","activeElement","prevProps","removeEventListener","dialog","dialog_modalOverlay","onClick","onTouchStart","touchAction","defaultProps","displayName"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeEscape, keyCodeTab } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport Tabbable from \"tabbable\";\nclass Dialog extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            describedBy: void 0,\n            label: void 0,\n            labelledBy: void 0,\n            contentWidth: void 0,\n            contentHeight: void 0,\n            modal: void 0,\n            managedClasses: void 0,\n            onDismiss: void 0,\n            visible: void 0,\n        };\n        this.rootElement = React.createRef();\n        /**\n         * Check if props demand a key listener\n         */\n        this.shouldAddKeyListener = (props) => {\n            if (props.modal || props.onDismiss) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         * handles document key down events\n         */\n        this.handleDocumentKeyDown = (event) => {\n            if (!event.defaultPrevented && this.props.visible) {\n                switch (event.keyCode) {\n                    case keyCodeEscape:\n                        this.checkForSoftDismiss(event);\n                        break;\n                    case keyCodeTab:\n                        this.handleTabKeyDown(event);\n                        break;\n                }\n            }\n        };\n        /**\n         * Invokes dialog soft dismiss if appropriate\n         */\n        this.checkForSoftDismiss = (event) => {\n            if (this.props.onDismiss &&\n                typeof this.props.onDismiss === \"function\" &&\n                this.props.visible) {\n                this.props.onDismiss(event);\n            }\n        };\n        /**\n         * process tab key down events\n         */\n        this.handleTabKeyDown = (event) => {\n            if (!this.props.modal) {\n                // only handle tab keystrokes when modal\n                return;\n            }\n            const tabbableElements = Tabbable(this.rootElement.current);\n            const tabbableElementCount = tabbableElements.length;\n            if (tabbableElementCount === 0) {\n                this.tryFocusOnRootElement();\n                event.preventDefault();\n                return;\n            }\n            // intervene in normal tab order for first and last items in list\n            if (event.shiftKey && event.target === tabbableElements[0]) {\n                tabbableElements[tabbableElementCount - 1].focus();\n                event.preventDefault();\n            }\n            else if (!event.shiftKey &&\n                event.target === tabbableElements[tabbableElementCount - 1]) {\n                tabbableElements[0].focus();\n                event.preventDefault();\n            }\n        };\n        /**\n         * forces focus to first tabbable element of modal dialog if document gains focus while dialog is open\n         */\n        this.handleDocumentFocus = (event) => {\n            if (!event.defaultPrevented &&\n                this.shouldForceFocus(event.target)) {\n                this.focusOnFirstElement();\n                event.preventDefault();\n            }\n        };\n        /**\n         * test to avoid forcing focus when focus is already within\n         */\n        this.shouldForceFocus = (currentFocusElement) => {\n            return (this.props.visible &&\n                this.rootElement.current instanceof HTMLElement &&\n                !this.rootElement.current.contains(currentFocusElement));\n        };\n        /**\n         * focus on first element of tab queue\n         */\n        this.focusOnFirstElement = () => {\n            if (canUseDOM() && this.rootElement.current instanceof HTMLElement) {\n                const tabbableElements = Tabbable(this.rootElement.current);\n                if (tabbableElements.length === 0) {\n                    this.tryFocusOnRootElement();\n                }\n                else {\n                    tabbableElements[0].focus();\n                }\n            }\n        };\n        /**\n         * if no tabbable elements try to focus root element\n         * generally a modal dialog should be expected to have a focusable element\n         */\n        this.tryFocusOnRootElement = () => {\n            if (this.rootElement.current instanceof HTMLElement) {\n                this.rootElement.current.focus();\n            }\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        const { dialog_positioningRegion, dialog_contentRegion, } = this.props.managedClasses;\n        return (React.createElement(\"div\", Object.assign({ ref: this.rootElement }, this.unhandledProps(), { className: this.generateClassNames(), \"aria-hidden\": !this.props.visible }),\n            React.createElement(\"div\", { className: classNames(dialog_positioningRegion) },\n                this.renderModalOverlay(),\n                React.createElement(\"div\", { role: \"dialog\", tabIndex: -1, className: classNames(dialog_contentRegion), style: {\n                        height: this.props.contentHeight,\n                        width: this.props.contentWidth,\n                    }, \"aria-describedby\": this.props.describedBy, \"aria-labelledby\": this.props.labelledBy, \"aria-label\": this.props.label }, this.props.children))));\n    }\n    /**\n     * React life-cycle method\n     */\n    componentDidMount() {\n        if (canUseDOM()) {\n            if (this.shouldAddKeyListener(this.props)) {\n                document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n            }\n            if (this.props.modal) {\n                document.addEventListener(\"focusin\", this.handleDocumentFocus);\n                if (this.shouldForceFocus(document.activeElement)) {\n                    this.focusOnFirstElement();\n                }\n            }\n        }\n    }\n    /**\n     * React life-cycle method\n     */\n    componentDidUpdate(prevProps) {\n        if (canUseDOM()) {\n            if (!prevProps.modal && this.props.modal) {\n                document.addEventListener(\"focusin\", this.handleDocumentFocus);\n                this.focusOnFirstElement();\n            }\n            else if (prevProps.modal && !this.props.modal) {\n                document.removeEventListener(\"focusin\", this.handleDocumentFocus);\n            }\n            if (!this.shouldAddKeyListener(prevProps) &&\n                this.shouldAddKeyListener(this.props)) {\n                document.addEventListener(\"keydown\", this.handleDocumentKeyDown);\n            }\n            else if (this.shouldAddKeyListener(prevProps) &&\n                !this.shouldAddKeyListener(this.props)) {\n                document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n            }\n        }\n    }\n    /**\n     * React life-cycle method\n     */\n    componentWillUnmount() {\n        if (canUseDOM()) {\n            if (this.shouldAddKeyListener(this.props)) {\n                document.removeEventListener(\"keydown\", this.handleDocumentKeyDown);\n            }\n            if (this.props.modal) {\n                document.removeEventListener(\"focusin\", this.handleDocumentFocus);\n            }\n        }\n    }\n    /**\n     * Generates class names\n     */\n    generateClassNames() {\n        return super.generateClassNames(classNames(this.props.managedClasses.dialog));\n    }\n    /**\n     * Renders the modal overlay\n     */\n    renderModalOverlay() {\n        if (!this.props.modal) {\n            return;\n        }\n        return (React.createElement(\"div\", { className: classNames(this.props.managedClasses.dialog_modalOverlay), onClick: this.checkForSoftDismiss, onTouchStart: this.checkForSoftDismiss, role: \"presentation\", tabIndex: -1, style: {\n                touchAction: \"none\",\n            } }));\n    }\n}\nDialog.defaultProps = {\n    contentHeight: \"480px\",\n    contentWidth: \"640px\",\n    visible: false,\n    managedClasses: {},\n};\nDialog.displayName = `${DisplayNamePrefix}Dialog`;\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}