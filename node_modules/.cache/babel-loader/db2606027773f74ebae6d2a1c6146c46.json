{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeArrowDown, keyCodeArrowLeft, keyCodeArrowRight, keyCodeArrowUp, keyCodeEnd, keyCodeHome } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport Tab from \"./tab\";\nimport TabItem from \"./tab-item\";\nimport TabPanel from \"./tab-panel\";\nexport var TabLocation;\n\n(function (TabLocation) {\n  TabLocation[TabLocation[\"first\"] = 0] = \"first\";\n  TabLocation[TabLocation[\"last\"] = 1] = \"last\";\n  TabLocation[TabLocation[\"previous\"] = 2] = \"previous\";\n  TabLocation[TabLocation[\"next\"] = 3] = \"next\";\n})(TabLocation || (TabLocation = {}));\n\nexport var TabsSlot;\n\n(function (TabsSlot) {\n  TabsSlot[\"tab\"] = \"tab\";\n  TabsSlot[\"tabItem\"] = \"tab-item\";\n  TabsSlot[\"tabPanel\"] = \"tab-panel\";\n})(TabsSlot || (TabsSlot = {}));\n\nclass Tabs extends Foundation {\n  constructor(props) {\n    super(props);\n    this.handledProps = {\n      activeId: void 0,\n      disableTabFocus: void 0,\n      label: void 0,\n      managedClasses: void 0,\n      onUpdate: void 0,\n      orientation: void 0,\n      tabItemSlot: void 0,\n      tabPanelSlot: void 0,\n      tabSlot: void 0,\n      items: void 0\n    };\n\n    this.renderTabItem = (tabItem, index) => {\n      if (this.props.items) {\n        return this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tab))[0];\n      }\n\n      return React.cloneElement(this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tab))[0], {\n        key: tabItem.props.id,\n        \"aria-controls\": tabItem.props.id,\n        active: this.state.activeId === tabItem.props.id,\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        tabIndex: this.state.activeId !== tabItem.props.id ? -1 : 0\n      });\n    };\n\n    this.renderTabPanel = (tabItem, index) => {\n      if (this.props.items) {\n        return this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tabPanel))[0];\n      }\n\n      return React.cloneElement(this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tabPanel))[0], {\n        key: tabItem.props.id,\n        id: tabItem.props.id,\n        \"aria-labelledby\": tabItem.props.id,\n        active: this.state.activeId === tabItem.props.id\n      });\n    };\n    /**\n     * Handles the click event on the tab element\n     */\n\n\n    this.handleClick = e => {\n      if (!this.props.activeId) {\n        this.setState({\n          activeId: e.currentTarget.getAttribute(\"aria-controls\")\n        });\n      } else if (typeof this.props.onUpdate === \"function\") {\n        this.props.onUpdate(e.currentTarget.getAttribute(\"aria-controls\"));\n      }\n    };\n    /**\n     * Handles the keydown event on the tab element\n     */\n\n\n    this.handleKeyDown = e => {\n      switch (e.keyCode) {\n        case keyCodeArrowLeft:\n        case keyCodeArrowUp:\n          this.activateTab(TabLocation.previous);\n          break;\n\n        case keyCodeArrowRight:\n        case keyCodeArrowDown:\n          this.activateTab(TabLocation.next);\n          break;\n\n        case keyCodeHome:\n          this.activateTab(TabLocation.first);\n          break;\n\n        case keyCodeEnd:\n          this.activateTab(TabLocation.last);\n          break;\n      }\n    };\n    /**\n     * Gets the current index by tab item ID\n     */\n\n\n    this.getCurrentIndexById = item => {\n      return item.props.id === this.state.activeId;\n    };\n\n    this.tabListRef = React.createRef();\n\n    if (!this.props.items) {\n      const items = React.Children.toArray(this.tabItems());\n      this.state = {\n        activeId: this.props.activeId ? this.props.activeId : items.length > 0 ? get(items[0], \"props.id\") : \"\"\n      };\n    } else {\n      this.state = {\n        activeId: \"\"\n      };\n    }\n  }\n  /**\n   * React life-cycle method\n   */\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n      return {\n        activeId: nextProps.activeId\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    const tabElements = this.renderTabElements();\n    const _this$props$managedCl = this.props.managedClasses,\n          tabs_tabList = _this$props$managedCl.tabs_tabList,\n          tabs_tabPanels = _this$props$managedCl.tabs_tabPanels;\n    return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames()\n    }), React.createElement(\"div\", {\n      role: \"tablist\",\n      ref: this.tabListRef,\n      className: classNames(tabs_tabList),\n      \"aria-label\": this.props.label,\n      \"aria-orientation\": this.props.orientation\n    }, tabElements), React.createElement(\"div\", {\n      className: classNames(tabs_tabPanels)\n    }, this.renderTabPanels()), this.withoutSlot(TabsSlot.tabItem, this.props.children));\n  }\n  /**\n   * React lifecycle hook\n   */\n\n\n  componentDidUpdate(prevProps) {\n    if (typeof this.props.activeId === \"string\" && this.props.activeId !== prevProps.activeId && this.props.disableTabFocus !== true) {\n      const items = React.Children.toArray(this.tabItems());\n      const currentItemIndex = items.findIndex(this.getCurrentIndexById); // Do nothing if current item index is not found\n\n      if (currentItemIndex !== -1) {\n        Array.from(this.tabListRef.current.children)[currentItemIndex].focus();\n      }\n    }\n  }\n  /**\n   * Generates class names based on props\n   */\n\n\n  generateClassNames() {\n    return super.generateClassNames(classNames(this.props.managedClasses.tabs));\n  }\n  /**\n   * Create tab content class names\n   */\n\n\n  generateTabContentClassNames() {\n    return classNames(this.props.managedClasses.tabs_tabContent);\n  }\n  /**\n   * Create tab panel content class names\n   */\n\n\n  generateTabPanelContentClassNames() {\n    return classNames(this.props.managedClasses.tabs_tabPanelContent);\n  }\n  /**\n   * Create tab class names\n   */\n\n\n  generateTabClassNames() {\n    const _this$props$managedCl2 = this.props.managedClasses,\n          tab = _this$props$managedCl2.tab,\n          tab__active = _this$props$managedCl2.tab__active;\n    return {\n      managedClasses: {\n        tab: classNames(tab),\n        tab__active: classNames(tab__active)\n      }\n    };\n  }\n  /**\n   * Create tab panel class names\n   */\n\n\n  generateTabPanelClassNames() {\n    const _this$props$managedCl3 = this.props.managedClasses,\n          tabPanel = _this$props$managedCl3.tabPanel,\n          tabPanel__hidden = _this$props$managedCl3.tabPanel__hidden;\n    return {\n      managedClasses: {\n        tabPanel: classNames(tabPanel),\n        tabPanel__hidden: classNames(tabPanel__hidden)\n      }\n    };\n  }\n  /**\n   * Renders the tab elements\n   */\n\n\n  renderTabElements() {\n    return React.Children.map(this.tabItems(), this.renderTabItem);\n  }\n\n  setActive(tabItem, index) {\n    if (this.state.activeId) {\n      return this.state.activeId === tabItem.id;\n    } else {\n      return index === 0;\n    }\n  }\n\n  tabItems() {\n    if (this.props.items) {\n      return this.props.items.map((tabItem, index) => {\n        return React.createElement(TabItem, {\n          key: tabItem.id,\n          id: tabItem.id,\n          slot: TabsSlot.tabItem\n        }, React.createElement(Tab, Object.assign({}, this.generateTabClassNames(), {\n          slot: TabsSlot.tab,\n          key: tabItem.id,\n          \"aria-controls\": tabItem.id,\n          active: this.setActive(tabItem, index),\n          onClick: this.handleClick,\n          onKeyDown: this.handleKeyDown,\n          tabIndex: this.setActive(tabItem, index) ? 0 : -1\n        }), tabItem.tab(this.generateTabContentClassNames())), React.createElement(TabPanel, Object.assign({}, this.generateTabPanelClassNames(), {\n          slot: TabsSlot.tabPanel,\n          key: tabItem.id,\n          id: tabItem.id,\n          \"aria-labelledby\": tabItem.id,\n          active: this.setActive(tabItem, index)\n        }), tabItem.content(this.generateTabPanelContentClassNames())));\n      });\n    } else {\n      return this.getChildrenBySlot(this.props.children, this.getSlot(TabsSlot.tabItem));\n    }\n  }\n  /**\n   * Renders the tab panels\n   */\n\n\n  renderTabPanels() {\n    return React.Children.map(this.tabItems(), this.renderTabPanel);\n  }\n  /**\n   * Activates a tab\n   */\n\n\n  activateTab(location) {\n    const items = React.Children.toArray(this.tabItems());\n    const count = items.length;\n    const currentItemIndex = React.Children.toArray(items).findIndex(this.getCurrentIndexById);\n    let itemIndex;\n\n    switch (location) {\n      case TabLocation.first:\n        itemIndex = 0;\n        break;\n\n      case TabLocation.last:\n        itemIndex = count - 1;\n        break;\n\n      case TabLocation.previous:\n        itemIndex = currentItemIndex > 0 ? currentItemIndex - 1 : count - 1;\n        break;\n\n      case TabLocation.next:\n        itemIndex = currentItemIndex < count - 1 ? currentItemIndex + 1 : 0;\n        break;\n    }\n\n    const activeId = get(items[itemIndex], \"props.id\");\n\n    if (!this.props.activeId) {\n      this.setState({\n        activeId\n      });\n      Array.from(this.tabListRef.current.children)[itemIndex].focus();\n    } else if (typeof this.props.onUpdate === \"function\") {\n      this.props.onUpdate(activeId);\n    }\n  }\n  /**\n   * Gets the slot to use for tab children\n   */\n\n\n  getSlot(slot) {\n    switch (slot) {\n      case TabsSlot.tab:\n        return typeof this.props.tabSlot === \"string\" ? this.props.tabSlot : TabsSlot.tab;\n\n      case TabsSlot.tabItem:\n        return typeof this.props.tabItemSlot === \"string\" ? this.props.tabItemSlot : TabsSlot.tabItem;\n\n      case TabsSlot.tabPanel:\n        return typeof this.props.tabPanelSlot === \"string\" ? this.props.tabPanelSlot : TabsSlot.tabPanel;\n    }\n  }\n  /**\n   * Gets the child by the slot property\n   */\n\n\n  getChildrenBySlot(children, slot) {\n    const childBySlot = this.withSlot(slot, children);\n    return slot !== this.getSlot(TabsSlot.tabItem) ? childBySlot : React.Children.map(childBySlot, node => {\n      return this.isValidTabItem(node) ? node : null;\n    });\n  }\n  /**\n   * Return a tab item if it has a tab and tab panel\n   */\n\n\n  isValidTabItem(child) {\n    const children = get(child, \"props.children\");\n    return !!this.getChildrenBySlot(children, this.getSlot(TabsSlot.tab))[0] && !!this.getChildrenBySlot(children, this.getSlot(TabsSlot.tabPanel))[0];\n  }\n\n}\n\nTabs.defaultProps = {\n  disableTabFocus: false,\n  managedClasses: {}\n};\nTabs.displayName = `${DisplayNamePrefix}Tabs`;\nexport default Tabs;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/tabs/tabs.js"],"names":["Foundation","classNames","keyCodeArrowDown","keyCodeArrowLeft","keyCodeArrowRight","keyCodeArrowUp","keyCodeEnd","keyCodeHome","get","React","DisplayNamePrefix","Tab","TabItem","TabPanel","TabLocation","TabsSlot","Tabs","constructor","props","handledProps","activeId","disableTabFocus","label","managedClasses","onUpdate","orientation","tabItemSlot","tabPanelSlot","tabSlot","items","renderTabItem","tabItem","index","getChildrenBySlot","children","getSlot","tab","cloneElement","key","id","active","state","onClick","handleClick","onKeyDown","handleKeyDown","tabIndex","renderTabPanel","tabPanel","e","setState","currentTarget","getAttribute","keyCode","activateTab","previous","next","first","last","getCurrentIndexById","item","tabListRef","createRef","Children","toArray","tabItems","length","getDerivedStateFromProps","nextProps","prevState","render","tabElements","renderTabElements","tabs_tabList","tabs_tabPanels","createElement","Object","assign","unhandledProps","className","generateClassNames","role","ref","renderTabPanels","withoutSlot","componentDidUpdate","prevProps","currentItemIndex","findIndex","Array","from","current","focus","tabs","generateTabContentClassNames","tabs_tabContent","generateTabPanelContentClassNames","tabs_tabPanelContent","generateTabClassNames","tab__active","generateTabPanelClassNames","tabPanel__hidden","map","setActive","slot","content","location","count","itemIndex","childBySlot","withSlot","node","isValidTabItem","child","defaultProps","displayName"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeArrowDown, keyCodeArrowLeft, keyCodeArrowRight, keyCodeArrowUp, keyCodeEnd, keyCodeHome, } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport Tab from \"./tab\";\nimport TabItem from \"./tab-item\";\nimport TabPanel from \"./tab-panel\";\nexport var TabLocation;\n(function (TabLocation) {\n    TabLocation[TabLocation[\"first\"] = 0] = \"first\";\n    TabLocation[TabLocation[\"last\"] = 1] = \"last\";\n    TabLocation[TabLocation[\"previous\"] = 2] = \"previous\";\n    TabLocation[TabLocation[\"next\"] = 3] = \"next\";\n})(TabLocation || (TabLocation = {}));\nexport var TabsSlot;\n(function (TabsSlot) {\n    TabsSlot[\"tab\"] = \"tab\";\n    TabsSlot[\"tabItem\"] = \"tab-item\";\n    TabsSlot[\"tabPanel\"] = \"tab-panel\";\n})(TabsSlot || (TabsSlot = {}));\nclass Tabs extends Foundation {\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            activeId: void 0,\n            disableTabFocus: void 0,\n            label: void 0,\n            managedClasses: void 0,\n            onUpdate: void 0,\n            orientation: void 0,\n            tabItemSlot: void 0,\n            tabPanelSlot: void 0,\n            tabSlot: void 0,\n            items: void 0,\n        };\n        this.renderTabItem = (tabItem, index) => {\n            if (this.props.items) {\n                return this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tab))[0];\n            }\n            return React.cloneElement(this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tab))[0], {\n                key: tabItem.props.id,\n                \"aria-controls\": tabItem.props.id,\n                active: this.state.activeId === tabItem.props.id,\n                onClick: this.handleClick,\n                onKeyDown: this.handleKeyDown,\n                tabIndex: this.state.activeId !== tabItem.props.id ? -1 : 0,\n            });\n        };\n        this.renderTabPanel = (tabItem, index) => {\n            if (this.props.items) {\n                return this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tabPanel))[0];\n            }\n            return React.cloneElement(this.getChildrenBySlot(tabItem.props.children, this.getSlot(TabsSlot.tabPanel))[0], {\n                key: tabItem.props.id,\n                id: tabItem.props.id,\n                \"aria-labelledby\": tabItem.props.id,\n                active: this.state.activeId === tabItem.props.id,\n            });\n        };\n        /**\n         * Handles the click event on the tab element\n         */\n        this.handleClick = (e) => {\n            if (!this.props.activeId) {\n                this.setState({\n                    activeId: e.currentTarget.getAttribute(\"aria-controls\"),\n                });\n            }\n            else if (typeof this.props.onUpdate === \"function\") {\n                this.props.onUpdate(e.currentTarget.getAttribute(\"aria-controls\"));\n            }\n        };\n        /**\n         * Handles the keydown event on the tab element\n         */\n        this.handleKeyDown = (e) => {\n            switch (e.keyCode) {\n                case keyCodeArrowLeft:\n                case keyCodeArrowUp:\n                    this.activateTab(TabLocation.previous);\n                    break;\n                case keyCodeArrowRight:\n                case keyCodeArrowDown:\n                    this.activateTab(TabLocation.next);\n                    break;\n                case keyCodeHome:\n                    this.activateTab(TabLocation.first);\n                    break;\n                case keyCodeEnd:\n                    this.activateTab(TabLocation.last);\n                    break;\n            }\n        };\n        /**\n         * Gets the current index by tab item ID\n         */\n        this.getCurrentIndexById = (item) => {\n            return item.props.id === this.state.activeId;\n        };\n        this.tabListRef = React.createRef();\n        if (!this.props.items) {\n            const items = React.Children.toArray(this.tabItems());\n            this.state = {\n                activeId: this.props.activeId\n                    ? this.props.activeId\n                    : items.length > 0\n                        ? get(items[0], \"props.id\")\n                        : \"\",\n            };\n        }\n        else {\n            this.state = {\n                activeId: \"\",\n            };\n        }\n    }\n    /**\n     * React life-cycle method\n     */\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n            return {\n                activeId: nextProps.activeId,\n            };\n        }\n        return null;\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        const tabElements = this.renderTabElements();\n        const { tabs_tabList, tabs_tabPanels, } = this.props.managedClasses;\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames() }),\n            React.createElement(\"div\", { role: \"tablist\", ref: this.tabListRef, className: classNames(tabs_tabList), \"aria-label\": this.props.label, \"aria-orientation\": this.props.orientation }, tabElements),\n            React.createElement(\"div\", { className: classNames(tabs_tabPanels) }, this.renderTabPanels()),\n            this.withoutSlot(TabsSlot.tabItem, this.props.children)));\n    }\n    /**\n     * React lifecycle hook\n     */\n    componentDidUpdate(prevProps) {\n        if (typeof this.props.activeId === \"string\" &&\n            this.props.activeId !== prevProps.activeId &&\n            this.props.disableTabFocus !== true) {\n            const items = React.Children.toArray(this.tabItems());\n            const currentItemIndex = items.findIndex(this.getCurrentIndexById);\n            // Do nothing if current item index is not found\n            if (currentItemIndex !== -1) {\n                Array.from(this.tabListRef.current.children)[currentItemIndex].focus();\n            }\n        }\n    }\n    /**\n     * Generates class names based on props\n     */\n    generateClassNames() {\n        return super.generateClassNames(classNames(this.props.managedClasses.tabs));\n    }\n    /**\n     * Create tab content class names\n     */\n    generateTabContentClassNames() {\n        return classNames(this.props.managedClasses.tabs_tabContent);\n    }\n    /**\n     * Create tab panel content class names\n     */\n    generateTabPanelContentClassNames() {\n        return classNames(this.props.managedClasses.tabs_tabPanelContent);\n    }\n    /**\n     * Create tab class names\n     */\n    generateTabClassNames() {\n        const { tab, tab__active } = this.props.managedClasses;\n        return {\n            managedClasses: {\n                tab: classNames(tab),\n                tab__active: classNames(tab__active),\n            },\n        };\n    }\n    /**\n     * Create tab panel class names\n     */\n    generateTabPanelClassNames() {\n        const { tabPanel, tabPanel__hidden, } = this.props.managedClasses;\n        return {\n            managedClasses: {\n                tabPanel: classNames(tabPanel),\n                tabPanel__hidden: classNames(tabPanel__hidden),\n            },\n        };\n    }\n    /**\n     * Renders the tab elements\n     */\n    renderTabElements() {\n        return React.Children.map(this.tabItems(), this.renderTabItem);\n    }\n    setActive(tabItem, index) {\n        if (this.state.activeId) {\n            return this.state.activeId === tabItem.id;\n        }\n        else {\n            return index === 0;\n        }\n    }\n    tabItems() {\n        if (this.props.items) {\n            return this.props.items.map((tabItem, index) => {\n                return (React.createElement(TabItem, { key: tabItem.id, id: tabItem.id, slot: TabsSlot.tabItem },\n                    React.createElement(Tab, Object.assign({}, this.generateTabClassNames(), { slot: TabsSlot.tab, key: tabItem.id, \"aria-controls\": tabItem.id, active: this.setActive(tabItem, index), onClick: this.handleClick, onKeyDown: this.handleKeyDown, tabIndex: this.setActive(tabItem, index) ? 0 : -1 }), tabItem.tab(this.generateTabContentClassNames())),\n                    React.createElement(TabPanel, Object.assign({}, this.generateTabPanelClassNames(), { slot: TabsSlot.tabPanel, key: tabItem.id, id: tabItem.id, \"aria-labelledby\": tabItem.id, active: this.setActive(tabItem, index) }), tabItem.content(this.generateTabPanelContentClassNames()))));\n            });\n        }\n        else {\n            return this.getChildrenBySlot(this.props.children, this.getSlot(TabsSlot.tabItem));\n        }\n    }\n    /**\n     * Renders the tab panels\n     */\n    renderTabPanels() {\n        return React.Children.map(this.tabItems(), this.renderTabPanel);\n    }\n    /**\n     * Activates a tab\n     */\n    activateTab(location) {\n        const items = React.Children.toArray(this.tabItems());\n        const count = items.length;\n        const currentItemIndex = React.Children.toArray(items).findIndex(this.getCurrentIndexById);\n        let itemIndex;\n        switch (location) {\n            case TabLocation.first:\n                itemIndex = 0;\n                break;\n            case TabLocation.last:\n                itemIndex = count - 1;\n                break;\n            case TabLocation.previous:\n                itemIndex = currentItemIndex > 0 ? currentItemIndex - 1 : count - 1;\n                break;\n            case TabLocation.next:\n                itemIndex = currentItemIndex < count - 1 ? currentItemIndex + 1 : 0;\n                break;\n        }\n        const activeId = get(items[itemIndex], \"props.id\");\n        if (!this.props.activeId) {\n            this.setState({\n                activeId,\n            });\n            Array.from(this.tabListRef.current.children)[itemIndex].focus();\n        }\n        else if (typeof this.props.onUpdate === \"function\") {\n            this.props.onUpdate(activeId);\n        }\n    }\n    /**\n     * Gets the slot to use for tab children\n     */\n    getSlot(slot) {\n        switch (slot) {\n            case TabsSlot.tab:\n                return typeof this.props.tabSlot === \"string\"\n                    ? this.props.tabSlot\n                    : TabsSlot.tab;\n            case TabsSlot.tabItem:\n                return typeof this.props.tabItemSlot === \"string\"\n                    ? this.props.tabItemSlot\n                    : TabsSlot.tabItem;\n            case TabsSlot.tabPanel:\n                return typeof this.props.tabPanelSlot === \"string\"\n                    ? this.props.tabPanelSlot\n                    : TabsSlot.tabPanel;\n        }\n    }\n    /**\n     * Gets the child by the slot property\n     */\n    getChildrenBySlot(children, slot) {\n        const childBySlot = this.withSlot(slot, children);\n        return slot !== this.getSlot(TabsSlot.tabItem)\n            ? childBySlot\n            : React.Children.map(childBySlot, (node) => {\n                return this.isValidTabItem(node) ? node : null;\n            });\n    }\n    /**\n     * Return a tab item if it has a tab and tab panel\n     */\n    isValidTabItem(child) {\n        const children = get(child, \"props.children\");\n        return (!!this.getChildrenBySlot(children, this.getSlot(TabsSlot.tab))[0] &&\n            !!this.getChildrenBySlot(children, this.getSlot(TabsSlot.tabPanel))[0]);\n    }\n}\nTabs.defaultProps = {\n    disableTabFocus: false,\n    managedClasses: {},\n};\nTabs.displayName = `${DisplayNamePrefix}Tabs`;\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}