{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isElementInView_1 = require(\"../utilities/isElementInView\");\n\nvar ScrollBase_1 = require(\"./ScrollBase\");\n/**\n * Utility for registering element/callback pairs where the callback will be called when the element enters the view-port\n */\n\n\nvar ViewEnterTrigger =\n/** @class */\nfunction (_super) {\n  __extends(ViewEnterTrigger, _super);\n\n  function ViewEnterTrigger() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Check if elements are in view-port and apply scroll method if they are\n   */\n\n\n  ViewEnterTrigger.prototype.update = function () {\n    var _this = this;\n\n    _super.prototype.update.call(this);\n\n    this.subscriptions.forEach(function (subscription, index) {\n      var inView = isElementInView_1.default(subscription.element); // If the element is in view but previously wasn't\n\n      if (inView && !subscription.inView) {\n        subscription.callback(_this.scrollDistance);\n      }\n\n      if (inView !== subscription.inView) {\n        subscription.inView = inView;\n      }\n    });\n  };\n\n  return ViewEnterTrigger;\n}(ScrollBase_1.default);\n\nexports.default = ViewEnterTrigger;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-animation/dist/triggers/ViewEnterTrigger.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","isElementInView_1","require","ScrollBase_1","ViewEnterTrigger","_super","apply","arguments","update","_this","call","subscriptions","forEach","subscription","index","inView","default","element","callback","scrollDistance"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaAN,MAAM,CAACU,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA1B;AACA;;;;;AAGA,IAAIE,gBAAgB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACpDrB,EAAAA,SAAS,CAACoB,gBAAD,EAAmBC,MAAnB,CAAT;;AACA,WAASD,gBAAT,GAA4B;AACxB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;;;;;AAGAH,EAAAA,gBAAgB,CAACR,SAAjB,CAA2BY,MAA3B,GAAoC,YAAY;AAC5C,QAAIC,KAAK,GAAG,IAAZ;;AACAJ,IAAAA,MAAM,CAACT,SAAP,CAAiBY,MAAjB,CAAwBE,IAAxB,CAA6B,IAA7B;;AACA,SAAKC,aAAL,CAAmBC,OAAnB,CAA2B,UAAUC,YAAV,EAAwBC,KAAxB,EAA+B;AACtD,UAAIC,MAAM,GAAGd,iBAAiB,CAACe,OAAlB,CAA0BH,YAAY,CAACI,OAAvC,CAAb,CADsD,CAEtD;;AACA,UAAIF,MAAM,IAAI,CAACF,YAAY,CAACE,MAA5B,EAAoC;AAChCF,QAAAA,YAAY,CAACK,QAAb,CAAsBT,KAAK,CAACU,cAA5B;AACH;;AACD,UAAIJ,MAAM,KAAKF,YAAY,CAACE,MAA5B,EAAoC;AAChCF,QAAAA,YAAY,CAACE,MAAb,GAAsBA,MAAtB;AACH;AACJ,KATD;AAUH,GAbD;;AAcA,SAAOX,gBAAP;AACH,CAvBqC,CAuBpCD,YAAY,CAACa,OAvBuB,CAAtC;;AAwBAjB,OAAO,CAACiB,OAAR,GAAkBZ,gBAAlB","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isElementInView_1 = require(\"../utilities/isElementInView\");\nvar ScrollBase_1 = require(\"./ScrollBase\");\n/**\n * Utility for registering element/callback pairs where the callback will be called when the element enters the view-port\n */\nvar ViewEnterTrigger = /** @class */ (function (_super) {\n    __extends(ViewEnterTrigger, _super);\n    function ViewEnterTrigger() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Check if elements are in view-port and apply scroll method if they are\n     */\n    ViewEnterTrigger.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        this.subscriptions.forEach(function (subscription, index) {\n            var inView = isElementInView_1.default(subscription.element);\n            // If the element is in view but previously wasn't\n            if (inView && !subscription.inView) {\n                subscription.callback(_this.scrollDistance);\n            }\n            if (inView !== subscription.inView) {\n                subscription.inView = inView;\n            }\n        });\n    };\n    return ViewEnterTrigger;\n}(ScrollBase_1.default));\nexports.default = ViewEnterTrigger;\n"]},"metadata":{},"sourceType":"script"}