{"ast":null,"code":"import React from \"react\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TreeViewItem as BaseTreeViewItem } from \"@microsoft/fast-components-react-base\";\n\nclass TreeViewItem extends Foundation {\n  constructor() {\n    super(...arguments);\n    this.handledProps = {\n      dragConnect: void 0,\n      expandCollapseGlyph: void 0,\n      titleContent: void 0,\n      children: void 0,\n      managedClasses: void 0,\n      selected: void 0,\n      defaultExpanded: void 0,\n      onExpandedChange: void 0,\n      onSelected: void 0,\n      beforeContent: void 0,\n      afterContent: void 0\n    };\n\n    this.generateDefaultExpandCollapseGlyph = className => {\n      return React.createElement(\"svg\", {\n        viewBox: \"0 0 16 16\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: className\n      }, React.createElement(\"path\", {\n        d: \"M4.29 12L12 4.29V12H4.29z\"\n      }));\n    };\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(BaseTreeViewItem, Object.assign({}, this.unhandledProps(), {\n      titleContent: this.generateTitleContent(),\n      dragConnect: this.props.dragConnect,\n      expandCollapseGlyph: this.generateExpandCollapseGlyph(),\n      managedClasses: this.props.managedClasses,\n      selected: this.props.selected,\n      defaultExpanded: this.props.defaultExpanded,\n      onSelected: this.props.onSelected\n    }), this.props.children);\n  }\n\n  generateTitleContent() {\n    return React.createElement(React.Fragment, null, this.generateBeforeContent(), this.props.titleContent, this.generateAfterContent());\n  }\n\n  generateAfterContent() {\n    if (typeof this.props.afterContent === \"function\") {\n      return this.props.afterContent(this.props.managedClasses.treeViewItem_afterContent);\n    }\n  }\n\n  generateBeforeContent() {\n    if (typeof this.props.beforeContent === \"function\") {\n      return this.props.beforeContent(this.props.managedClasses.treeViewItem_beforeContent);\n    }\n  }\n\n  generateExpandCollapseGlyph() {\n    const treeViewItem_expandCollapseGlyph = this.props.managedClasses.treeViewItem_expandCollapseGlyph;\n    return () => {\n      if (typeof this.props.expandCollapseGlyph === \"function\") {\n        return this.props.expandCollapseGlyph(treeViewItem_expandCollapseGlyph);\n      } else {\n        return this.generateDefaultExpandCollapseGlyph(treeViewItem_expandCollapseGlyph);\n      }\n    };\n  }\n\n}\n\nTreeViewItem.displayName = `${DisplayNamePrefix}TreeViewItem`;\nTreeViewItem.defaultProps = {\n  managedClasses: {}\n};\nexport default TreeViewItem;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/tree-view-item/tree-view-item.js"],"names":["React","Foundation","DisplayNamePrefix","TreeViewItem","BaseTreeViewItem","constructor","arguments","handledProps","dragConnect","expandCollapseGlyph","titleContent","children","managedClasses","selected","defaultExpanded","onExpandedChange","onSelected","beforeContent","afterContent","generateDefaultExpandCollapseGlyph","className","createElement","viewBox","xmlns","d","render","Object","assign","unhandledProps","generateTitleContent","props","generateExpandCollapseGlyph","Fragment","generateBeforeContent","generateAfterContent","treeViewItem_afterContent","treeViewItem_beforeContent","treeViewItem_expandCollapseGlyph","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TreeViewItem as BaseTreeViewItem } from \"@microsoft/fast-components-react-base\";\nclass TreeViewItem extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            dragConnect: void 0,\n            expandCollapseGlyph: void 0,\n            titleContent: void 0,\n            children: void 0,\n            managedClasses: void 0,\n            selected: void 0,\n            defaultExpanded: void 0,\n            onExpandedChange: void 0,\n            onSelected: void 0,\n            beforeContent: void 0,\n            afterContent: void 0,\n        };\n        this.generateDefaultExpandCollapseGlyph = (className) => {\n            return (React.createElement(\"svg\", { viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\", className: className },\n                React.createElement(\"path\", { d: \"M4.29 12L12 4.29V12H4.29z\" })));\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(BaseTreeViewItem, Object.assign({}, this.unhandledProps(), { titleContent: this.generateTitleContent(), dragConnect: this.props.dragConnect, expandCollapseGlyph: this.generateExpandCollapseGlyph(), managedClasses: this.props.managedClasses, selected: this.props.selected, defaultExpanded: this.props.defaultExpanded, onSelected: this.props.onSelected }), this.props.children));\n    }\n    generateTitleContent() {\n        return (React.createElement(React.Fragment, null,\n            this.generateBeforeContent(),\n            this.props.titleContent,\n            this.generateAfterContent()));\n    }\n    generateAfterContent() {\n        if (typeof this.props.afterContent === \"function\") {\n            return this.props.afterContent(this.props.managedClasses.treeViewItem_afterContent);\n        }\n    }\n    generateBeforeContent() {\n        if (typeof this.props.beforeContent === \"function\") {\n            return this.props.beforeContent(this.props.managedClasses.treeViewItem_beforeContent);\n        }\n    }\n    generateExpandCollapseGlyph() {\n        const { treeViewItem_expandCollapseGlyph, } = this.props.managedClasses;\n        return () => {\n            if (typeof this.props.expandCollapseGlyph === \"function\") {\n                return this.props.expandCollapseGlyph(treeViewItem_expandCollapseGlyph);\n            }\n            else {\n                return this.generateDefaultExpandCollapseGlyph(treeViewItem_expandCollapseGlyph);\n            }\n        };\n    }\n}\nTreeViewItem.displayName = `${DisplayNamePrefix}TreeViewItem`;\nTreeViewItem.defaultProps = {\n    managedClasses: {},\n};\nexport default TreeViewItem;\n"]},"metadata":{},"sourceType":"module"}