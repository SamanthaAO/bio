{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isElementInView_1 = require(\"../utilities/isElementInView\");\n\nvar lodash_es_1 = require(\"lodash-es\");\n\nvar scrollY_1 = require(\"../utilities/scrollY\");\n/**\n * Scroll trigger base-class that handles event binding and element/callback registration.\n */\n\n\nvar ScrollTrigger =\n/** @class */\nfunction () {\n  function ScrollTrigger() {\n    var _this = this;\n\n    this.subscriptions = [];\n    this.scrollDistance = 0;\n    this.openRequestAnimationFrame = false;\n    this.useRequestAnimationFrame = false;\n    /**\n     * Request's an animation frame if there are currently no open animation frame requests\n     */\n\n    this.requestFrame = function () {\n      if (_this.openRequestAnimationFrame) {\n        return;\n      }\n\n      _this.openRequestAnimationFrame = true;\n      window.requestAnimationFrame(_this.update);\n    };\n\n    this.useRequestAnimationFrame = window.hasOwnProperty(\"requestAnimationFrame\");\n    this.lastScrollY = scrollY_1.default(); // We need to use .bind instead of lambda (fat-arrow) syntax here because\n    // protected methods declared as lambda functions cannot be invoked by\n    // extending classes via the `super` object\n\n    this.update = this.update.bind(this);\n  }\n  /**\n   * Subscribe an element and callback for scroll triggers\n   */\n\n\n  ScrollTrigger.prototype.subscribe = function (element, callback) {\n    if (!(element instanceof HTMLElement) || typeof callback !== \"function\" || this.isSubscribed(element, callback)) {\n      return;\n    }\n\n    if (this.subscriptions.length === 0) {\n      if (this.useRequestAnimationFrame) {\n        window.addEventListener(\"scroll\", this.requestFrame);\n      } else {\n        // If we can't use window.requestAnimationFrame, just throttle the update method\n        this.update = lodash_es_1.throttle(this.update, 1000 / 60); // 60fps\n\n        window.addEventListener(\"scroll\", this.update);\n      }\n    }\n\n    this.subscriptions.push({\n      element: element,\n      callback: callback,\n      inView: isElementInView_1.default(element)\n    });\n  };\n  /**\n   * Unsubscribe an element and callback for scroll triggers\n   */\n\n\n  ScrollTrigger.prototype.unsubscribe = function (element, callback) {\n    this.subscriptions = this.subscriptions.filter(function (subscription) {\n      return !(element === subscription.element && callback === subscription.callback);\n    });\n\n    if (this.subscriptions.length === 0) {\n      window.removeEventListener(\"scroll\", this.useRequestAnimationFrame ? this.requestFrame : this.update);\n    }\n  };\n  /**\n   * Make any arbitrary updates to UI\n   */\n\n\n  ScrollTrigger.prototype.update = function () {\n    var yOffset = scrollY_1.default();\n    this.openRequestAnimationFrame = false;\n    this.scrollDistance = yOffset - this.lastScrollY;\n    this.lastScrollY = yOffset;\n  };\n  /**\n   * Checks to see if element/callback pairs have been registered so we don't duplicate registration.\n   */\n\n\n  ScrollTrigger.prototype.isSubscribed = function (element, callback) {\n    return !!this.subscriptions.filter(function (subscription) {\n      return element === subscription.element && callback === subscription.callback;\n    }).length;\n  };\n\n  return ScrollTrigger;\n}();\n\nexports.default = ScrollTrigger;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/fastPlay/my-app/node_modules/@microsoft/fast-animation/dist/triggers/ScrollBase.js"],"names":["Object","defineProperty","exports","value","isElementInView_1","require","lodash_es_1","scrollY_1","ScrollTrigger","_this","subscriptions","scrollDistance","openRequestAnimationFrame","useRequestAnimationFrame","requestFrame","window","requestAnimationFrame","update","hasOwnProperty","lastScrollY","default","bind","prototype","subscribe","element","callback","HTMLElement","isSubscribed","length","addEventListener","throttle","push","inView","unsubscribe","filter","subscription","removeEventListener","yOffset"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isElementInView_1 = require(\"../utilities/isElementInView\");\nvar lodash_es_1 = require(\"lodash-es\");\nvar scrollY_1 = require(\"../utilities/scrollY\");\n/**\n * Scroll trigger base-class that handles event binding and element/callback registration.\n */\nvar ScrollTrigger = /** @class */ (function () {\n    function ScrollTrigger() {\n        var _this = this;\n        this.subscriptions = [];\n        this.scrollDistance = 0;\n        this.openRequestAnimationFrame = false;\n        this.useRequestAnimationFrame = false;\n        /**\n         * Request's an animation frame if there are currently no open animation frame requests\n         */\n        this.requestFrame = function () {\n            if (_this.openRequestAnimationFrame) {\n                return;\n            }\n            _this.openRequestAnimationFrame = true;\n            window.requestAnimationFrame(_this.update);\n        };\n        this.useRequestAnimationFrame = window.hasOwnProperty(\"requestAnimationFrame\");\n        this.lastScrollY = scrollY_1.default();\n        // We need to use .bind instead of lambda (fat-arrow) syntax here because\n        // protected methods declared as lambda functions cannot be invoked by\n        // extending classes via the `super` object\n        this.update = this.update.bind(this);\n    }\n    /**\n     * Subscribe an element and callback for scroll triggers\n     */\n    ScrollTrigger.prototype.subscribe = function (element, callback) {\n        if (!(element instanceof HTMLElement) ||\n            typeof callback !== \"function\" ||\n            this.isSubscribed(element, callback)) {\n            return;\n        }\n        if (this.subscriptions.length === 0) {\n            if (this.useRequestAnimationFrame) {\n                window.addEventListener(\"scroll\", this.requestFrame);\n            }\n            else {\n                // If we can't use window.requestAnimationFrame, just throttle the update method\n                this.update = lodash_es_1.throttle(this.update, 1000 / 60); // 60fps\n                window.addEventListener(\"scroll\", this.update);\n            }\n        }\n        this.subscriptions.push({\n            element: element,\n            callback: callback,\n            inView: isElementInView_1.default(element),\n        });\n    };\n    /**\n     * Unsubscribe an element and callback for scroll triggers\n     */\n    ScrollTrigger.prototype.unsubscribe = function (element, callback) {\n        this.subscriptions = this.subscriptions.filter(function (subscription) {\n            return !(element === subscription.element && callback === subscription.callback);\n        });\n        if (this.subscriptions.length === 0) {\n            window.removeEventListener(\"scroll\", this.useRequestAnimationFrame ? this.requestFrame : this.update);\n        }\n    };\n    /**\n     * Make any arbitrary updates to UI\n     */\n    ScrollTrigger.prototype.update = function () {\n        var yOffset = scrollY_1.default();\n        this.openRequestAnimationFrame = false;\n        this.scrollDistance = yOffset - this.lastScrollY;\n        this.lastScrollY = yOffset;\n    };\n    /**\n     * Checks to see if element/callback pairs have been registered so we don't duplicate registration.\n     */\n    ScrollTrigger.prototype.isSubscribed = function (element, callback) {\n        return !!this.subscriptions.filter(function (subscription) {\n            return (element === subscription.element && callback === subscription.callback);\n        }).length;\n    };\n    return ScrollTrigger;\n}());\nexports.default = ScrollTrigger;\n"]},"metadata":{},"sourceType":"script"}