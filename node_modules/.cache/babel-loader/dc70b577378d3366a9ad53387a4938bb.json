{"ast":null,"code":"function performOperation(operation) {\n  return (...args) => {\n    return designSystem => {\n      const firstArg = args[0];\n      let value = typeof firstArg === \"function\" ? firstArg(designSystem) : firstArg;\n\n      for (let i = 1; i < args.length; i++) {\n        const currentValue = args[i];\n        value = operation(value, typeof currentValue === \"function\" ? currentValue(designSystem) : currentValue);\n      }\n\n      return value;\n    };\n  };\n}\n\nconst _add = performOperation((a, b) => a + b);\n\nconst _subtract = performOperation((a, b) => a - b);\n\nconst _multiply = performOperation((a, b) => a * b);\n\nconst _divide = performOperation((a, b) => a / b);\n/**\n * Adds numbers or functions that accept a design system and return a number.\n */\n\n\nexport function add(...args) {\n  return _add.apply(this, args);\n}\n/**\n * Subtract numbers or functions that accept a design system and return a number.\n */\n\nexport function subtract(...args) {\n  return _subtract.apply(this, args);\n}\n/**\n * Multiplies numbers or functions that accept a design system and return a number.\n */\n\nexport function multiply(...args) {\n  return _multiply.apply(this, args);\n}\n/**\n * Divides numbers or functions that accept a design system and return a number.\n */\n\nexport function divide(...args) {\n  return _divide.apply(this, args);\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-jss-utilities/dist/math.js"],"names":["performOperation","operation","args","designSystem","firstArg","value","i","length","currentValue","_add","a","b","_subtract","_multiply","_divide","add","apply","subtract","multiply","divide"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,SAA1B,EAAqC;AACjC,SAAO,CAAC,GAAGC,IAAJ,KAAa;AAChB,WAAQC,YAAD,IAAkB;AACrB,YAAMC,QAAQ,GAAGF,IAAI,CAAC,CAAD,CAArB;AACA,UAAIG,KAAK,GAAG,OAAOD,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACD,YAAD,CAAzC,GAA0DC,QAAtE;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,cAAME,YAAY,GAAGN,IAAI,CAACI,CAAD,CAAzB;AACAD,QAAAA,KAAK,GAAGJ,SAAS,CAACI,KAAD,EAAQ,OAAOG,YAAP,KAAwB,UAAxB,GACnBA,YAAY,CAACL,YAAD,CADO,GAEnBK,YAFW,CAAjB;AAGH;;AACD,aAAOH,KAAP;AACH,KAVD;AAWH,GAZD;AAaH;;AACD,MAAMI,IAAI,GAAGT,gBAAgB,CAAC,CAACU,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAf,CAA7B;;AACA,MAAMC,SAAS,GAAGZ,gBAAgB,CAAC,CAACU,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAf,CAAlC;;AACA,MAAME,SAAS,GAAGb,gBAAgB,CAAC,CAACU,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAf,CAAlC;;AACA,MAAMG,OAAO,GAAGd,gBAAgB,CAAC,CAACU,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAf,CAAhC;AACA;;;;;AAGA,OAAO,SAASI,GAAT,CAAa,GAAGb,IAAhB,EAAsB;AACzB,SAAOO,IAAI,CAACO,KAAL,CAAW,IAAX,EAAiBd,IAAjB,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASe,QAAT,CAAkB,GAAGf,IAArB,EAA2B;AAC9B,SAAOU,SAAS,CAACI,KAAV,CAAgB,IAAhB,EAAsBd,IAAtB,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASgB,QAAT,CAAkB,GAAGhB,IAArB,EAA2B;AAC9B,SAAOW,SAAS,CAACG,KAAV,CAAgB,IAAhB,EAAsBd,IAAtB,CAAP;AACH;AACD;;;;AAGA,OAAO,SAASiB,MAAT,CAAgB,GAAGjB,IAAnB,EAAyB;AAC5B,SAAOY,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoBd,IAApB,CAAP;AACH","sourcesContent":["function performOperation(operation) {\n    return (...args) => {\n        return (designSystem) => {\n            const firstArg = args[0];\n            let value = typeof firstArg === \"function\" ? firstArg(designSystem) : firstArg;\n            for (let i = 1; i < args.length; i++) {\n                const currentValue = args[i];\n                value = operation(value, typeof currentValue === \"function\"\n                    ? currentValue(designSystem)\n                    : currentValue);\n            }\n            return value;\n        };\n    };\n}\nconst _add = performOperation((a, b) => a + b);\nconst _subtract = performOperation((a, b) => a - b);\nconst _multiply = performOperation((a, b) => a * b);\nconst _divide = performOperation((a, b) => a / b);\n/**\n * Adds numbers or functions that accept a design system and return a number.\n */\nexport function add(...args) {\n    return _add.apply(this, args);\n}\n/**\n * Subtract numbers or functions that accept a design system and return a number.\n */\nexport function subtract(...args) {\n    return _subtract.apply(this, args);\n}\n/**\n * Multiplies numbers or functions that accept a design system and return a number.\n */\nexport function multiply(...args) {\n    return _multiply.apply(this, args);\n}\n/**\n * Divides numbers or functions that accept a design system and return a number.\n */\nexport function divide(...args) {\n    return _divide.apply(this, args);\n}\n"]},"metadata":{},"sourceType":"module"}