{"ast":null,"code":"import React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { classNames, keyCodeArrowDown, keyCodeArrowUp } from \"@microsoft/fast-web-utilities\";\nimport { RowResizeDirection } from \"./row.props\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nexport const east = \"east\";\nexport const west = \"west\";\nexport const north = \"north\";\nexport const south = \"south\";\nexport const rowStyleSheet = {\n  row: {\n    position: \"relative\",\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    \"flex-basis\": \"auto\"\n  },\n  row__fill: {\n    flex: \"1\",\n    overflow: \"hidden\"\n  },\n  row_resizeHandle: {\n    position: \"absolute\",\n    padding: \"0\",\n    opacity: \"0\",\n    left: \"0\",\n    height: toPx(8),\n    width: \"100%\",\n    \"z-index\": \"1\",\n    transition: \"transform .04s ease-in-out\",\n    outline: \"none\",\n    transform: \"scale(1, .5)\",\n    \"&:hover\": {\n      cursor: \"ns-resize\"\n    },\n    \"&:focus\": {\n      opacity: \"1\",\n      transform: \"scale(1)\"\n    },\n    \"&:active\": {\n      opacity: \"1\",\n      transform: \"scale(1)\"\n    }\n  },\n  row__resizeNorth: {\n    \"& $row_resizeHandle\": {\n      top: \"-4px\"\n    }\n  },\n  row__resizeSouth: {\n    \"& $row_resizeHandle\": {\n      bottom: \"-4px\"\n    }\n  },\n  row__overlay: {\n    position: \"absolute\",\n    width: \"100%\",\n    \"z-index\": \"2\"\n  },\n  row__hidden: {\n    display: \"none\"\n  }\n};\n/**\n * Grid Row - use this to create rows of pane/canvas content or other content.\n */\n\nexport class Row extends Foundation {\n  constructor(props) {\n    super(props);\n    this.handledProps = {\n      collapsed: void 0,\n      collapsedHeight: void 0,\n      fill: void 0,\n      height: void 0,\n      hidden: void 0,\n      id: void 0,\n      initialHeight: void 0,\n      managedClasses: void 0,\n      maxHeight: void 0,\n      minHeight: void 0,\n      onResize: void 0,\n      resizeControl: void 0,\n      overlay: void 0,\n      resizable: void 0,\n      resizeFrom: void 0\n    };\n    /**\n     * Handle keyPress\n     */\n\n    this.onKeyDown = e => {\n      const isShift = e.shiftKey;\n      const resizeFromNorth = this.props.resizeFrom === RowResizeDirection.north;\n      const offset = isShift ? 10 : 1;\n      let height = this.getHeight();\n\n      switch (e.keyCode) {\n        case keyCodeArrowDown:\n          height = resizeFromNorth ? height - offset : height + offset;\n          break;\n\n        case keyCodeArrowUp:\n          height = resizeFromNorth ? height + offset : height - offset;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setHeight(height); // Fire the resize callback\n\n      this.onResize(e, height);\n    };\n    /**\n     * Handle mouseDown\n     */\n\n\n    this.onMouseDown = e => {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      this.setState({\n        resizing: true,\n        dragReference: e.pageY\n      });\n    };\n    /**\n     * Handle mouseUp\n     */\n\n\n    this.onMouseUp = e => {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      this.setState({\n        resizing: false,\n        dragReference: null\n      });\n    };\n\n    this.onMouseMove = e => {\n      if (!this.state.resizing) {\n        return;\n      }\n\n      const offset = this.state.dragReference - e.pageY;\n      const updatedHeight = this.props.resizeFrom === north ? this.height() + offset : this.height() - offset;\n\n      if (updatedHeight <= this.props.minHeight || updatedHeight >= this.props.maxHeight) {\n        return;\n      } // Fire the resize callback\n\n\n      this.onResize(e, updatedHeight);\n      this.setState({\n        dragReference: e.pageY\n      });\n      this.setHeight(updatedHeight);\n    };\n\n    this.onResize = (e, height) => {\n      if (typeof this.props.onResize === \"function\") {\n        this.props.onResize(e, height);\n      }\n    };\n\n    this.state = {\n      resizing: false,\n      dragReference: null,\n      height: this.props.initialHeight\n    };\n    this.onResize = throttle(this.onResize, 16);\n    this.onMouseMove = throttle(this.onMouseMove, 16);\n    this.rootElement = React.createRef();\n  }\n  /**\n   * Return the height of row. Sources from props first, and then state if props.height is undefined\n   */\n\n\n  height() {\n    return this.props.height || this.state.height;\n  }\n  /**\n   * Handle when component updates\n   */\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (canUseDOM()) {\n      if (this.state.resizing && !prevState.resizing) {\n        document.addEventListener(\"mouseup\", this.onMouseUp);\n        document.addEventListener(\"mousemove\", this.onMouseMove);\n      } else if (!this.state.resizing && prevState.resizing) {\n        document.removeEventListener(\"mouseup\", this.onMouseUp);\n        document.removeEventListener(\"mousemove\", this.onMouseMove);\n      }\n    }\n  }\n  /**\n   * Gets the generated height of the grid row depending on minHeight, maxHeight, and collapsed state.\n   */\n\n\n  getHeight() {\n    if (this.props.collapsed) {\n      return this.props.collapsedHeight;\n    } else if (this.height() <= this.props.minHeight) {\n      return this.props.minHeight;\n    } else if (this.height() >= this.props.maxHeight) {\n      return this.props.maxHeight;\n    } else {\n      return this.height();\n    }\n  }\n  /**\n   * generates the inline style property\n   */\n\n\n  generateStyleAttribute() {\n    const height = toPx(this.getHeight());\n    const styles = {};\n    styles.minHeight = this.props.collapsed ? this.props.collapsedHeight : this.props.resizable ? toPx(this.props.minHeight) : height;\n\n    if (this.props.overlay) {\n      styles.height = height;\n    } else {\n      styles.flexBasis = height;\n    }\n\n    return Object.assign(styles, this.props.style);\n  }\n  /**\n   * Render the resize button\n   */\n\n\n  renderResizeControl() {\n    if (!this.props.resizable || this.props.collapsed) {\n      return null;\n    }\n\n    const resizeProps = {\n      className: this.props.managedClasses.row_resizeHandle,\n      onMouseDown: this.onMouseDown,\n      onKeyDown: this.onKeyDown,\n      role: \"separator\"\n    };\n\n    if (typeof this.props.resizeControl === \"function\") {\n      return this.props.resizeControl(resizeProps);\n    } else {\n      return React.createElement(\"button\", Object.assign({}, resizeProps));\n    }\n  }\n\n  setHeight(height) {\n    this.setState({\n      height\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames(),\n      style: this.generateStyleAttribute(),\n      ref: this.rootElement,\n      id: this.props.id,\n      \"aria-hidden\": this.props.hidden\n    }), this.props.children, this.renderResizeControl());\n  }\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          row = _this$props$managedCl.row,\n          row__fill = _this$props$managedCl.row__fill,\n          row__resizeNorth = _this$props$managedCl.row__resizeNorth,\n          row__resizeSouth = _this$props$managedCl.row__resizeSouth,\n          row__overlay = _this$props$managedCl.row__overlay,\n          row__hidden = _this$props$managedCl.row__hidden;\n    const resizeFrom = this.props.resizeFrom;\n    const classes = classNames(row, [row__resizeNorth, resizeFrom === RowResizeDirection.north], [row__resizeSouth, resizeFrom === RowResizeDirection.south], [row__overlay, this.props.overlay], [row__hidden, this.props.hidden], [row__fill, this.props.fill]);\n    return super.generateClassNames(classes);\n  }\n\n}\nRow.displayName = \"Row\";\nRow.defaultProps = {\n  fill: false,\n  initialHeight: 40,\n  collapsedHeight: 40,\n  minHeight: 40,\n  maxHeight: 800,\n  resizable: false,\n  collapsed: false,\n  overlay: false,\n  hidden: false,\n  managedClasses: {}\n};\nexport * from \"./row.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-layouts-react/dist/row/row.js"],"names":["React","throttle","classNames","keyCodeArrowDown","keyCodeArrowUp","RowResizeDirection","toPx","Foundation","canUseDOM","east","west","north","south","rowStyleSheet","row","position","display","row__fill","flex","overflow","row_resizeHandle","padding","opacity","left","height","width","transition","outline","transform","cursor","row__resizeNorth","top","row__resizeSouth","bottom","row__overlay","row__hidden","Row","constructor","props","handledProps","collapsed","collapsedHeight","fill","hidden","id","initialHeight","managedClasses","maxHeight","minHeight","onResize","resizeControl","overlay","resizable","resizeFrom","onKeyDown","e","isShift","shiftKey","resizeFromNorth","offset","getHeight","keyCode","setHeight","onMouseDown","button","setState","resizing","dragReference","pageY","onMouseUp","onMouseMove","state","updatedHeight","rootElement","createRef","componentDidUpdate","prevProps","prevState","document","addEventListener","removeEventListener","generateStyleAttribute","styles","flexBasis","Object","assign","style","renderResizeControl","resizeProps","className","role","createElement","render","unhandledProps","generateClassNames","ref","children","classes","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { classNames, keyCodeArrowDown, keyCodeArrowUp, } from \"@microsoft/fast-web-utilities\";\nimport { RowResizeDirection, } from \"./row.props\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nexport const east = \"east\";\nexport const west = \"west\";\nexport const north = \"north\";\nexport const south = \"south\";\nexport const rowStyleSheet = {\n    row: {\n        position: \"relative\",\n        display: \"flex\",\n        \"flex-direction\": \"row\",\n        \"flex-basis\": \"auto\",\n    },\n    row__fill: {\n        flex: \"1\",\n        overflow: \"hidden\",\n    },\n    row_resizeHandle: {\n        position: \"absolute\",\n        padding: \"0\",\n        opacity: \"0\",\n        left: \"0\",\n        height: toPx(8),\n        width: \"100%\",\n        \"z-index\": \"1\",\n        transition: \"transform .04s ease-in-out\",\n        outline: \"none\",\n        transform: \"scale(1, .5)\",\n        \"&:hover\": {\n            cursor: \"ns-resize\",\n        },\n        \"&:focus\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n        },\n        \"&:active\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n        },\n    },\n    row__resizeNorth: {\n        \"& $row_resizeHandle\": {\n            top: \"-4px\",\n        },\n    },\n    row__resizeSouth: {\n        \"& $row_resizeHandle\": {\n            bottom: \"-4px\",\n        },\n    },\n    row__overlay: {\n        position: \"absolute\",\n        width: \"100%\",\n        \"z-index\": \"2\",\n    },\n    row__hidden: {\n        display: \"none\",\n    },\n};\n/**\n * Grid Row - use this to create rows of pane/canvas content or other content.\n */\nexport class Row extends Foundation {\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            collapsed: void 0,\n            collapsedHeight: void 0,\n            fill: void 0,\n            height: void 0,\n            hidden: void 0,\n            id: void 0,\n            initialHeight: void 0,\n            managedClasses: void 0,\n            maxHeight: void 0,\n            minHeight: void 0,\n            onResize: void 0,\n            resizeControl: void 0,\n            overlay: void 0,\n            resizable: void 0,\n            resizeFrom: void 0,\n        };\n        /**\n         * Handle keyPress\n         */\n        this.onKeyDown = (e) => {\n            const isShift = e.shiftKey;\n            const resizeFromNorth = this.props.resizeFrom === RowResizeDirection.north;\n            const offset = isShift ? 10 : 1;\n            let height = this.getHeight();\n            switch (e.keyCode) {\n                case keyCodeArrowDown:\n                    height = resizeFromNorth ? height - offset : height + offset;\n                    break;\n                case keyCodeArrowUp:\n                    height = resizeFromNorth ? height + offset : height - offset;\n                    break;\n                default:\n                    break;\n            }\n            this.setHeight(height);\n            // Fire the resize callback\n            this.onResize(e, height);\n        };\n        /**\n         * Handle mouseDown\n         */\n        this.onMouseDown = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: true,\n                dragReference: e.pageY,\n            });\n        };\n        /**\n         * Handle mouseUp\n         */\n        this.onMouseUp = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: false,\n                dragReference: null,\n            });\n        };\n        this.onMouseMove = (e) => {\n            if (!this.state.resizing) {\n                return;\n            }\n            const offset = this.state.dragReference - e.pageY;\n            const updatedHeight = this.props.resizeFrom === north\n                ? this.height() + offset\n                : this.height() - offset;\n            if (updatedHeight <= this.props.minHeight ||\n                updatedHeight >= this.props.maxHeight) {\n                return;\n            }\n            // Fire the resize callback\n            this.onResize(e, updatedHeight);\n            this.setState({\n                dragReference: e.pageY,\n            });\n            this.setHeight(updatedHeight);\n        };\n        this.onResize = (e, height) => {\n            if (typeof this.props.onResize === \"function\") {\n                this.props.onResize(e, height);\n            }\n        };\n        this.state = {\n            resizing: false,\n            dragReference: null,\n            height: this.props.initialHeight,\n        };\n        this.onResize = throttle(this.onResize, 16);\n        this.onMouseMove = throttle(this.onMouseMove, 16);\n        this.rootElement = React.createRef();\n    }\n    /**\n     * Return the height of row. Sources from props first, and then state if props.height is undefined\n     */\n    height() {\n        return this.props.height || this.state.height;\n    }\n    /**\n     * Handle when component updates\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (canUseDOM()) {\n            if (this.state.resizing && !prevState.resizing) {\n                document.addEventListener(\"mouseup\", this.onMouseUp);\n                document.addEventListener(\"mousemove\", this.onMouseMove);\n            }\n            else if (!this.state.resizing && prevState.resizing) {\n                document.removeEventListener(\"mouseup\", this.onMouseUp);\n                document.removeEventListener(\"mousemove\", this.onMouseMove);\n            }\n        }\n    }\n    /**\n     * Gets the generated height of the grid row depending on minHeight, maxHeight, and collapsed state.\n     */\n    getHeight() {\n        if (this.props.collapsed) {\n            return this.props.collapsedHeight;\n        }\n        else if (this.height() <= this.props.minHeight) {\n            return this.props.minHeight;\n        }\n        else if (this.height() >= this.props.maxHeight) {\n            return this.props.maxHeight;\n        }\n        else {\n            return this.height();\n        }\n    }\n    /**\n     * generates the inline style property\n     */\n    generateStyleAttribute() {\n        const height = toPx(this.getHeight());\n        const styles = {};\n        styles.minHeight = this.props.collapsed\n            ? this.props.collapsedHeight\n            : this.props.resizable\n                ? toPx(this.props.minHeight)\n                : height;\n        if (this.props.overlay) {\n            styles.height = height;\n        }\n        else {\n            styles.flexBasis = height;\n        }\n        return Object.assign(styles, this.props.style);\n    }\n    /**\n     * Render the resize button\n     */\n    renderResizeControl() {\n        if (!this.props.resizable || this.props.collapsed) {\n            return null;\n        }\n        const resizeProps = {\n            className: this.props.managedClasses.row_resizeHandle,\n            onMouseDown: this.onMouseDown,\n            onKeyDown: this.onKeyDown,\n            role: \"separator\",\n        };\n        if (typeof this.props.resizeControl === \"function\") {\n            return this.props.resizeControl(resizeProps);\n        }\n        else {\n            return React.createElement(\"button\", Object.assign({}, resizeProps));\n        }\n    }\n    setHeight(height) {\n        this.setState({\n            height,\n        });\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), style: this.generateStyleAttribute(), ref: this.rootElement, id: this.props.id, \"aria-hidden\": this.props.hidden }),\n            this.props.children,\n            this.renderResizeControl()));\n    }\n    generateClassNames() {\n        const { row, row__fill, row__resizeNorth, row__resizeSouth, row__overlay, row__hidden, } = this.props.managedClasses;\n        const resizeFrom = this.props.resizeFrom;\n        const classes = classNames(row, [row__resizeNorth, resizeFrom === RowResizeDirection.north], [row__resizeSouth, resizeFrom === RowResizeDirection.south], [row__overlay, this.props.overlay], [row__hidden, this.props.hidden], [row__fill, this.props.fill]);\n        return super.generateClassNames(classes);\n    }\n}\nRow.displayName = \"Row\";\nRow.defaultProps = {\n    fill: false,\n    initialHeight: 40,\n    collapsedHeight: 40,\n    minHeight: 40,\n    maxHeight: 800,\n    resizable: false,\n    collapsed: false,\n    overlay: false,\n    hidden: false,\n    managedClasses: {},\n};\nexport * from \"./row.props\";\n"]},"metadata":{},"sourceType":"module"}