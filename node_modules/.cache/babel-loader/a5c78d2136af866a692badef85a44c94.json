{"ast":null,"code":"import { jss, stylesheetRegistry } from \"./jss\";\n/**\n * A class for managing instance of stylesheets. The SheetManager\n * tracks and associates compiled stylesheets with their style/design-system inputs,\n * as well as tracking number of times a style/design-system combination has been used.\n * Tracking this allows us to memoize compiled stylesheets and only compile a new sheet\n * when one does not already exist.\n */\n\nexport default class SheetManager {\n  constructor() {\n    this.jss = jss;\n    this.registry = new WeakMap();\n  }\n  /**\n   * Creates a new JSS stylesheet from a stylesheet and design-system.\n   * If a JSS style sheet has been created with this stylesheet and design system already,\n   * then simply track that another instance has been added\n   */\n\n\n  add(styles, designSystem, options) {\n    const tracker = this.getTracker(styles, designSystem);\n\n    if (Array.isArray(tracker)) {\n      tracker[1]++;\n      return;\n    }\n\n    let designSystemRegistry = this.registry.get(styles);\n\n    if (designSystemRegistry === undefined) {\n      // If we don't have any design system instances for the current stylesheet,\n      // we need to create a new map to store them\n      designSystemRegistry = new WeakMap();\n      this.registry.set(styles, designSystemRegistry);\n    }\n\n    this.registry.get(styles).set(designSystem, [this.createStyleSheet(styles, designSystem, options), 1]);\n  }\n  /**\n   * Return the compiled jss stylesheet associated with a given style object and design system\n   */\n\n\n  get(styles, designSystem) {\n    const tracker = this.getTracker(styles, designSystem);\n\n    if (Array.isArray(tracker) && !!tracker[0]) {\n      return tracker[0];\n    }\n\n    return;\n  }\n  /**\n   * Removes a reference for a stylesheet and designSystem and adds a new reference. Useful\n   * when the design system changes and the stylesheet should be associated with a new\n   * design system\n   */\n\n\n  update(styles, previousDesignSystem, nextDesignSystem) {\n    const tracker = this.getTracker(styles, previousDesignSystem);\n\n    if (!tracker) {\n      return;\n    }\n    /**\n     * If we only have one sheet and this sheet isn't associated with the next design system, *and* it's an object,\n     * we can simply update the sheet and move it's reference instead of completely tearing down the sheet and\n     * re-creating a style element\n     */\n\n\n    if (tracker[1] === 1 && !this.get(styles, nextDesignSystem) && !!styles && typeof styles === \"object\") {\n      tracker[0].update(nextDesignSystem);\n      this.registry.get(styles).delete(previousDesignSystem);\n      this.registry.get(styles).set(nextDesignSystem, tracker);\n    } else {\n      this.remove(styles, previousDesignSystem);\n      this.add(styles, nextDesignSystem, tracker[0].options);\n    }\n  }\n  /**\n   * Reduces the internal count for a stylesheet and designsystem. If the count becomes zero,\n   * the sheet will be detached\n   */\n\n\n  remove(styles, designSystem) {\n    const tracker = this.getTracker(styles, designSystem);\n\n    if (Array.isArray(tracker)) {\n      tracker[1]--;\n\n      if (tracker[1] === 0) {\n        const sheet = tracker[0];\n        this.jss.removeStyleSheet(sheet);\n        stylesheetRegistry.remove(sheet);\n        this.registry.get(styles).delete(designSystem);\n      }\n    }\n  }\n  /**\n   * Returns the number of components using a stylesheet with a designSystem\n   */\n\n\n  count(styles, designSystem) {\n    const tracker = this.getTracker(styles, designSystem);\n\n    if (Array.isArray(tracker)) {\n      return tracker[1];\n    }\n\n    return -1;\n  }\n  /**\n   * Removes all entries\n   */\n\n\n  clean() {\n    this.registry = new WeakMap();\n  }\n  /**\n   * Retrieve the sheet tracker tracking the styles and design system\n   */\n\n\n  getTracker(styles, designSystem) {\n    const designSystemRegistry = this.registry.get(styles);\n\n    if (designSystemRegistry instanceof WeakMap) {\n      const tracker = designSystemRegistry.get(designSystem);\n\n      if (Array.isArray(tracker)) {\n        return tracker;\n      }\n    }\n  }\n  /**\n   * Creates a JSS StyleSheet and attaches it to the DOM\n   */\n\n\n  createStyleSheet(styles, designSystem, options = {}) {\n    const stylesheet = typeof styles === \"function\" ? styles(designSystem) : styles;\n    const sheet = this.jss.createStyleSheet(stylesheet, Object.assign({\n      link: true\n    }, options));\n    sheet.update(designSystem).attach();\n    stylesheetRegistry.add(sheet);\n    return sheet;\n  }\n\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-jss-manager-react/dist/sheet-manager.js"],"names":["jss","stylesheetRegistry","SheetManager","constructor","registry","WeakMap","add","styles","designSystem","options","tracker","getTracker","Array","isArray","designSystemRegistry","get","undefined","set","createStyleSheet","update","previousDesignSystem","nextDesignSystem","delete","remove","sheet","removeStyleSheet","count","clean","stylesheet","Object","assign","link","attach"],"mappings":"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","sourcesContent":["import { jss, stylesheetRegistry } from \"./jss\";\n/**\n * A class for managing instance of stylesheets. The SheetManager\n * tracks and associates compiled stylesheets with their style/design-system inputs,\n * as well as tracking number of times a style/design-system combination has been used.\n * Tracking this allows us to memoize compiled stylesheets and only compile a new sheet\n * when one does not already exist.\n */\nexport default class SheetManager {\n    constructor() {\n        this.jss = jss;\n        this.registry = new WeakMap();\n    }\n    /**\n     * Creates a new JSS stylesheet from a stylesheet and design-system.\n     * If a JSS style sheet has been created with this stylesheet and design system already,\n     * then simply track that another instance has been added\n     */\n    add(styles, designSystem, options) {\n        const tracker = this.getTracker(styles, designSystem);\n        if (Array.isArray(tracker)) {\n            tracker[1]++;\n            return;\n        }\n        let designSystemRegistry = this.registry.get(styles);\n        if (designSystemRegistry === undefined) {\n            // If we don't have any design system instances for the current stylesheet,\n            // we need to create a new map to store them\n            designSystemRegistry = new WeakMap();\n            this.registry.set(styles, designSystemRegistry);\n        }\n        this.registry\n            .get(styles)\n            .set(designSystem, [this.createStyleSheet(styles, designSystem, options), 1]);\n    }\n    /**\n     * Return the compiled jss stylesheet associated with a given style object and design system\n     */\n    get(styles, designSystem) {\n        const tracker = this.getTracker(styles, designSystem);\n        if (Array.isArray(tracker) && !!tracker[0]) {\n            return tracker[0];\n        }\n        return;\n    }\n    /**\n     * Removes a reference for a stylesheet and designSystem and adds a new reference. Useful\n     * when the design system changes and the stylesheet should be associated with a new\n     * design system\n     */\n    update(styles, previousDesignSystem, nextDesignSystem) {\n        const tracker = this.getTracker(styles, previousDesignSystem);\n        if (!tracker) {\n            return;\n        }\n        /**\n         * If we only have one sheet and this sheet isn't associated with the next design system, *and* it's an object,\n         * we can simply update the sheet and move it's reference instead of completely tearing down the sheet and\n         * re-creating a style element\n         */\n        if (tracker[1] === 1 &&\n            !this.get(styles, nextDesignSystem) &&\n            !!styles &&\n            typeof styles === \"object\") {\n            tracker[0].update(nextDesignSystem);\n            this.registry.get(styles).delete(previousDesignSystem);\n            this.registry.get(styles).set(nextDesignSystem, tracker);\n        }\n        else {\n            this.remove(styles, previousDesignSystem);\n            this.add(styles, nextDesignSystem, tracker[0].options);\n        }\n    }\n    /**\n     * Reduces the internal count for a stylesheet and designsystem. If the count becomes zero,\n     * the sheet will be detached\n     */\n    remove(styles, designSystem) {\n        const tracker = this.getTracker(styles, designSystem);\n        if (Array.isArray(tracker)) {\n            tracker[1]--;\n            if (tracker[1] === 0) {\n                const sheet = tracker[0];\n                this.jss.removeStyleSheet(sheet);\n                stylesheetRegistry.remove(sheet);\n                this.registry.get(styles).delete(designSystem);\n            }\n        }\n    }\n    /**\n     * Returns the number of components using a stylesheet with a designSystem\n     */\n    count(styles, designSystem) {\n        const tracker = this.getTracker(styles, designSystem);\n        if (Array.isArray(tracker)) {\n            return tracker[1];\n        }\n        return -1;\n    }\n    /**\n     * Removes all entries\n     */\n    clean() {\n        this.registry = new WeakMap();\n    }\n    /**\n     * Retrieve the sheet tracker tracking the styles and design system\n     */\n    getTracker(styles, designSystem) {\n        const designSystemRegistry = this.registry.get(styles);\n        if (designSystemRegistry instanceof WeakMap) {\n            const tracker = designSystemRegistry.get(designSystem);\n            if (Array.isArray(tracker)) {\n                return tracker;\n            }\n        }\n    }\n    /**\n     * Creates a JSS StyleSheet and attaches it to the DOM\n     */\n    createStyleSheet(styles, designSystem, options = {}) {\n        const stylesheet = typeof styles === \"function\" ? styles(designSystem) : styles;\n        const sheet = this.jss.createStyleSheet(stylesheet, Object.assign({ link: true }, options));\n        sheet.update(designSystem).attach();\n        stylesheetRegistry.add(sheet);\n        return sheet;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}