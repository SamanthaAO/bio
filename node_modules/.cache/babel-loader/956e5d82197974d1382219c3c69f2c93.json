{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar invokeFunctionForEach_1 = require(\"../utilities/invokeFunctionForEach\");\n\nvar AnimateSequence =\n/** @class */\nfunction () {\n  function AnimateSequence(animations) {\n    var _this = this;\n    /**\n     * Play the sequence of animations\n     */\n\n\n    this.play = function () {\n      _this.applySequencedCallback(_this.animations, \"play\");\n    };\n    /**\n     * Play the sequence in reverse\n     */\n\n\n    this.reverse = function () {\n      _this.applySequencedCallback(_this.animations.reverse(), \"reverse\");\n    };\n    /**\n     * Pauses all animations in the sequence\n     */\n\n\n    this.pause = function () {\n      invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"pause\");\n    };\n    /**\n     * Finishes all animations in the sequence\n     */\n\n\n    this.finish = function () {\n      invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"finish\");\n    };\n    /**\n     * Cancels all animations in the sequence\n     */\n\n\n    this.cancel = function () {\n      invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"cancel\");\n    };\n\n    this.animations = animations;\n  }\n  /**\n   * Sequences a set of animations and calls the specified method\n   */\n\n\n  AnimateSequence.prototype.applySequencedCallback = function (animations, method) {\n    var _this = this;\n\n    var animationCount = animations.length;\n\n    if (animationCount <= 0) {\n      return;\n    }\n\n    animations.forEach(function (animation, index) {\n      // If this is not the last animation, format animation sequence chain\n      if (index < animationCount - 1) {\n        animation.onFinish = _this.animations[index + 1][method];\n      } else {\n        // Else attach onFinish or nullify any existing onFinish on the animation\n        animation.onFinish = _this.onFinish || void 0;\n      }\n    });\n    animations[0][method]();\n  };\n\n  return AnimateSequence;\n}();\n\nexports.default = AnimateSequence;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-animation/dist/animateSequence/index.js"],"names":["Object","defineProperty","exports","value","invokeFunctionForEach_1","require","AnimateSequence","animations","_this","play","applySequencedCallback","reverse","pause","invokeFunctionForEach","finish","cancel","prototype","method","animationCount","length","forEach","animation","index","onFinish","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,uBAAuB,GAAGC,OAAO,CAAC,oCAAD,CAArC;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,UAAzB,EAAqC;AACjC,QAAIC,KAAK,GAAG,IAAZ;AACA;;;;;AAGA,SAAKC,IAAL,GAAY,YAAY;AACpBD,MAAAA,KAAK,CAACE,sBAAN,CAA6BF,KAAK,CAACD,UAAnC,EAA+C,MAA/C;AACH,KAFD;AAGA;;;;;AAGA,SAAKI,OAAL,GAAe,YAAY;AACvBH,MAAAA,KAAK,CAACE,sBAAN,CAA6BF,KAAK,CAACD,UAAN,CAAiBI,OAAjB,EAA7B,EAAyD,SAAzD;AACH,KAFD;AAGA;;;;;AAGA,SAAKC,KAAL,GAAa,YAAY;AACrBR,MAAAA,uBAAuB,CAACS,qBAAxB,CAA8CL,KAAK,CAACD,UAApD,EAAgE,OAAhE;AACH,KAFD;AAGA;;;;;AAGA,SAAKO,MAAL,GAAc,YAAY;AACtBV,MAAAA,uBAAuB,CAACS,qBAAxB,CAA8CL,KAAK,CAACD,UAApD,EAAgE,QAAhE;AACH,KAFD;AAGA;;;;;AAGA,SAAKQ,MAAL,GAAc,YAAY;AACtBX,MAAAA,uBAAuB,CAACS,qBAAxB,CAA8CL,KAAK,CAACD,UAApD,EAAgE,QAAhE;AACH,KAFD;;AAGA,SAAKA,UAAL,GAAkBA,UAAlB;AACH;AACD;;;;;AAGAD,EAAAA,eAAe,CAACU,SAAhB,CAA0BN,sBAA1B,GAAmD,UAAUH,UAAV,EAAsBU,MAAtB,EAA8B;AAC7E,QAAIT,KAAK,GAAG,IAAZ;;AACA,QAAIU,cAAc,GAAGX,UAAU,CAACY,MAAhC;;AACA,QAAID,cAAc,IAAI,CAAtB,EAAyB;AACrB;AACH;;AACDX,IAAAA,UAAU,CAACa,OAAX,CAAmB,UAAUC,SAAV,EAAqBC,KAArB,EAA4B;AAC3C;AACA,UAAIA,KAAK,GAAGJ,cAAc,GAAG,CAA7B,EAAgC;AAC5BG,QAAAA,SAAS,CAACE,QAAV,GAAqBf,KAAK,CAACD,UAAN,CAAiBe,KAAK,GAAG,CAAzB,EAA4BL,MAA5B,CAArB;AACH,OAFD,MAGK;AACD;AACAI,QAAAA,SAAS,CAACE,QAAV,GAAqBf,KAAK,CAACe,QAAN,IAAkB,KAAK,CAA5C;AACH;AACJ,KATD;AAUAhB,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAcU,MAAd;AACH,GAjBD;;AAkBA,SAAOX,eAAP;AACH,CAzDoC,EAArC;;AA0DAJ,OAAO,CAACsB,OAAR,GAAkBlB,eAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invokeFunctionForEach_1 = require(\"../utilities/invokeFunctionForEach\");\nvar AnimateSequence = /** @class */ (function () {\n    function AnimateSequence(animations) {\n        var _this = this;\n        /**\n         * Play the sequence of animations\n         */\n        this.play = function () {\n            _this.applySequencedCallback(_this.animations, \"play\");\n        };\n        /**\n         * Play the sequence in reverse\n         */\n        this.reverse = function () {\n            _this.applySequencedCallback(_this.animations.reverse(), \"reverse\");\n        };\n        /**\n         * Pauses all animations in the sequence\n         */\n        this.pause = function () {\n            invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"pause\");\n        };\n        /**\n         * Finishes all animations in the sequence\n         */\n        this.finish = function () {\n            invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"finish\");\n        };\n        /**\n         * Cancels all animations in the sequence\n         */\n        this.cancel = function () {\n            invokeFunctionForEach_1.invokeFunctionForEach(_this.animations, \"cancel\");\n        };\n        this.animations = animations;\n    }\n    /**\n     * Sequences a set of animations and calls the specified method\n     */\n    AnimateSequence.prototype.applySequencedCallback = function (animations, method) {\n        var _this = this;\n        var animationCount = animations.length;\n        if (animationCount <= 0) {\n            return;\n        }\n        animations.forEach(function (animation, index) {\n            // If this is not the last animation, format animation sequence chain\n            if (index < animationCount - 1) {\n                animation.onFinish = _this.animations[index + 1][method];\n            }\n            else {\n                // Else attach onFinish or nullify any existing onFinish on the animation\n                animation.onFinish = _this.onFinish || void 0;\n            }\n        });\n        animations[0][method]();\n    };\n    return AnimateSequence;\n}());\nexports.default = AnimateSequence;\n"]},"metadata":{},"sourceType":"script"}