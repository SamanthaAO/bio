{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeEnter, keyCodeSpace } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { ListboxContext } from \"../listbox/listbox-context\";\nimport { DisplayNamePrefix } from \"../utilities\";\n\nclass ListboxItem extends Foundation {\n  constructor() {\n    super(...arguments);\n    this.handledProps = {\n      disabled: void 0,\n      displayString: void 0,\n      managedClasses: void 0,\n      id: void 0,\n      onInvoke: void 0,\n      value: void 0\n    };\n    /**\n     * Check context to determine if this item is selected\n     */\n\n    this.isItemSelected = () => {\n      let isSelected = false;\n\n      if (this.context.listboxSelectedItems !== undefined) {\n        isSelected = this.context.listboxSelectedItems.filter(item => {\n          return item.id === this.props.id;\n        }).length === 1;\n      }\n\n      return isSelected;\n    };\n    /**\n     * Handle the keydown event of the item\n     */\n\n\n    this.handleKeyDown = e => {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (typeof this.props.onKeyDown === \"function\") {\n        this.props.onKeyDown(e);\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      switch (e.keyCode) {\n        case keyCodeEnter:\n        case keyCodeSpace:\n          this.invokeOption(e);\n          break;\n      }\n    };\n    /**\n     * Handle the keydown event of the item\n     */\n\n\n    this.handleClick = e => {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (typeof this.props.onClick === \"function\") {\n        this.props.onClick(e);\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      this.invokeOption(e);\n    };\n    /**\n     * Handle focus event\n     */\n\n\n    this.handleFocus = e => {\n      if (this.props.disabled) {\n        return;\n      }\n\n      if (typeof this.context.listboxItemFocused === \"function\") {\n        this.context.listboxItemFocused(this.props, e);\n      }\n\n      if (typeof this.props.onFocus === \"function\") {\n        this.props.onFocus(e);\n      }\n    };\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames(),\n      role: \"option\",\n      id: this.props.id,\n      \"aria-selected\": this.isItemSelected(),\n      \"aria-disabled\": this.props.disabled,\n      onClick: this.handleClick,\n      onFocus: this.handleFocus,\n      onKeyDown: this.handleKeyDown\n    }), this.props.children);\n  }\n  /**\n   * Create class-names\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          listboxItem = _this$props$managedCl.listboxItem,\n          listboxItem__disabled = _this$props$managedCl.listboxItem__disabled,\n          listboxItem__selected = _this$props$managedCl.listboxItem__selected;\n    return super.generateClassNames(classNames(listboxItem, [listboxItem__disabled, this.props.disabled], [listboxItem__selected, this.isItemSelected()]));\n  }\n  /**\n   * Invoke this option\n   */\n\n\n  invokeOption(event) {\n    if (this.context.listboxItemInvoked) {\n      this.context.listboxItemInvoked(this.props, event);\n    }\n\n    if (typeof this.props.onInvoke === \"function\") {\n      this.props.onInvoke(event, this.props);\n    }\n  }\n\n}\n\nListboxItem.displayName = `${DisplayNamePrefix}ListboxItem`;\nListboxItem.contextType = ListboxContext;\nListboxItem.defaultProps = {\n  disabled: false,\n  managedClasses: {}\n};\nListboxItem.contextType = ListboxContext;\nexport default ListboxItem;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/listbox-item/listbox-item.js"],"names":["Foundation","classNames","keyCodeEnter","keyCodeSpace","React","ListboxContext","DisplayNamePrefix","ListboxItem","constructor","arguments","handledProps","disabled","displayString","managedClasses","id","onInvoke","value","isItemSelected","isSelected","context","listboxSelectedItems","undefined","filter","item","props","length","handleKeyDown","e","onKeyDown","defaultPrevented","keyCode","invokeOption","handleClick","onClick","handleFocus","listboxItemFocused","onFocus","render","createElement","Object","assign","unhandledProps","className","generateClassNames","role","children","listboxItem","listboxItem__disabled","listboxItem__selected","event","listboxItemInvoked","displayName","contextType","defaultProps"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames, keyCodeEnter, keyCodeSpace } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { ListboxContext } from \"../listbox/listbox-context\";\nimport { DisplayNamePrefix } from \"../utilities\";\nclass ListboxItem extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            disabled: void 0,\n            displayString: void 0,\n            managedClasses: void 0,\n            id: void 0,\n            onInvoke: void 0,\n            value: void 0,\n        };\n        /**\n         * Check context to determine if this item is selected\n         */\n        this.isItemSelected = () => {\n            let isSelected = false;\n            if (this.context.listboxSelectedItems !== undefined) {\n                isSelected =\n                    this.context.listboxSelectedItems.filter((item) => {\n                        return item.id === this.props.id;\n                    }).length === 1;\n            }\n            return isSelected;\n        };\n        /**\n         * Handle the keydown event of the item\n         */\n        this.handleKeyDown = (e) => {\n            if (this.props.disabled) {\n                return;\n            }\n            if (typeof this.props.onKeyDown === \"function\") {\n                this.props.onKeyDown(e);\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            switch (e.keyCode) {\n                case keyCodeEnter:\n                case keyCodeSpace:\n                    this.invokeOption(e);\n                    break;\n            }\n        };\n        /**\n         * Handle the keydown event of the item\n         */\n        this.handleClick = (e) => {\n            if (this.props.disabled) {\n                return;\n            }\n            if (typeof this.props.onClick === \"function\") {\n                this.props.onClick(e);\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            this.invokeOption(e);\n        };\n        /**\n         * Handle focus event\n         */\n        this.handleFocus = (e) => {\n            if (this.props.disabled) {\n                return;\n            }\n            if (typeof this.context.listboxItemFocused === \"function\") {\n                this.context.listboxItemFocused(this.props, e);\n            }\n            if (typeof this.props.onFocus === \"function\") {\n                this.props.onFocus(e);\n            }\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), role: \"option\", id: this.props.id, \"aria-selected\": this.isItemSelected(), \"aria-disabled\": this.props.disabled, onClick: this.handleClick, onFocus: this.handleFocus, onKeyDown: this.handleKeyDown }), this.props.children));\n    }\n    /**\n     * Create class-names\n     */\n    generateClassNames() {\n        const { listboxItem, listboxItem__disabled, listboxItem__selected, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(listboxItem, [listboxItem__disabled, this.props.disabled], [listboxItem__selected, this.isItemSelected()]));\n    }\n    /**\n     * Invoke this option\n     */\n    invokeOption(event) {\n        if (this.context.listboxItemInvoked) {\n            this.context.listboxItemInvoked(this.props, event);\n        }\n        if (typeof this.props.onInvoke === \"function\") {\n            this.props.onInvoke(event, this.props);\n        }\n    }\n}\nListboxItem.displayName = `${DisplayNamePrefix}ListboxItem`;\nListboxItem.contextType = ListboxContext;\nListboxItem.defaultProps = {\n    disabled: false,\n    managedClasses: {},\n};\nListboxItem.contextType = ListboxContext;\nexport default ListboxItem;\n"]},"metadata":{},"sourceType":"module"}