{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bezierCurves = require(\"./config\");\n\nfunction cubicBezier(name) {\n  return bezierCurves.hasOwnProperty(name) ? formatCubicBezier(bezierCurves[name]) : \"\";\n}\n\nexports.cubicBezier = cubicBezier;\n/**\n * Formats a cubic bezier config into a cubic bezier string\n */\n\nfunction formatCubicBezier(points) {\n  if (!Array.isArray(points) || !Array.isArray(points[0]) || !Array.isArray(points[1])) {\n    return \"\";\n  }\n\n  var p0 = points[0];\n  var p1 = points[1];\n  return \"cubic-bezier(\" + p0[0] + \", \" + p0[1] + \", \" + p1[0] + \", \" + p1[1] + \")\";\n}\n\nexports.formatCubicBezier = formatCubicBezier;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-animation/dist/curves/index.js"],"names":["Object","defineProperty","exports","value","bezierCurves","require","cubicBezier","name","hasOwnProperty","formatCubicBezier","points","Array","isArray","p0","p1"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA1B;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACvB,SAAOH,YAAY,CAACI,cAAb,CAA4BD,IAA5B,IAAoCE,iBAAiB,CAACL,YAAY,CAACG,IAAD,CAAb,CAArD,GAA4E,EAAnF;AACH;;AACDL,OAAO,CAACI,WAAR,GAAsBA,WAAtB;AACA;;;;AAGA,SAASG,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,IACA,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAM,CAAC,CAAD,CAApB,CADD,IAEA,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAM,CAAC,CAAD,CAApB,CAFL,EAE+B;AAC3B,WAAO,EAAP;AACH;;AACD,MAAIG,EAAE,GAAGH,MAAM,CAAC,CAAD,CAAf;AACA,MAAII,EAAE,GAAGJ,MAAM,CAAC,CAAD,CAAf;AACA,SAAO,kBAAkBG,EAAE,CAAC,CAAD,CAApB,GAA0B,IAA1B,GAAiCA,EAAE,CAAC,CAAD,CAAnC,GAAyC,IAAzC,GAAgDC,EAAE,CAAC,CAAD,CAAlD,GAAwD,IAAxD,GAA+DA,EAAE,CAAC,CAAD,CAAjE,GAAuE,GAA9E;AACH;;AACDZ,OAAO,CAACO,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bezierCurves = require(\"./config\");\nfunction cubicBezier(name) {\n    return bezierCurves.hasOwnProperty(name) ? formatCubicBezier(bezierCurves[name]) : \"\";\n}\nexports.cubicBezier = cubicBezier;\n/**\n * Formats a cubic bezier config into a cubic bezier string\n */\nfunction formatCubicBezier(points) {\n    if (!Array.isArray(points) ||\n        !Array.isArray(points[0]) ||\n        !Array.isArray(points[1])) {\n        return \"\";\n    }\n    var p0 = points[0];\n    var p1 = points[1];\n    return \"cubic-bezier(\" + p0[0] + \", \" + p0[1] + \", \" + p1[0] + \", \" + p1[1] + \")\";\n}\nexports.formatCubicBezier = formatCubicBezier;\n"]},"metadata":{},"sourceType":"script"}