{"ast":null,"code":"// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\"; // CIELCH color space\n// https://en.wikipedia.org/wiki/CIELAB_color_space\n// This is a cylindrical representation of the CIELAB space useful for saturation operations\n// This uses Hue values in \"degree\" format. So expect a range of [0,360]. Some other implementations instead uses radians or a normalized Hue with range [0,1]. Be aware of this when checking values or using other libraries.\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\n\nexport class ColorLCH {\n  static fromObject(data) {\n    if (data && !isNaN(data.l) && !isNaN(data.c) && !isNaN(data.h)) {\n      return new ColorLCH(data.l, data.c, data.h);\n    }\n\n    return null;\n  }\n\n  constructor(l, c, h) {\n    this.l = l;\n    this.c = c;\n    this.h = h;\n  }\n\n  equalValue(rhs) {\n    return this.l === rhs.l && this.c === rhs.c && this.h === rhs.h;\n  }\n\n  roundToPrecision(precision) {\n    return new ColorLCH(roundToPrecisionSmall(this.l, precision), roundToPrecisionSmall(this.c, precision), roundToPrecisionSmall(this.h, precision));\n  }\n\n  toObject() {\n    return {\n      l: this.l,\n      c: this.c,\n      h: this.h\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-colors/dist/color-lch.js"],"names":["roundToPrecisionSmall","ColorLCH","fromObject","data","isNaN","l","c","h","constructor","equalValue","rhs","roundToPrecision","precision","toObject"],"mappings":"AAAA;AACA,SAASA,qBAAT,QAAsC,kBAAtC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAN,CAAe;AAClB,SAAOC,UAAP,CAAkBC,IAAlB,EAAwB;AACpB,QAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,CAAN,CAAd,IAA0B,CAACD,KAAK,CAACD,IAAI,CAACG,CAAN,CAAhC,IAA4C,CAACF,KAAK,CAACD,IAAI,CAACI,CAAN,CAAtD,EAAgE;AAC5D,aAAO,IAAIN,QAAJ,CAAaE,IAAI,CAACE,CAAlB,EAAqBF,IAAI,CAACG,CAA1B,EAA6BH,IAAI,CAACI,CAAlC,CAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACDC,EAAAA,WAAW,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU;AACjB,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACH;;AACDE,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,WAAO,KAAKL,CAAL,KAAWK,GAAG,CAACL,CAAf,IAAoB,KAAKC,CAAL,KAAWI,GAAG,CAACJ,CAAnC,IAAwC,KAAKC,CAAL,KAAWG,GAAG,CAACH,CAA9D;AACH;;AACDI,EAAAA,gBAAgB,CAACC,SAAD,EAAY;AACxB,WAAO,IAAIX,QAAJ,CAAaD,qBAAqB,CAAC,KAAKK,CAAN,EAASO,SAAT,CAAlC,EAAuDZ,qBAAqB,CAAC,KAAKM,CAAN,EAASM,SAAT,CAA5E,EAAiGZ,qBAAqB,CAAC,KAAKO,CAAN,EAASK,SAAT,CAAtH,CAAP;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO;AAAER,MAAAA,CAAC,EAAE,KAAKA,CAAV;AAAaC,MAAAA,CAAC,EAAE,KAAKA,CAArB;AAAwBC,MAAAA,CAAC,EAAE,KAAKA;AAAhC,KAAP;AACH;;AApBiB","sourcesContent":["// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\";\n// CIELCH color space\n// https://en.wikipedia.org/wiki/CIELAB_color_space\n// This is a cylindrical representation of the CIELAB space useful for saturation operations\n// This uses Hue values in \"degree\" format. So expect a range of [0,360]. Some other implementations instead uses radians or a normalized Hue with range [0,1]. Be aware of this when checking values or using other libraries.\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\nexport class ColorLCH {\n    static fromObject(data) {\n        if (data && !isNaN(data.l) && !isNaN(data.c) && !isNaN(data.h)) {\n            return new ColorLCH(data.l, data.c, data.h);\n        }\n        return null;\n    }\n    constructor(l, c, h) {\n        this.l = l;\n        this.c = c;\n        this.h = h;\n    }\n    equalValue(rhs) {\n        return this.l === rhs.l && this.c === rhs.c && this.h === rhs.h;\n    }\n    roundToPrecision(precision) {\n        return new ColorLCH(roundToPrecisionSmall(this.l, precision), roundToPrecisionSmall(this.c, precision), roundToPrecisionSmall(this.h, precision));\n    }\n    toObject() {\n        return { l: this.l, c: this.c, h: this.h };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}