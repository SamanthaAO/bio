{"ast":null,"code":"import { findClosestBackgroundIndex, getSwatch, isDarkMode } from \"./palette\";\nimport { colorRecipeFactory, swatchFamilyToSwatchRecipeFactory, SwatchFamilyType } from \"./common\";\nimport { neutralOutlineActiveDelta, neutralOutlineFocusDelta, neutralOutlineHoverDelta, neutralOutlineRestDelta, neutralPalette } from \"../design-system\";\n\nvar neutralOutlineAlgorithm = function neutralOutlineAlgorithm(designSystem) {\n  var palette = neutralPalette(designSystem);\n  var backgroundIndex = findClosestBackgroundIndex(designSystem);\n  var direction = isDarkMode(designSystem) ? -1 : 1;\n  var restDelta = neutralOutlineRestDelta(designSystem);\n  var restIndex = backgroundIndex + direction * restDelta;\n  var hoverDelta = neutralOutlineHoverDelta(designSystem);\n  var hoverIndex = restIndex + direction * (hoverDelta - restDelta);\n  var activeDelta = neutralOutlineActiveDelta(designSystem);\n  var activeIndex = restIndex + direction * (activeDelta - restDelta);\n  var focusDelta = neutralOutlineFocusDelta(designSystem);\n  var focusIndex = restIndex + direction * (focusDelta - restDelta);\n  return {\n    rest: getSwatch(restIndex, palette),\n    hover: getSwatch(hoverIndex, palette),\n    active: getSwatch(activeIndex, palette),\n    focus: getSwatch(focusIndex, palette)\n  };\n};\n\nexport var neutralOutline = colorRecipeFactory(neutralOutlineAlgorithm);\nexport var neutralOutlineRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, neutralOutline);\nexport var neutralOutlineHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, neutralOutline);\nexport var neutralOutlineActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, neutralOutline);\nexport var neutralOutlineFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, neutralOutline);","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-styles-msft/dist/utilities/color/neutral-outline.js"],"names":["findClosestBackgroundIndex","getSwatch","isDarkMode","colorRecipeFactory","swatchFamilyToSwatchRecipeFactory","SwatchFamilyType","neutralOutlineActiveDelta","neutralOutlineFocusDelta","neutralOutlineHoverDelta","neutralOutlineRestDelta","neutralPalette","neutralOutlineAlgorithm","designSystem","palette","backgroundIndex","direction","restDelta","restIndex","hoverDelta","hoverIndex","activeDelta","activeIndex","focusDelta","focusIndex","rest","hover","active","focus","neutralOutline","neutralOutlineRest","neutralOutlineHover","neutralOutlineActive","neutralOutlineFocus"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,SAArC,EAAgDC,UAAhD,QAAkE,WAAlE;AACA,SAASC,kBAAT,EAA6BC,iCAA7B,EAAgEC,gBAAhE,QAAyF,UAAzF;AACA,SAASC,yBAAT,EAAoCC,wBAApC,EAA8DC,wBAA9D,EAAwFC,uBAAxF,EAAiHC,cAAjH,QAAwI,kBAAxI;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,YAAD,EAAkB;AAC9C,MAAMC,OAAO,GAAGH,cAAc,CAACE,YAAD,CAA9B;AACA,MAAME,eAAe,GAAGd,0BAA0B,CAACY,YAAD,CAAlD;AACA,MAAMG,SAAS,GAAGb,UAAU,CAACU,YAAD,CAAV,GAA2B,CAAC,CAA5B,GAAgC,CAAlD;AACA,MAAMI,SAAS,GAAGP,uBAAuB,CAACG,YAAD,CAAzC;AACA,MAAMK,SAAS,GAAGH,eAAe,GAAGC,SAAS,GAAGC,SAAhD;AACA,MAAME,UAAU,GAAGV,wBAAwB,CAACI,YAAD,CAA3C;AACA,MAAMO,UAAU,GAAGF,SAAS,GAAGF,SAAS,IAAIG,UAAU,GAAGF,SAAjB,CAAxC;AACA,MAAMI,WAAW,GAAGd,yBAAyB,CAACM,YAAD,CAA7C;AACA,MAAMS,WAAW,GAAGJ,SAAS,GAAGF,SAAS,IAAIK,WAAW,GAAGJ,SAAlB,CAAzC;AACA,MAAMM,UAAU,GAAGf,wBAAwB,CAACK,YAAD,CAA3C;AACA,MAAMW,UAAU,GAAGN,SAAS,GAAGF,SAAS,IAAIO,UAAU,GAAGN,SAAjB,CAAxC;AACA,SAAO;AACHQ,IAAAA,IAAI,EAAEvB,SAAS,CAACgB,SAAD,EAAYJ,OAAZ,CADZ;AAEHY,IAAAA,KAAK,EAAExB,SAAS,CAACkB,UAAD,EAAaN,OAAb,CAFb;AAGHa,IAAAA,MAAM,EAAEzB,SAAS,CAACoB,WAAD,EAAcR,OAAd,CAHd;AAIHc,IAAAA,KAAK,EAAE1B,SAAS,CAACsB,UAAD,EAAaV,OAAb;AAJb,GAAP;AAMH,CAlBD;;AAmBA,OAAO,IAAMe,cAAc,GAAGzB,kBAAkB,CAACQ,uBAAD,CAAzC;AACP,OAAO,IAAMkB,kBAAkB,GAAGzB,iCAAiC,CAACC,gBAAgB,CAACmB,IAAlB,EAAwBI,cAAxB,CAA5D;AACP,OAAO,IAAME,mBAAmB,GAAG1B,iCAAiC,CAACC,gBAAgB,CAACoB,KAAlB,EAAyBG,cAAzB,CAA7D;AACP,OAAO,IAAMG,oBAAoB,GAAG3B,iCAAiC,CAACC,gBAAgB,CAACqB,MAAlB,EAA0BE,cAA1B,CAA9D;AACP,OAAO,IAAMI,mBAAmB,GAAG5B,iCAAiC,CAACC,gBAAgB,CAACsB,KAAlB,EAAyBC,cAAzB,CAA7D","sourcesContent":["import { findClosestBackgroundIndex, getSwatch, isDarkMode } from \"./palette\";\nimport { colorRecipeFactory, swatchFamilyToSwatchRecipeFactory, SwatchFamilyType, } from \"./common\";\nimport { neutralOutlineActiveDelta, neutralOutlineFocusDelta, neutralOutlineHoverDelta, neutralOutlineRestDelta, neutralPalette, } from \"../design-system\";\nconst neutralOutlineAlgorithm = (designSystem) => {\n    const palette = neutralPalette(designSystem);\n    const backgroundIndex = findClosestBackgroundIndex(designSystem);\n    const direction = isDarkMode(designSystem) ? -1 : 1;\n    const restDelta = neutralOutlineRestDelta(designSystem);\n    const restIndex = backgroundIndex + direction * restDelta;\n    const hoverDelta = neutralOutlineHoverDelta(designSystem);\n    const hoverIndex = restIndex + direction * (hoverDelta - restDelta);\n    const activeDelta = neutralOutlineActiveDelta(designSystem);\n    const activeIndex = restIndex + direction * (activeDelta - restDelta);\n    const focusDelta = neutralOutlineFocusDelta(designSystem);\n    const focusIndex = restIndex + direction * (focusDelta - restDelta);\n    return {\n        rest: getSwatch(restIndex, palette),\n        hover: getSwatch(hoverIndex, palette),\n        active: getSwatch(activeIndex, palette),\n        focus: getSwatch(focusIndex, palette),\n    };\n};\nexport const neutralOutline = colorRecipeFactory(neutralOutlineAlgorithm);\nexport const neutralOutlineRest = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.rest, neutralOutline);\nexport const neutralOutlineHover = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.hover, neutralOutline);\nexport const neutralOutlineActive = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.active, neutralOutline);\nexport const neutralOutlineFocus = swatchFamilyToSwatchRecipeFactory(SwatchFamilyType.focus, neutralOutline);\n"]},"metadata":{},"sourceType":"module"}