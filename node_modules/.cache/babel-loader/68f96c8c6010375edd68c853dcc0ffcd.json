{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { PaneResizeDirection } from \"./pane.props\";\nimport { west } from \"../row\";\nimport rafThrottle from \"raf-throttle\";\nimport { applyFocusVisible, toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { classNames, keyCodeArrowLeft, keyCodeArrowRight } from \"@microsoft/fast-web-utilities\";\nexport var paneStyleSheet = {\n  pane: {\n    position: \"relative\",\n    flex: \"0 1 auto\",\n    display: \"flex\",\n    \"flex-direction\": \"column\"\n  },\n  pane_resizeHandle: Object.assign({\n    position: \"absolute\",\n    padding: \"0\",\n    opacity: \"0\",\n    top: \"0\",\n    width: toPx(8),\n    height: \"100%\",\n    \"z-index\": \"1\",\n    transition: \"transform .04s ease-in-out\",\n    outline: \"none\",\n    transform: \"scale(.5, 1)\",\n    \"&:hover\": {\n      cursor: \"ew-resize\"\n    }\n  }, applyFocusVisible({\n    opacity: \"1\",\n    transform: \"scale(1)\"\n  }), {\n    \"&:active\": {\n      opacity: \"1\",\n      transform: \"scale(1)\"\n    }\n  }),\n  pane__resizeWest: {\n    \"& $pane_resizeHandle\": {\n      left: \"-4px\"\n    }\n  },\n  pane__resizeEast: {\n    \"& $pane_resizeHandle\": {\n      right: \"-4px\"\n    }\n  },\n  pane__overlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    \"z-index\": \"2\"\n  },\n  pane__hidden: {\n    display: \"none\"\n  }\n};\nexport var Pane =\n/*#__PURE__*/\nfunction (_Foundation) {\n  _inherits(Pane, _Foundation);\n\n  function Pane(props) {\n    var _this;\n\n    _classCallCheck(this, Pane);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pane).call(this, props));\n    /**\n     * All handled props\n     */\n\n    _this.handledProps = {\n      collapsed: void 0,\n      collapsedWidth: void 0,\n      hidden: void 0,\n      id: void 0,\n      initialWidth: void 0,\n      managedClasses: void 0,\n      maxWidth: void 0,\n      minWidth: void 0,\n      onResize: void 0,\n      overlay: void 0,\n      resizeControl: void 0,\n      resizable: void 0,\n      resizeFrom: void 0,\n      width: void 0\n    };\n    /**\n     * Handle keyPress\n     */\n\n    _this.onKeyDown = function (e) {\n      var isShift = e.shiftKey;\n      var offset = isShift ? 10 : 1;\n      var width;\n\n      switch (e.keyCode) {\n        case keyCodeArrowLeft:\n          width = _this.rootElement.current.clientWidth - offset;\n          break;\n\n        case keyCodeArrowRight:\n          width = _this.rootElement.current.clientWidth + offset;\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setWidth(width); // Fire the resize callback\n\n\n      _this.onResize(e, width);\n    };\n    /**\n     * Handle mouseDown\n     */\n\n\n    _this.onMouseDown = function (e) {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      _this.setState({\n        resizing: true,\n        dragReference: e.pageX\n      });\n    };\n    /**\n     * Handle mouseUp\n     */\n\n\n    _this.onMouseUp = function (e) {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      _this.setState({\n        resizing: false,\n        dragReference: null\n      });\n    };\n\n    _this.onMouseMove = function (e) {\n      if (!_this.state.resizing) {\n        return;\n      }\n\n      var offset = _this.state.dragReference - e.pageX;\n      var updatedWidth = _this.props.resizeFrom === west ? _this.width() + offset : _this.width() - offset;\n\n      if (updatedWidth <= _this.props.minWidth || updatedWidth >= _this.props.maxWidth) {\n        return;\n      } // Fire the resize callback\n\n\n      _this.onResize(e, updatedWidth);\n\n      _this.setState({\n        dragReference: e.pageX\n      });\n\n      _this.setWidth(updatedWidth);\n    };\n\n    _this.onWindowResize = function (e) {\n      _this.setWidth(_this.rootElement.current.clientWidth);\n    };\n\n    _this.onResize = function (e, width) {\n      if (typeof _this.props.onResize === \"function\") {\n        _this.props.onResize(e, width);\n      }\n    };\n\n    _this.state = {\n      resizing: false,\n      dragReference: null,\n      width: _this.props.initialWidth\n    };\n    _this.onResize = throttle(_this.onResize, 16);\n    _this.onMouseMove = throttle(_this.onMouseMove, 16);\n    _this.onWindowResize = rafThrottle(_this.onWindowResize);\n    _this.rootElement = React.createRef();\n    return _this;\n  }\n  /**\n   * Return the width of Pane. Sources from props first, and then state if props.width is undefined\n   */\n\n\n  _createClass(Pane, [{\n    key: \"width\",\n    value: function width() {\n      return this.props.width || this.state.width;\n    }\n    /**\n     * Handle when component is mounted to the DOM\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM()) {\n        window.addEventListener(\"resize\", this.onWindowResize);\n      }\n    }\n    /**\n     * Handle when component is removed from the DOM\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (canUseDOM()) {\n        window.removeEventListener(\"resize\", this.onWindowResize);\n      }\n    }\n    /**\n     * Handle when component updates\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (canUseDOM()) {\n        if (this.state.resizing && !prevState.resizing) {\n          document.addEventListener(\"mouseup\", this.onMouseUp);\n          document.addEventListener(\"mousemove\", this.onMouseMove);\n        } else if (!this.state.resizing && prevState.resizing) {\n          document.removeEventListener(\"mouseup\", this.onMouseUp);\n          document.removeEventListener(\"mousemove\", this.onMouseMove);\n        }\n      }\n    }\n    /**\n     * Gets the generated width of the grid pane depending on minWidth, maxWidth, and collapsed state.\n     */\n\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      if (this.props.collapsed) {\n        return this.props.collapsedWidth;\n      } else if (this.width() < this.props.minWidth) {\n        return this.props.minWidth;\n      } else if (this.width() > this.props.maxWidth) {\n        return this.props.maxWidth;\n      } else {\n        return this.width();\n      }\n    }\n    /**\n     * generates the inline style property\n     */\n\n  }, {\n    key: \"generateStyleAttribute\",\n    value: function generateStyleAttribute() {\n      var width = toPx(this.getWidth());\n      var styles = {};\n      styles.minWidth = this.props.collapsed ? toPx(this.props.collapsedWidth) : this.props.resizable ? toPx(this.props.minWidth) : width;\n\n      if (this.props.overlay) {\n        styles.width = width;\n      } else {\n        styles.flexBasis = width;\n      }\n\n      return Object.assign(styles, this.props.style);\n    }\n    /**\n     * Render the resize button\n     */\n\n  }, {\n    key: \"renderResizeControl\",\n    value: function renderResizeControl() {\n      if (!this.props.resizable || this.props.collapsed) {\n        return null;\n      }\n\n      var resizeProps = {\n        className: this.props.managedClasses.pane_resizeHandle,\n        onMouseDown: this.onMouseDown,\n        onKeyDown: this.onKeyDown,\n        role: \"separator\"\n      };\n\n      if (typeof this.props.resizeControl === \"function\") {\n        return this.props.resizeControl(resizeProps);\n      } else {\n        return React.createElement(\"button\", Object.assign({}, resizeProps));\n      }\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.setState({\n        width: width\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n        className: this.generateClassNames(),\n        style: this.generateStyleAttribute(),\n        ref: this.rootElement,\n        id: this.props.id,\n        \"aria-hidden\": this.props.hidden\n      }), this.props.children, this.renderResizeControl());\n    }\n  }, {\n    key: \"generateClassNames\",\n    value: function generateClassNames() {\n      var _this$props$managedCl = this.props.managedClasses,\n          pane = _this$props$managedCl.pane,\n          pane__resizeEast = _this$props$managedCl.pane__resizeEast,\n          pane__resizeWest = _this$props$managedCl.pane__resizeWest,\n          pane__overlay = _this$props$managedCl.pane__overlay,\n          pane__hidden = _this$props$managedCl.pane__hidden;\n      var resizeFrom = this.props.resizeFrom;\n      var classes = classNames(pane, [pane__resizeEast, resizeFrom === PaneResizeDirection.east], [pane__resizeWest, resizeFrom === PaneResizeDirection.west], [pane__overlay, this.props.overlay], [pane__hidden, this.props.hidden]);\n      return _get(_getPrototypeOf(Pane.prototype), \"generateClassNames\", this).call(this, classes);\n    }\n  }]);\n\n  return Pane;\n}(Foundation);\nPane.displayName = \"Pane\";\n/**\n * The default props of the Pane component\n */\n\nPane.defaultProps = {\n  initialWidth: 300,\n  collapsedWidth: 40,\n  minWidth: 100,\n  maxWidth: 800,\n  resizable: false,\n  collapsed: false,\n  overlay: false,\n  hidden: false,\n  managedClasses: {}\n};\nexport * from \"./pane.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-layouts-react/dist/pane/pane.js"],"names":["React","throttle","PaneResizeDirection","west","rafThrottle","applyFocusVisible","toPx","Foundation","canUseDOM","classNames","keyCodeArrowLeft","keyCodeArrowRight","paneStyleSheet","pane","position","flex","display","pane_resizeHandle","Object","assign","padding","opacity","top","width","height","transition","outline","transform","cursor","pane__resizeWest","left","pane__resizeEast","right","pane__overlay","pane__hidden","Pane","props","handledProps","collapsed","collapsedWidth","hidden","id","initialWidth","managedClasses","maxWidth","minWidth","onResize","overlay","resizeControl","resizable","resizeFrom","onKeyDown","e","isShift","shiftKey","offset","keyCode","rootElement","current","clientWidth","setWidth","onMouseDown","button","setState","resizing","dragReference","pageX","onMouseUp","onMouseMove","state","updatedWidth","onWindowResize","createRef","window","addEventListener","removeEventListener","prevProps","prevState","document","getWidth","styles","flexBasis","style","resizeProps","className","role","createElement","unhandledProps","generateClassNames","generateStyleAttribute","ref","children","renderResizeControl","classes","east","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { PaneResizeDirection, } from \"./pane.props\";\nimport { west } from \"../row\";\nimport rafThrottle from \"raf-throttle\";\nimport { applyFocusVisible, toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { classNames, keyCodeArrowLeft, keyCodeArrowRight, } from \"@microsoft/fast-web-utilities\";\nexport const paneStyleSheet = {\n    pane: {\n        position: \"relative\",\n        flex: \"0 1 auto\",\n        display: \"flex\",\n        \"flex-direction\": \"column\",\n    },\n    pane_resizeHandle: Object.assign({ position: \"absolute\", padding: \"0\", opacity: \"0\", top: \"0\", width: toPx(8), height: \"100%\", \"z-index\": \"1\", transition: \"transform .04s ease-in-out\", outline: \"none\", transform: \"scale(.5, 1)\", \"&:hover\": {\n            cursor: \"ew-resize\",\n        } }, applyFocusVisible({\n        opacity: \"1\",\n        transform: \"scale(1)\",\n    }), { \"&:active\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n        } }),\n    pane__resizeWest: {\n        \"& $pane_resizeHandle\": {\n            left: \"-4px\",\n        },\n    },\n    pane__resizeEast: {\n        \"& $pane_resizeHandle\": {\n            right: \"-4px\",\n        },\n    },\n    pane__overlay: {\n        position: \"absolute\",\n        height: \"100%\",\n        \"z-index\": \"2\",\n    },\n    pane__hidden: {\n        display: \"none\",\n    },\n};\nexport class Pane extends Foundation {\n    constructor(props) {\n        super(props);\n        /**\n         * All handled props\n         */\n        this.handledProps = {\n            collapsed: void 0,\n            collapsedWidth: void 0,\n            hidden: void 0,\n            id: void 0,\n            initialWidth: void 0,\n            managedClasses: void 0,\n            maxWidth: void 0,\n            minWidth: void 0,\n            onResize: void 0,\n            overlay: void 0,\n            resizeControl: void 0,\n            resizable: void 0,\n            resizeFrom: void 0,\n            width: void 0,\n        };\n        /**\n         * Handle keyPress\n         */\n        this.onKeyDown = (e) => {\n            const isShift = e.shiftKey;\n            const offset = isShift ? 10 : 1;\n            let width;\n            switch (e.keyCode) {\n                case keyCodeArrowLeft:\n                    width = this.rootElement.current.clientWidth - offset;\n                    break;\n                case keyCodeArrowRight:\n                    width = this.rootElement.current.clientWidth + offset;\n                    break;\n                default:\n                    break;\n            }\n            this.setWidth(width);\n            // Fire the resize callback\n            this.onResize(e, width);\n        };\n        /**\n         * Handle mouseDown\n         */\n        this.onMouseDown = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: true,\n                dragReference: e.pageX,\n            });\n        };\n        /**\n         * Handle mouseUp\n         */\n        this.onMouseUp = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: false,\n                dragReference: null,\n            });\n        };\n        this.onMouseMove = (e) => {\n            if (!this.state.resizing) {\n                return;\n            }\n            const offset = this.state.dragReference - e.pageX;\n            const updatedWidth = this.props.resizeFrom === west\n                ? this.width() + offset\n                : this.width() - offset;\n            if (updatedWidth <= this.props.minWidth || updatedWidth >= this.props.maxWidth) {\n                return;\n            }\n            // Fire the resize callback\n            this.onResize(e, updatedWidth);\n            this.setState({\n                dragReference: e.pageX,\n            });\n            this.setWidth(updatedWidth);\n        };\n        this.onWindowResize = (e) => {\n            this.setWidth(this.rootElement.current.clientWidth);\n        };\n        this.onResize = (e, width) => {\n            if (typeof this.props.onResize === \"function\") {\n                this.props.onResize(e, width);\n            }\n        };\n        this.state = {\n            resizing: false,\n            dragReference: null,\n            width: this.props.initialWidth,\n        };\n        this.onResize = throttle(this.onResize, 16);\n        this.onMouseMove = throttle(this.onMouseMove, 16);\n        this.onWindowResize = rafThrottle(this.onWindowResize);\n        this.rootElement = React.createRef();\n    }\n    /**\n     * Return the width of Pane. Sources from props first, and then state if props.width is undefined\n     */\n    width() {\n        return this.props.width || this.state.width;\n    }\n    /**\n     * Handle when component is mounted to the DOM\n     */\n    componentDidMount() {\n        if (canUseDOM()) {\n            window.addEventListener(\"resize\", this.onWindowResize);\n        }\n    }\n    /**\n     * Handle when component is removed from the DOM\n     */\n    componentWillUnmount() {\n        if (canUseDOM()) {\n            window.removeEventListener(\"resize\", this.onWindowResize);\n        }\n    }\n    /**\n     * Handle when component updates\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (canUseDOM()) {\n            if (this.state.resizing && !prevState.resizing) {\n                document.addEventListener(\"mouseup\", this.onMouseUp);\n                document.addEventListener(\"mousemove\", this.onMouseMove);\n            }\n            else if (!this.state.resizing && prevState.resizing) {\n                document.removeEventListener(\"mouseup\", this.onMouseUp);\n                document.removeEventListener(\"mousemove\", this.onMouseMove);\n            }\n        }\n    }\n    /**\n     * Gets the generated width of the grid pane depending on minWidth, maxWidth, and collapsed state.\n     */\n    getWidth() {\n        if (this.props.collapsed) {\n            return this.props.collapsedWidth;\n        }\n        else if (this.width() < this.props.minWidth) {\n            return this.props.minWidth;\n        }\n        else if (this.width() > this.props.maxWidth) {\n            return this.props.maxWidth;\n        }\n        else {\n            return this.width();\n        }\n    }\n    /**\n     * generates the inline style property\n     */\n    generateStyleAttribute() {\n        const width = toPx(this.getWidth());\n        const styles = {};\n        styles.minWidth = this.props.collapsed\n            ? toPx(this.props.collapsedWidth)\n            : this.props.resizable\n                ? toPx(this.props.minWidth)\n                : width;\n        if (this.props.overlay) {\n            styles.width = width;\n        }\n        else {\n            styles.flexBasis = width;\n        }\n        return Object.assign(styles, this.props.style);\n    }\n    /**\n     * Render the resize button\n     */\n    renderResizeControl() {\n        if (!this.props.resizable || this.props.collapsed) {\n            return null;\n        }\n        const resizeProps = {\n            className: this.props.managedClasses.pane_resizeHandle,\n            onMouseDown: this.onMouseDown,\n            onKeyDown: this.onKeyDown,\n            role: \"separator\",\n        };\n        if (typeof this.props.resizeControl === \"function\") {\n            return this.props.resizeControl(resizeProps);\n        }\n        else {\n            return React.createElement(\"button\", Object.assign({}, resizeProps));\n        }\n    }\n    setWidth(width) {\n        this.setState({\n            width,\n        });\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), style: this.generateStyleAttribute(), ref: this.rootElement, id: this.props.id, \"aria-hidden\": this.props.hidden }),\n            this.props.children,\n            this.renderResizeControl()));\n    }\n    generateClassNames() {\n        const { pane, pane__resizeEast, pane__resizeWest, pane__overlay, pane__hidden, } = this.props.managedClasses;\n        const resizeFrom = this.props.resizeFrom;\n        const classes = classNames(pane, [pane__resizeEast, resizeFrom === PaneResizeDirection.east], [pane__resizeWest, resizeFrom === PaneResizeDirection.west], [pane__overlay, this.props.overlay], [pane__hidden, this.props.hidden]);\n        return super.generateClassNames(classes);\n    }\n}\nPane.displayName = \"Pane\";\n/**\n * The default props of the Pane component\n */\nPane.defaultProps = {\n    initialWidth: 300,\n    collapsedWidth: 40,\n    minWidth: 100,\n    maxWidth: 800,\n    resizable: false,\n    collapsed: false,\n    overlay: false,\n    hidden: false,\n    managedClasses: {},\n};\nexport * from \"./pane.props\";\n"]},"metadata":{},"sourceType":"module"}