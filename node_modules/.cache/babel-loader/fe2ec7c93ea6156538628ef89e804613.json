{"ast":null,"code":"import { findClosestSwatchIndex, getSwatch } from \"./palette\";\nimport { backgroundColor, neutralFillCardDelta, neutralPalette } from \"../design-system\";\n\nconst neutralCardFillAlgorithm = designSystem => {\n  const offset = neutralFillCardDelta(designSystem);\n  const index = findClosestSwatchIndex(neutralPalette, backgroundColor(designSystem))(designSystem);\n  return getSwatch(index - (index < offset ? offset * -1 : offset), neutralPalette(designSystem));\n};\n\nexport function neutralFillCard(arg) {\n  if (typeof arg === \"function\") {\n    return designSystem => {\n      return neutralCardFillAlgorithm(Object.assign({}, designSystem, {\n        backgroundColor: arg(designSystem)\n      }));\n    };\n  } else {\n    return neutralCardFillAlgorithm(arg);\n  }\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-styles-msft/dist/utilities/color/neutral-fill-card.js"],"names":["findClosestSwatchIndex","getSwatch","backgroundColor","neutralFillCardDelta","neutralPalette","neutralCardFillAlgorithm","designSystem","offset","index","neutralFillCard","arg","Object","assign"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,SAAjC,QAAkD,WAAlD;AACA,SAASC,eAAT,EAA0BC,oBAA1B,EAAgDC,cAAhD,QAAsE,kBAAtE;;AACA,MAAMC,wBAAwB,GAAIC,YAAD,IAAkB;AAC/C,QAAMC,MAAM,GAAGJ,oBAAoB,CAACG,YAAD,CAAnC;AACA,QAAME,KAAK,GAAGR,sBAAsB,CAACI,cAAD,EAAiBF,eAAe,CAACI,YAAD,CAAhC,CAAtB,CAAsEA,YAAtE,CAAd;AACA,SAAOL,SAAS,CAACO,KAAK,IAAIA,KAAK,GAAGD,MAAR,GAAiBA,MAAM,GAAG,CAAC,CAA3B,GAA+BA,MAAnC,CAAN,EAAkDH,cAAc,CAACE,YAAD,CAAhE,CAAhB;AACH,CAJD;;AAKA,OAAO,SAASG,eAAT,CAAyBC,GAAzB,EAA8B;AACjC,MAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC3B,WAAQJ,YAAD,IAAkB;AACrB,aAAOD,wBAAwB,CAACM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,YAAlB,EAAgC;AAAEJ,QAAAA,eAAe,EAAEQ,GAAG,CAACJ,YAAD;AAAtB,OAAhC,CAAD,CAA/B;AACH,KAFD;AAGH,GAJD,MAKK;AACD,WAAOD,wBAAwB,CAACK,GAAD,CAA/B;AACH;AACJ","sourcesContent":["import { findClosestSwatchIndex, getSwatch } from \"./palette\";\nimport { backgroundColor, neutralFillCardDelta, neutralPalette } from \"../design-system\";\nconst neutralCardFillAlgorithm = (designSystem) => {\n    const offset = neutralFillCardDelta(designSystem);\n    const index = findClosestSwatchIndex(neutralPalette, backgroundColor(designSystem))(designSystem);\n    return getSwatch(index - (index < offset ? offset * -1 : offset), neutralPalette(designSystem));\n};\nexport function neutralFillCard(arg) {\n    if (typeof arg === \"function\") {\n        return (designSystem) => {\n            return neutralCardFillAlgorithm(Object.assign({}, designSystem, { backgroundColor: arg(designSystem) }));\n        };\n    }\n    else {\n        return neutralCardFillAlgorithm(arg);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}