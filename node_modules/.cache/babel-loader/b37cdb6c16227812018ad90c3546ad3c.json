{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Tabs as BaseTabs } from \"@microsoft/fast-components-react-base\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport { classNames, Direction } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DisplayNamePrefix } from \"../utilities\";\n\nclass Pivot extends Foundation {\n  /**\n   * The constructor\n   */\n  constructor(props) {\n    super(props);\n    this.handledProps = {\n      label: void 0,\n      items: void 0,\n      managedClasses: void 0\n    };\n\n    this.handleTabsUpdate = activeTabId => {\n      this.setState({\n        activeId: activeTabId\n      });\n\n      if (typeof this.props.onUpdate === \"function\") {\n        this.props.onUpdate(activeTabId);\n      }\n    };\n\n    if (Array.isArray(this.props.items)) {\n      this.state = {\n        offsetX: 0,\n        tabPanelIndex: 0,\n        activeId: typeof this.props.activeId === \"string\" ? this.props.activeId : get(this.props.items[0], \"id\", \"\")\n      };\n    }\n\n    this.tabsRef = React.createRef();\n  }\n  /**\n   * React life-cycle method\n   */\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n      return {\n        activeId: nextProps.activeId\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.ltr = this.getLTR();\n    this.setActiveIndicatorOffset();\n    this.prevTabPanelIndex = this.state.tabPanelIndex;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.ltr !== this.getLTR()) {\n      this.setActiveIndicatorOffset();\n      this.ltr = this.getLTR();\n    }\n\n    if (this.state.activeId !== prevState.activeId) {\n      this.setActiveIndicatorOffset();\n      this.updateTabPanelIndex();\n    }\n\n    if (this.state.tabPanelIndex !== prevState.tabPanelIndex) {\n      this.prevTabPanelIndex = this.state.tabPanelIndex;\n    }\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(BaseTabs, Object.assign({}, this.unhandledProps(), {\n      ref: this.tabsRef,\n      managedClasses: this.generatePivotClassNames(),\n      activeId: this.state.activeId,\n      onUpdate: this.handleTabsUpdate,\n      items: this.props.items,\n      label: this.props.label\n    }), React.createElement(\"span\", {\n      style: {\n        transform: `translateX(${toPx(this.state.offsetX)})`\n      },\n      className: classNames(this.props.managedClasses.pivot_activeIndicator)\n    }));\n  }\n  /**\n   * Returns tabs managedclasses with new carousel-specific JSS\n   */\n\n\n  generatePivotClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          pivot = _this$props$managedCl.pivot,\n          pivot_tabList = _this$props$managedCl.pivot_tabList,\n          pivot_tabContent = _this$props$managedCl.pivot_tabContent,\n          pivot_tabPanelContent = _this$props$managedCl.pivot_tabPanelContent,\n          pivot_tab = _this$props$managedCl.pivot_tab,\n          pivot_tab__active = _this$props$managedCl.pivot_tab__active,\n          pivot_tabPanel = _this$props$managedCl.pivot_tabPanel,\n          pivot_tabPanel__hidden = _this$props$managedCl.pivot_tabPanel__hidden;\n    return {\n      tabs: pivot,\n      tabs_tabPanels: this.generateTabPanelsClassNames(),\n      tabs_tabList: pivot_tabList,\n      tabs_tabContent: pivot_tabContent,\n      tabs_tabPanelContent: pivot_tabPanelContent,\n      tab: pivot_tab,\n      tab__active: pivot_tab__active,\n      tabPanel: pivot_tabPanel,\n      tabPanel__hidden: pivot_tabPanel__hidden\n    };\n  }\n\n  isSelected(element) {\n    return element.attributes[\"aria-selected\"].value === \"true\";\n  }\n\n  updateTabPanelIndex() {\n    if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n      const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n      const mytabsArray = Array.prototype.slice.call(tabElement.querySelectorAll(\"[role='tab']\"));\n      this.setState({\n        tabPanelIndex: mytabsArray.findIndex(this.isSelected)\n      });\n    }\n  }\n\n  generateTabPanelsClassNames() {\n    const _this$props$managedCl2 = this.props.managedClasses,\n          pivot_tabPanels = _this$props$managedCl2.pivot_tabPanels,\n          pivot_tabPanels__animatePrevious = _this$props$managedCl2.pivot_tabPanels__animatePrevious,\n          pivot_tabPanels__animateNext = _this$props$managedCl2.pivot_tabPanels__animateNext;\n    const indexNotChanged = this.state.tabPanelIndex === this.prevTabPanelIndex;\n    const shouldReverse = this.state.tabPanelIndex < this.prevTabPanelIndex;\n    return classNames(pivot_tabPanels, [pivot_tabPanels__animatePrevious, shouldReverse], [pivot_tabPanels__animateNext, !shouldReverse && !indexNotChanged]);\n  }\n\n  setActiveIndicatorOffset() {\n    if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n      const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n      const mytab = tabElement.querySelector(\"[aria-selected='true']\");\n\n      if (mytab !== null && tabElement !== null) {\n        const width = mytab.getBoundingClientRect().width;\n        const center = width / 2;\n        const offsetX = mytab.getBoundingClientRect().left - tabElement.getBoundingClientRect().left + center;\n\n        if (offsetX !== this.state.offsetX) {\n          this.setState({\n            offsetX\n          });\n        }\n      }\n    }\n  } // TODO #1438: Add optional direction prop to Pivot and Horizontal overflow\n\n  /**\n   * Gets the direction of the element\n   */\n\n\n  getLTR() {\n    if (canUseDOM()) {\n      const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n      return !tabElement ? Direction.ltr : getComputedStyle(tabElement).direction === Direction.rtl ? Direction.rtl : Direction.ltr;\n    }\n  }\n\n}\n\nPivot.displayName = `${DisplayNamePrefix}Pivot`;\nPivot.defaultProps = {\n  managedClasses: {}\n};\nexport default Pivot;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/pivot/pivot.js"],"names":["Foundation","Tabs","BaseTabs","toPx","classNames","Direction","canUseDOM","get","React","ReactDOM","DisplayNamePrefix","Pivot","constructor","props","handledProps","label","items","managedClasses","handleTabsUpdate","activeTabId","setState","activeId","onUpdate","Array","isArray","state","offsetX","tabPanelIndex","tabsRef","createRef","getDerivedStateFromProps","nextProps","prevState","componentDidMount","ltr","getLTR","setActiveIndicatorOffset","prevTabPanelIndex","componentDidUpdate","prevProps","updateTabPanelIndex","render","createElement","Object","assign","unhandledProps","ref","generatePivotClassNames","style","transform","className","pivot_activeIndicator","pivot","pivot_tabList","pivot_tabContent","pivot_tabPanelContent","pivot_tab","pivot_tab__active","pivot_tabPanel","pivot_tabPanel__hidden","tabs","tabs_tabPanels","generateTabPanelsClassNames","tabs_tabList","tabs_tabContent","tabs_tabPanelContent","tab","tab__active","tabPanel","tabPanel__hidden","isSelected","element","attributes","value","current","tabElement","findDOMNode","mytabsArray","prototype","slice","call","querySelectorAll","findIndex","pivot_tabPanels","pivot_tabPanels__animatePrevious","pivot_tabPanels__animateNext","indexNotChanged","shouldReverse","mytab","querySelector","width","getBoundingClientRect","center","left","getComputedStyle","direction","rtl","displayName","defaultProps"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Tabs as BaseTabs } from \"@microsoft/fast-components-react-base\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport { classNames, Direction } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DisplayNamePrefix } from \"../utilities\";\nclass Pivot extends Foundation {\n    /**\n     * The constructor\n     */\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            label: void 0,\n            items: void 0,\n            managedClasses: void 0,\n        };\n        this.handleTabsUpdate = (activeTabId) => {\n            this.setState({\n                activeId: activeTabId,\n            });\n            if (typeof this.props.onUpdate === \"function\") {\n                this.props.onUpdate(activeTabId);\n            }\n        };\n        if (Array.isArray(this.props.items)) {\n            this.state = {\n                offsetX: 0,\n                tabPanelIndex: 0,\n                activeId: typeof this.props.activeId === \"string\"\n                    ? this.props.activeId\n                    : get(this.props.items[0], \"id\", \"\"),\n            };\n        }\n        this.tabsRef = React.createRef();\n    }\n    /**\n     * React life-cycle method\n     */\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n            return {\n                activeId: nextProps.activeId,\n            };\n        }\n        return null;\n    }\n    componentDidMount() {\n        this.ltr = this.getLTR();\n        this.setActiveIndicatorOffset();\n        this.prevTabPanelIndex = this.state.tabPanelIndex;\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.ltr !== this.getLTR()) {\n            this.setActiveIndicatorOffset();\n            this.ltr = this.getLTR();\n        }\n        if (this.state.activeId !== prevState.activeId) {\n            this.setActiveIndicatorOffset();\n            this.updateTabPanelIndex();\n        }\n        if (this.state.tabPanelIndex !== prevState.tabPanelIndex) {\n            this.prevTabPanelIndex = this.state.tabPanelIndex;\n        }\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(BaseTabs, Object.assign({}, this.unhandledProps(), { ref: this.tabsRef, managedClasses: this.generatePivotClassNames(), activeId: this.state.activeId, onUpdate: this.handleTabsUpdate, items: this.props.items, label: this.props.label }),\n            React.createElement(\"span\", { style: { transform: `translateX(${toPx(this.state.offsetX)})` }, className: classNames(this.props.managedClasses.pivot_activeIndicator) })));\n    }\n    /**\n     * Returns tabs managedclasses with new carousel-specific JSS\n     */\n    generatePivotClassNames() {\n        const { pivot, pivot_tabList, pivot_tabContent, pivot_tabPanelContent, pivot_tab, pivot_tab__active, pivot_tabPanel, pivot_tabPanel__hidden, } = this.props.managedClasses;\n        return {\n            tabs: pivot,\n            tabs_tabPanels: this.generateTabPanelsClassNames(),\n            tabs_tabList: pivot_tabList,\n            tabs_tabContent: pivot_tabContent,\n            tabs_tabPanelContent: pivot_tabPanelContent,\n            tab: pivot_tab,\n            tab__active: pivot_tab__active,\n            tabPanel: pivot_tabPanel,\n            tabPanel__hidden: pivot_tabPanel__hidden,\n        };\n    }\n    isSelected(element) {\n        return element.attributes[\"aria-selected\"].value === \"true\";\n    }\n    updateTabPanelIndex() {\n        if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            const mytabsArray = Array.prototype.slice.call(tabElement.querySelectorAll(\"[role='tab']\"));\n            this.setState({\n                tabPanelIndex: mytabsArray.findIndex(this.isSelected),\n            });\n        }\n    }\n    generateTabPanelsClassNames() {\n        const { pivot_tabPanels, pivot_tabPanels__animatePrevious, pivot_tabPanels__animateNext, } = this.props.managedClasses;\n        const indexNotChanged = this.state.tabPanelIndex === this.prevTabPanelIndex;\n        const shouldReverse = this.state.tabPanelIndex < this.prevTabPanelIndex;\n        return classNames(pivot_tabPanels, [pivot_tabPanels__animatePrevious, shouldReverse], [pivot_tabPanels__animateNext, !shouldReverse && !indexNotChanged]);\n    }\n    setActiveIndicatorOffset() {\n        if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            const mytab = tabElement.querySelector(\"[aria-selected='true']\");\n            if (mytab !== null && tabElement !== null) {\n                const width = mytab.getBoundingClientRect().width;\n                const center = width / 2;\n                const offsetX = mytab.getBoundingClientRect().left -\n                    tabElement.getBoundingClientRect().left +\n                    center;\n                if (offsetX !== this.state.offsetX) {\n                    this.setState({\n                        offsetX,\n                    });\n                }\n            }\n        }\n    }\n    // TODO #1438: Add optional direction prop to Pivot and Horizontal overflow\n    /**\n     * Gets the direction of the element\n     */\n    getLTR() {\n        if (canUseDOM()) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            return !tabElement\n                ? Direction.ltr\n                : getComputedStyle(tabElement).direction === Direction.rtl\n                    ? Direction.rtl\n                    : Direction.ltr;\n        }\n    }\n}\nPivot.displayName = `${DisplayNamePrefix}Pivot`;\nPivot.defaultProps = {\n    managedClasses: {},\n};\nexport default Pivot;\n"]},"metadata":{},"sourceType":"module"}