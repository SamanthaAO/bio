{"ast":null,"code":"export default {\n  $schema: \"http://json-schema.org/schema#\",\n  title: \"Viewport positioner\",\n  description: \"A viewport positioner component's schema definition.\",\n  type: \"object\",\n  id: \"@microsoft/fast-components-react-base/viewport-positioner\",\n  properties: {\n    disabled: {\n      title: \"Disabled\",\n      type: \"boolean\"\n    },\n    horizontalPositioningMode: {\n      title: \"Horizontal positioning mode\",\n      type: \"string\",\n      default: \"uncontrolled\",\n      enum: [\"uncontrolled\", \"adjacent\", \"inset\"]\n    },\n    defaultHorizontalPosition: {\n      title: \"Default horizontal position\",\n      type: \"string\",\n      default: \"uncontrolled\",\n      enum: [\"left\", \"right\", \"uncontrolled\"]\n    },\n    horizontalThreshold: {\n      title: \"Horizontal threshold\",\n      type: \"number\"\n    },\n    horizontalAlwaysInView: {\n      title: \"Horizontal always in view\",\n      type: \"boolean\"\n    },\n    verticalPositioningMode: {\n      title: \"Vertical positioning mode\",\n      type: \"string\",\n      default: \"uncontrolled\",\n      enum: [\"uncontrolled\", \"adjacent\", \"inset\"]\n    },\n    defaultVerticalPosition: {\n      title: \"Default vertical position\",\n      type: \"string\",\n      default: \"uncontrolled\",\n      enum: [\"top\", \"bottom\", \"uncontrolled\"]\n    },\n    verticalThreshold: {\n      title: \"Vertical threshold\",\n      type: \"number\"\n    },\n    verticalAlwaysInView: {\n      title: \"Vertical always in view\",\n      type: \"boolean\"\n    },\n    fixedAfterInitialPlacement: {\n      title: \"Fixed after initial placement\",\n      type: \"boolean\"\n    },\n    scaleToFit: {\n      title: \"Scale to fit\",\n      type: \"boolean\",\n      default: false\n    }\n  },\n  reactProperties: {\n    children: {\n      title: \"Children\",\n      type: \"children\",\n      defaults: [\"text\"]\n    }\n  }\n};","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/viewport-positioner/viewport-positioner.schema.js"],"names":["$schema","title","description","type","id","properties","disabled","horizontalPositioningMode","default","enum","defaultHorizontalPosition","horizontalThreshold","horizontalAlwaysInView","verticalPositioningMode","defaultVerticalPosition","verticalThreshold","verticalAlwaysInView","fixedAfterInitialPlacement","scaleToFit","reactProperties","children","defaults"],"mappings":"AAAA,eAAe;AACXA,EAAAA,OAAO,EAAE,gCADE;AAEXC,EAAAA,KAAK,EAAE,qBAFI;AAGXC,EAAAA,WAAW,EAAE,sDAHF;AAIXC,EAAAA,IAAI,EAAE,QAJK;AAKXC,EAAAA,EAAE,EAAE,2DALO;AAMXC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACNL,MAAAA,KAAK,EAAE,UADD;AAENE,MAAAA,IAAI,EAAE;AAFA,KADF;AAKRI,IAAAA,yBAAyB,EAAE;AACvBN,MAAAA,KAAK,EAAE,6BADgB;AAEvBE,MAAAA,IAAI,EAAE,QAFiB;AAGvBK,MAAAA,OAAO,EAAE,cAHc;AAIvBC,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,UAAjB,EAA6B,OAA7B;AAJiB,KALnB;AAWRC,IAAAA,yBAAyB,EAAE;AACvBT,MAAAA,KAAK,EAAE,6BADgB;AAEvBE,MAAAA,IAAI,EAAE,QAFiB;AAGvBK,MAAAA,OAAO,EAAE,cAHc;AAIvBC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,cAAlB;AAJiB,KAXnB;AAiBRE,IAAAA,mBAAmB,EAAE;AACjBV,MAAAA,KAAK,EAAE,sBADU;AAEjBE,MAAAA,IAAI,EAAE;AAFW,KAjBb;AAqBRS,IAAAA,sBAAsB,EAAE;AACpBX,MAAAA,KAAK,EAAE,2BADa;AAEpBE,MAAAA,IAAI,EAAE;AAFc,KArBhB;AAyBRU,IAAAA,uBAAuB,EAAE;AACrBZ,MAAAA,KAAK,EAAE,2BADc;AAErBE,MAAAA,IAAI,EAAE,QAFe;AAGrBK,MAAAA,OAAO,EAAE,cAHY;AAIrBC,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,UAAjB,EAA6B,OAA7B;AAJe,KAzBjB;AA+BRK,IAAAA,uBAAuB,EAAE;AACrBb,MAAAA,KAAK,EAAE,2BADc;AAErBE,MAAAA,IAAI,EAAE,QAFe;AAGrBK,MAAAA,OAAO,EAAE,cAHY;AAIrBC,MAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,cAAlB;AAJe,KA/BjB;AAqCRM,IAAAA,iBAAiB,EAAE;AACfd,MAAAA,KAAK,EAAE,oBADQ;AAEfE,MAAAA,IAAI,EAAE;AAFS,KArCX;AAyCRa,IAAAA,oBAAoB,EAAE;AAClBf,MAAAA,KAAK,EAAE,yBADW;AAElBE,MAAAA,IAAI,EAAE;AAFY,KAzCd;AA6CRc,IAAAA,0BAA0B,EAAE;AACxBhB,MAAAA,KAAK,EAAE,+BADiB;AAExBE,MAAAA,IAAI,EAAE;AAFkB,KA7CpB;AAiDRe,IAAAA,UAAU,EAAE;AACRjB,MAAAA,KAAK,EAAE,cADC;AAERE,MAAAA,IAAI,EAAE,SAFE;AAGRK,MAAAA,OAAO,EAAE;AAHD;AAjDJ,GAND;AA6DXW,EAAAA,eAAe,EAAE;AACbC,IAAAA,QAAQ,EAAE;AACNnB,MAAAA,KAAK,EAAE,UADD;AAENE,MAAAA,IAAI,EAAE,UAFA;AAGNkB,MAAAA,QAAQ,EAAE,CAAC,MAAD;AAHJ;AADG;AA7DN,CAAf","sourcesContent":["export default {\n    $schema: \"http://json-schema.org/schema#\",\n    title: \"Viewport positioner\",\n    description: \"A viewport positioner component's schema definition.\",\n    type: \"object\",\n    id: \"@microsoft/fast-components-react-base/viewport-positioner\",\n    properties: {\n        disabled: {\n            title: \"Disabled\",\n            type: \"boolean\",\n        },\n        horizontalPositioningMode: {\n            title: \"Horizontal positioning mode\",\n            type: \"string\",\n            default: \"uncontrolled\",\n            enum: [\"uncontrolled\", \"adjacent\", \"inset\"],\n        },\n        defaultHorizontalPosition: {\n            title: \"Default horizontal position\",\n            type: \"string\",\n            default: \"uncontrolled\",\n            enum: [\"left\", \"right\", \"uncontrolled\"],\n        },\n        horizontalThreshold: {\n            title: \"Horizontal threshold\",\n            type: \"number\",\n        },\n        horizontalAlwaysInView: {\n            title: \"Horizontal always in view\",\n            type: \"boolean\",\n        },\n        verticalPositioningMode: {\n            title: \"Vertical positioning mode\",\n            type: \"string\",\n            default: \"uncontrolled\",\n            enum: [\"uncontrolled\", \"adjacent\", \"inset\"],\n        },\n        defaultVerticalPosition: {\n            title: \"Default vertical position\",\n            type: \"string\",\n            default: \"uncontrolled\",\n            enum: [\"top\", \"bottom\", \"uncontrolled\"],\n        },\n        verticalThreshold: {\n            title: \"Vertical threshold\",\n            type: \"number\",\n        },\n        verticalAlwaysInView: {\n            title: \"Vertical always in view\",\n            type: \"boolean\",\n        },\n        fixedAfterInitialPlacement: {\n            title: \"Fixed after initial placement\",\n            type: \"boolean\",\n        },\n        scaleToFit: {\n            title: \"Scale to fit\",\n            type: \"boolean\",\n            default: false,\n        },\n    },\n    reactProperties: {\n        children: {\n            title: \"Children\",\n            type: \"children\",\n            defaults: [\"text\"],\n        },\n    },\n};\n"]},"metadata":{},"sourceType":"module"}