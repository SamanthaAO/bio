{"ast":null,"code":"var _jsxFileName = \"/Users/samorcutt/Desktop/bio/src/App.js\";\nimport React from 'react';\nimport { Grid, Column, Page } from \"@microsoft/fast-layouts-react\";\nimport { Pivot, Image } from \"@microsoft/fast-components-react-msft\"; //import { uniqueId } from \"lodash-es\";\n\nimport { DesignSystemDefaults } from '@microsoft/fast-components-styles-msft';\nimport { DesignSystemProvider } from \"@microsoft/fast-jss-manager-react\";\nimport { mergeDesignSystem } from \"@microsoft/fast-jss-manager\";\nimport { AnimateFrom } from \"@microsoft/fast-animation\";\nimport './assets/styles/App.css';\nimport { info } from \"./data/info\";\nimport MyHeading from \"./components/MyHeading.js\";\nimport MySlider from \"./components/MySlider.js\";\nlet newDesign = {\n  backgroundColor: \"#FFF\"\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColor = () => {\n      var x = document.querySelector(\"input\").value;\n\n      switch (true) {\n        case x >= 0 && x <= 5:\n        default:\n          console.log(x);\n          backgroundColor = \"#FFF\";\n          break;\n\n        case x >= 6 && x <= 15:\n          console.log(x);\n          backgroundColor = \"#CB2\";\n          break;\n\n        case x >= 16 && x <= 25:\n          console.log(x);\n          backgroundColor = \"#362\";\n          break;\n\n        case x >= 26 && x <= 35:\n          console.log(x);\n          backgroundColor = \"#A00\";\n          break;\n\n        case x >= 36 && x <= 45:\n          console.log(x);\n          backgroundColor = \"#005\";\n          break;\n\n        case x >= 46 && x <= 50:\n          console.log(x);\n          backgroundColor = \"#000\";\n          break;\n        // default:\n        //   console.log(x)\n        //   this.setState({ backgroundColor: this.state.backgroundColor });\n      }\n\n      this.setState({\n        myDesign: mergeDesignSystem(DesignSystemDefaults, backgroundColor)\n      }); // this.changeColorDisplay();\n    };\n\n    this.changeColor = this.changeColor.bind(this);\n    this.changeColorDisplay = this.changeColorDisplay.bind(this);\n    this.onTabUpdate = this.onTabUpdate.bind(this);\n    this.animateImage = this.animateImage.bind(this);\n    this.state = {\n      imageId: 0,\n      backgroundColor: \"#FFF\",\n      myDesign: mergeDesignSystem(DesignSystemDefaults, newDesign)\n    };\n  } // when active tab changes change image\n\n\n  onTabUpdate(activeTab) {\n    const newImageId = activeTab;\n    this.setState({\n      imageId: newImageId\n    }); // this.animateImage();\n  } //animates image\n\n\n  animateImage() {\n    const imageDisplay = document.querySelector(\".imageDisplay\");\n    const imageAnimate = new AnimateFrom(imageDisplay, {\n      scale: 0\n    }, {\n      duration: 400\n    });\n    imageAnimate.play();\n  } //switch for slider that changes the state of background color\n\n\n  //changes color display based on this.state.backgroundColor\n  changeColorDisplay() {\n    newDesign.backgroundColor = this.state.backgroundColor;\n    this.setState({\n      myDesign: mergeDesignSystem(DesignSystemDefaults, backgroundColor)\n    });\n  }\n\n  componentDidMount() {\n    this.animateImage();\n  }\n\n  render() {\n    return React.createElement(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MyHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(MySlider, {\n      changeColor: this.changeColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(DesignSystemProvider, {\n      designSystem: this.state.myDesign,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      id: \"main\",\n      style: {\n        backgroundColor: this.state.myDesign.backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Column, {\n      id: \"imageColumn\",\n      position: [1, 1, 1, 1],\n      span: [12, 12, 5, 5],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"imageDisplay\",\n      id: `${info.sections[this.state.imageId].headingText}-image`,\n      src: info.sections[this.state.imageId].image.src,\n      alt: info.sections[this.state.imageId].image.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Column, {\n      position: [1, 1, 7, 6],\n      span: [12, 12, 8, 9],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Pivot, {\n      id: \"myPivot\",\n      jssStyleSheet: {\n        pivot_tabPanelContent: {\n          fontSize: \"20px\",\n          border: \"5px dotted indianred\",\n          padding: \"1em\"\n        },\n        pivot_activeIndicator: {\n          backgroundColor: \"cadetblue\"\n        }\n      },\n      label: \"Pivot Component containing information about Samantha Orcutt\",\n      onUpdate: activeTab => this.onTabUpdate(activeTab),\n      items: info.sections.map((x, i) => {\n        let obj = {};\n\n        obj.tab = className => React.createElement(\"h2\", {\n          className: className,\n          id: `tab-${i}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, x.headingText, \" \");\n\n        obj.content = className => React.createElement(\"p\", {\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, x.paragraphText);\n\n        obj.id = i.toString(); // uniqueId();\n\n        return obj;\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/src/App.js"],"names":["React","Grid","Column","Page","Pivot","Image","DesignSystemDefaults","DesignSystemProvider","mergeDesignSystem","AnimateFrom","info","MyHeading","MySlider","newDesign","backgroundColor","App","Component","constructor","props","changeColor","x","document","querySelector","value","console","log","setState","myDesign","bind","changeColorDisplay","onTabUpdate","animateImage","state","imageId","activeTab","newImageId","imageDisplay","imageAnimate","scale","duration","play","componentDidMount","render","sections","headingText","image","src","alt","pivot_tabPanelContent","fontSize","border","padding","pivot_activeIndicator","map","i","obj","tab","className","content","paragraphText","id","toString"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Grid, Column, Page } from \"@microsoft/fast-layouts-react\";\nimport { Pivot, Image } from \"@microsoft/fast-components-react-msft\";\n//import { uniqueId } from \"lodash-es\";\n\nimport { DesignSystemDefaults } from '@microsoft/fast-components-styles-msft';\nimport { DesignSystemProvider } from \"@microsoft/fast-jss-manager-react\";\nimport { mergeDesignSystem } from \"@microsoft/fast-jss-manager\";\n\nimport { AnimateFrom } from \"@microsoft/fast-animation\";\n\nimport './assets/styles/App.css';\nimport { info } from \"./data/info\";\n\n\nimport MyHeading from \"./components/MyHeading.js\";\nimport MySlider from \"./components/MySlider.js\";\n\n\nlet newDesign = {\n  backgroundColor: \"#FFF\"\n};\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.changeColor = this.changeColor.bind(this);\n    this.changeColorDisplay = this.changeColorDisplay.bind(this);\n    \n    \n    this.onTabUpdate = this.onTabUpdate.bind(this);\n    this.animateImage = this.animateImage.bind(this);\n\n    this.state = {\n      imageId: 0,\n      backgroundColor: \"#FFF\",\n      myDesign: mergeDesignSystem(DesignSystemDefaults, newDesign),\n    }\n  }\n\n// when active tab changes change image\n  onTabUpdate(activeTab) {\n    const newImageId = activeTab;\n    this.setState({ imageId: newImageId });\n    // this.animateImage();\n  }\n\n  \n  //animates image\n  animateImage() {\n    const imageDisplay = document.querySelector(\".imageDisplay\");\n    const imageAnimate = new AnimateFrom(imageDisplay, { scale: 0 }, { duration: 400 });\n    imageAnimate.play();\n  }\n\n\n  //switch for slider that changes the state of background color\n  changeColor = () => {\n    var x = document.querySelector(\"input\").value;\n    switch (true) {\n      case (x >= 0 && x <= 5):\n      default:\n        console.log(x)\n        backgroundColor = \"#FFF\";\n\n        break;\n\n      case (x >= 6 && x <= 15):\n        console.log(x)\n        backgroundColor = \"#CB2\";\n\n        break;\n\n      case (x >= 16 && x <= 25):\n        console.log(x)\n        backgroundColor = \"#362\";\n        break;\n\n      case (x >= 26 && x <= 35):\n        console.log(x)\n        backgroundColor = \"#A00\";\n        break;\n\n      case (x >= 36 && x <= 45):\n        console.log(x)\n        backgroundColor = \"#005\";\n        break;\n\n      case (x >= 46 && x <= 50):\n        console.log(x)\n        backgroundColor = \"#000\";\n        break;\n\n      // default:\n      //   console.log(x)\n      //   this.setState({ backgroundColor: this.state.backgroundColor });\n\n    }\n    this.setState({\n      myDesign: mergeDesignSystem(DesignSystemDefaults, backgroundColor) \n    })\n    // this.changeColorDisplay();\n\n  }\n\n  //changes color display based on this.state.backgroundColor\n  changeColorDisplay() {\n    newDesign.backgroundColor = this.state.backgroundColor;\n    this.setState({ myDesign: mergeDesignSystem(DesignSystemDefaults, backgroundColor) })\n  }\n\n  componentDidMount () {\n    this.animateImage();\n  }\n\n\n  render() {\n\n    return (\n      \n          <Page >\n\n            <MyHeading />\n\n            <MySlider\n              changeColor={this.changeColor}\n            />\n            <DesignSystemProvider designSystem={this.state.myDesign}>\n              \n                <Grid id=\"main\"\n                 style={{ backgroundColor: this.state.myDesign.backgroundColor }}\n                >\n\n                <Column\n                  id=\"imageColumn\"\n                  position={[1, 1, 1, 1]}\n                  span={[12, 12, 5, 5]}\n                >\n                  <Image\n                    className=\"imageDisplay\"\n                    id={`${info.sections[this.state.imageId].headingText}-image`}\n                    src={info.sections[this.state.imageId].image.src}\n                    alt={info.sections[this.state.imageId].image.alt}\n                  />\n                </Column>\n\n                <Column\n                  position={[1, 1, 7, 6]}\n                  span={[12, 12, 8, 9]}\n                >\n\n                  <Pivot\n                    id=\"myPivot\"\n                    jssStyleSheet={\n                      {\n                        pivot_tabPanelContent: {\n                          fontSize: \"20px\",\n                          border: \"5px dotted indianred\",\n                          padding: \"1em\"\n                        },\n                        pivot_activeIndicator: {\n                          backgroundColor: \"cadetblue\"\n                        }\n                      }}\n                    label=\"Pivot Component containing information about Samantha Orcutt\"\n                    onUpdate={(activeTab) => this.onTabUpdate(activeTab)}\n                    items={info.sections.map((x, i) => {\n                      let obj = {};\n                      obj.tab = (className) => (\n                        <h2 className={className} id={`tab-${i}`}>{x.headingText} </h2>\n                      );\n                      obj.content = (className) => (\n                        <p className={className}>{x.paragraphText}</p>\n                      );\n                      obj.id = i.toString();\n                      // uniqueId();\n                      return obj;\n                    })\n                    }\n                  />\n                </Column>\n\n              </Grid>\n              \n            </DesignSystemProvider>\n          </Page>\n        \n\n      \n\n    );\n  }\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}