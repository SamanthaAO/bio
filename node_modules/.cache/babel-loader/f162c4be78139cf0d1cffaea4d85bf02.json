{"ast":null,"code":"import React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { PaneResizeDirection } from \"./pane.props\";\nimport { west } from \"../row\";\nimport rafThrottle from \"raf-throttle\";\nimport { applyFocusVisible, toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { classNames, keyCodeArrowLeft, keyCodeArrowRight } from \"@microsoft/fast-web-utilities\";\nexport const paneStyleSheet = {\n  pane: {\n    position: \"relative\",\n    flex: \"0 1 auto\",\n    display: \"flex\",\n    \"flex-direction\": \"column\"\n  },\n  pane_resizeHandle: Object.assign({\n    position: \"absolute\",\n    padding: \"0\",\n    opacity: \"0\",\n    top: \"0\",\n    width: toPx(8),\n    height: \"100%\",\n    \"z-index\": \"1\",\n    transition: \"transform .04s ease-in-out\",\n    outline: \"none\",\n    transform: \"scale(.5, 1)\",\n    \"&:hover\": {\n      cursor: \"ew-resize\"\n    }\n  }, applyFocusVisible({\n    opacity: \"1\",\n    transform: \"scale(1)\"\n  }), {\n    \"&:active\": {\n      opacity: \"1\",\n      transform: \"scale(1)\"\n    }\n  }),\n  pane__resizeWest: {\n    \"& $pane_resizeHandle\": {\n      left: \"-4px\"\n    }\n  },\n  pane__resizeEast: {\n    \"& $pane_resizeHandle\": {\n      right: \"-4px\"\n    }\n  },\n  pane__overlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    \"z-index\": \"2\"\n  },\n  pane__hidden: {\n    display: \"none\"\n  }\n};\nexport class Pane extends Foundation {\n  constructor(props) {\n    super(props);\n    /**\n     * All handled props\n     */\n\n    this.handledProps = {\n      collapsed: void 0,\n      collapsedWidth: void 0,\n      hidden: void 0,\n      id: void 0,\n      initialWidth: void 0,\n      managedClasses: void 0,\n      maxWidth: void 0,\n      minWidth: void 0,\n      onResize: void 0,\n      overlay: void 0,\n      resizeControl: void 0,\n      resizable: void 0,\n      resizeFrom: void 0,\n      width: void 0\n    };\n    /**\n     * Handle keyPress\n     */\n\n    this.onKeyDown = e => {\n      const isShift = e.shiftKey;\n      const offset = isShift ? 10 : 1;\n      let width;\n\n      switch (e.keyCode) {\n        case keyCodeArrowLeft:\n          width = this.rootElement.current.clientWidth - offset;\n          break;\n\n        case keyCodeArrowRight:\n          width = this.rootElement.current.clientWidth + offset;\n          break;\n\n        default:\n          break;\n      }\n\n      this.setWidth(width); // Fire the resize callback\n\n      this.onResize(e, width);\n    };\n    /**\n     * Handle mouseDown\n     */\n\n\n    this.onMouseDown = e => {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      this.setState({\n        resizing: true,\n        dragReference: e.pageX\n      });\n    };\n    /**\n     * Handle mouseUp\n     */\n\n\n    this.onMouseUp = e => {\n      // only listen for left click\n      if (e.button !== 0) {\n        return;\n      }\n\n      this.setState({\n        resizing: false,\n        dragReference: null\n      });\n    };\n\n    this.onMouseMove = e => {\n      if (!this.state.resizing) {\n        return;\n      }\n\n      const offset = this.state.dragReference - e.pageX;\n      const updatedWidth = this.props.resizeFrom === west ? this.width() + offset : this.width() - offset;\n\n      if (updatedWidth <= this.props.minWidth || updatedWidth >= this.props.maxWidth) {\n        return;\n      } // Fire the resize callback\n\n\n      this.onResize(e, updatedWidth);\n      this.setState({\n        dragReference: e.pageX\n      });\n      this.setWidth(updatedWidth);\n    };\n\n    this.onWindowResize = e => {\n      this.setWidth(this.rootElement.current.clientWidth);\n    };\n\n    this.onResize = (e, width) => {\n      if (typeof this.props.onResize === \"function\") {\n        this.props.onResize(e, width);\n      }\n    };\n\n    this.state = {\n      resizing: false,\n      dragReference: null,\n      width: this.props.initialWidth\n    };\n    this.onResize = throttle(this.onResize, 16);\n    this.onMouseMove = throttle(this.onMouseMove, 16);\n    this.onWindowResize = rafThrottle(this.onWindowResize);\n    this.rootElement = React.createRef();\n  }\n  /**\n   * Return the width of Pane. Sources from props first, and then state if props.width is undefined\n   */\n\n\n  width() {\n    return this.props.width || this.state.width;\n  }\n  /**\n   * Handle when component is mounted to the DOM\n   */\n\n\n  componentDidMount() {\n    if (canUseDOM()) {\n      window.addEventListener(\"resize\", this.onWindowResize);\n    }\n  }\n  /**\n   * Handle when component is removed from the DOM\n   */\n\n\n  componentWillUnmount() {\n    if (canUseDOM()) {\n      window.removeEventListener(\"resize\", this.onWindowResize);\n    }\n  }\n  /**\n   * Handle when component updates\n   */\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (canUseDOM()) {\n      if (this.state.resizing && !prevState.resizing) {\n        document.addEventListener(\"mouseup\", this.onMouseUp);\n        document.addEventListener(\"mousemove\", this.onMouseMove);\n      } else if (!this.state.resizing && prevState.resizing) {\n        document.removeEventListener(\"mouseup\", this.onMouseUp);\n        document.removeEventListener(\"mousemove\", this.onMouseMove);\n      }\n    }\n  }\n  /**\n   * Gets the generated width of the grid pane depending on minWidth, maxWidth, and collapsed state.\n   */\n\n\n  getWidth() {\n    if (this.props.collapsed) {\n      return this.props.collapsedWidth;\n    } else if (this.width() < this.props.minWidth) {\n      return this.props.minWidth;\n    } else if (this.width() > this.props.maxWidth) {\n      return this.props.maxWidth;\n    } else {\n      return this.width();\n    }\n  }\n  /**\n   * generates the inline style property\n   */\n\n\n  generateStyleAttribute() {\n    const width = toPx(this.getWidth());\n    const styles = {};\n    styles.minWidth = this.props.collapsed ? toPx(this.props.collapsedWidth) : this.props.resizable ? toPx(this.props.minWidth) : width;\n\n    if (this.props.overlay) {\n      styles.width = width;\n    } else {\n      styles.flexBasis = width;\n    }\n\n    return Object.assign(styles, this.props.style);\n  }\n  /**\n   * Render the resize button\n   */\n\n\n  renderResizeControl() {\n    if (!this.props.resizable || this.props.collapsed) {\n      return null;\n    }\n\n    const resizeProps = {\n      className: this.props.managedClasses.pane_resizeHandle,\n      onMouseDown: this.onMouseDown,\n      onKeyDown: this.onKeyDown,\n      role: \"separator\"\n    };\n\n    if (typeof this.props.resizeControl === \"function\") {\n      return this.props.resizeControl(resizeProps);\n    } else {\n      return React.createElement(\"button\", Object.assign({}, resizeProps));\n    }\n  }\n\n  setWidth(width) {\n    this.setState({\n      width\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames(),\n      style: this.generateStyleAttribute(),\n      ref: this.rootElement,\n      id: this.props.id,\n      \"aria-hidden\": this.props.hidden\n    }), this.props.children, this.renderResizeControl());\n  }\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          pane = _this$props$managedCl.pane,\n          pane__resizeEast = _this$props$managedCl.pane__resizeEast,\n          pane__resizeWest = _this$props$managedCl.pane__resizeWest,\n          pane__overlay = _this$props$managedCl.pane__overlay,\n          pane__hidden = _this$props$managedCl.pane__hidden;\n    const resizeFrom = this.props.resizeFrom;\n    const classes = classNames(pane, [pane__resizeEast, resizeFrom === PaneResizeDirection.east], [pane__resizeWest, resizeFrom === PaneResizeDirection.west], [pane__overlay, this.props.overlay], [pane__hidden, this.props.hidden]);\n    return super.generateClassNames(classes);\n  }\n\n}\nPane.displayName = \"Pane\";\n/**\n * The default props of the Pane component\n */\n\nPane.defaultProps = {\n  initialWidth: 300,\n  collapsedWidth: 40,\n  minWidth: 100,\n  maxWidth: 800,\n  resizable: false,\n  collapsed: false,\n  overlay: false,\n  hidden: false,\n  managedClasses: {}\n};\nexport * from \"./pane.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-layouts-react/dist/pane/pane.js"],"names":["React","throttle","PaneResizeDirection","west","rafThrottle","applyFocusVisible","toPx","Foundation","canUseDOM","classNames","keyCodeArrowLeft","keyCodeArrowRight","paneStyleSheet","pane","position","flex","display","pane_resizeHandle","Object","assign","padding","opacity","top","width","height","transition","outline","transform","cursor","pane__resizeWest","left","pane__resizeEast","right","pane__overlay","pane__hidden","Pane","constructor","props","handledProps","collapsed","collapsedWidth","hidden","id","initialWidth","managedClasses","maxWidth","minWidth","onResize","overlay","resizeControl","resizable","resizeFrom","onKeyDown","e","isShift","shiftKey","offset","keyCode","rootElement","current","clientWidth","setWidth","onMouseDown","button","setState","resizing","dragReference","pageX","onMouseUp","onMouseMove","state","updatedWidth","onWindowResize","createRef","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","document","getWidth","generateStyleAttribute","styles","flexBasis","style","renderResizeControl","resizeProps","className","role","createElement","render","unhandledProps","generateClassNames","ref","children","classes","east","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { throttle } from \"lodash-es\";\nimport { PaneResizeDirection, } from \"./pane.props\";\nimport { west } from \"../row\";\nimport rafThrottle from \"raf-throttle\";\nimport { applyFocusVisible, toPx } from \"@microsoft/fast-jss-utilities\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { classNames, keyCodeArrowLeft, keyCodeArrowRight, } from \"@microsoft/fast-web-utilities\";\nexport const paneStyleSheet = {\n    pane: {\n        position: \"relative\",\n        flex: \"0 1 auto\",\n        display: \"flex\",\n        \"flex-direction\": \"column\",\n    },\n    pane_resizeHandle: Object.assign({ position: \"absolute\", padding: \"0\", opacity: \"0\", top: \"0\", width: toPx(8), height: \"100%\", \"z-index\": \"1\", transition: \"transform .04s ease-in-out\", outline: \"none\", transform: \"scale(.5, 1)\", \"&:hover\": {\n            cursor: \"ew-resize\",\n        } }, applyFocusVisible({\n        opacity: \"1\",\n        transform: \"scale(1)\",\n    }), { \"&:active\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n        } }),\n    pane__resizeWest: {\n        \"& $pane_resizeHandle\": {\n            left: \"-4px\",\n        },\n    },\n    pane__resizeEast: {\n        \"& $pane_resizeHandle\": {\n            right: \"-4px\",\n        },\n    },\n    pane__overlay: {\n        position: \"absolute\",\n        height: \"100%\",\n        \"z-index\": \"2\",\n    },\n    pane__hidden: {\n        display: \"none\",\n    },\n};\nexport class Pane extends Foundation {\n    constructor(props) {\n        super(props);\n        /**\n         * All handled props\n         */\n        this.handledProps = {\n            collapsed: void 0,\n            collapsedWidth: void 0,\n            hidden: void 0,\n            id: void 0,\n            initialWidth: void 0,\n            managedClasses: void 0,\n            maxWidth: void 0,\n            minWidth: void 0,\n            onResize: void 0,\n            overlay: void 0,\n            resizeControl: void 0,\n            resizable: void 0,\n            resizeFrom: void 0,\n            width: void 0,\n        };\n        /**\n         * Handle keyPress\n         */\n        this.onKeyDown = (e) => {\n            const isShift = e.shiftKey;\n            const offset = isShift ? 10 : 1;\n            let width;\n            switch (e.keyCode) {\n                case keyCodeArrowLeft:\n                    width = this.rootElement.current.clientWidth - offset;\n                    break;\n                case keyCodeArrowRight:\n                    width = this.rootElement.current.clientWidth + offset;\n                    break;\n                default:\n                    break;\n            }\n            this.setWidth(width);\n            // Fire the resize callback\n            this.onResize(e, width);\n        };\n        /**\n         * Handle mouseDown\n         */\n        this.onMouseDown = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: true,\n                dragReference: e.pageX,\n            });\n        };\n        /**\n         * Handle mouseUp\n         */\n        this.onMouseUp = (e) => {\n            // only listen for left click\n            if (e.button !== 0) {\n                return;\n            }\n            this.setState({\n                resizing: false,\n                dragReference: null,\n            });\n        };\n        this.onMouseMove = (e) => {\n            if (!this.state.resizing) {\n                return;\n            }\n            const offset = this.state.dragReference - e.pageX;\n            const updatedWidth = this.props.resizeFrom === west\n                ? this.width() + offset\n                : this.width() - offset;\n            if (updatedWidth <= this.props.minWidth || updatedWidth >= this.props.maxWidth) {\n                return;\n            }\n            // Fire the resize callback\n            this.onResize(e, updatedWidth);\n            this.setState({\n                dragReference: e.pageX,\n            });\n            this.setWidth(updatedWidth);\n        };\n        this.onWindowResize = (e) => {\n            this.setWidth(this.rootElement.current.clientWidth);\n        };\n        this.onResize = (e, width) => {\n            if (typeof this.props.onResize === \"function\") {\n                this.props.onResize(e, width);\n            }\n        };\n        this.state = {\n            resizing: false,\n            dragReference: null,\n            width: this.props.initialWidth,\n        };\n        this.onResize = throttle(this.onResize, 16);\n        this.onMouseMove = throttle(this.onMouseMove, 16);\n        this.onWindowResize = rafThrottle(this.onWindowResize);\n        this.rootElement = React.createRef();\n    }\n    /**\n     * Return the width of Pane. Sources from props first, and then state if props.width is undefined\n     */\n    width() {\n        return this.props.width || this.state.width;\n    }\n    /**\n     * Handle when component is mounted to the DOM\n     */\n    componentDidMount() {\n        if (canUseDOM()) {\n            window.addEventListener(\"resize\", this.onWindowResize);\n        }\n    }\n    /**\n     * Handle when component is removed from the DOM\n     */\n    componentWillUnmount() {\n        if (canUseDOM()) {\n            window.removeEventListener(\"resize\", this.onWindowResize);\n        }\n    }\n    /**\n     * Handle when component updates\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (canUseDOM()) {\n            if (this.state.resizing && !prevState.resizing) {\n                document.addEventListener(\"mouseup\", this.onMouseUp);\n                document.addEventListener(\"mousemove\", this.onMouseMove);\n            }\n            else if (!this.state.resizing && prevState.resizing) {\n                document.removeEventListener(\"mouseup\", this.onMouseUp);\n                document.removeEventListener(\"mousemove\", this.onMouseMove);\n            }\n        }\n    }\n    /**\n     * Gets the generated width of the grid pane depending on minWidth, maxWidth, and collapsed state.\n     */\n    getWidth() {\n        if (this.props.collapsed) {\n            return this.props.collapsedWidth;\n        }\n        else if (this.width() < this.props.minWidth) {\n            return this.props.minWidth;\n        }\n        else if (this.width() > this.props.maxWidth) {\n            return this.props.maxWidth;\n        }\n        else {\n            return this.width();\n        }\n    }\n    /**\n     * generates the inline style property\n     */\n    generateStyleAttribute() {\n        const width = toPx(this.getWidth());\n        const styles = {};\n        styles.minWidth = this.props.collapsed\n            ? toPx(this.props.collapsedWidth)\n            : this.props.resizable\n                ? toPx(this.props.minWidth)\n                : width;\n        if (this.props.overlay) {\n            styles.width = width;\n        }\n        else {\n            styles.flexBasis = width;\n        }\n        return Object.assign(styles, this.props.style);\n    }\n    /**\n     * Render the resize button\n     */\n    renderResizeControl() {\n        if (!this.props.resizable || this.props.collapsed) {\n            return null;\n        }\n        const resizeProps = {\n            className: this.props.managedClasses.pane_resizeHandle,\n            onMouseDown: this.onMouseDown,\n            onKeyDown: this.onKeyDown,\n            role: \"separator\",\n        };\n        if (typeof this.props.resizeControl === \"function\") {\n            return this.props.resizeControl(resizeProps);\n        }\n        else {\n            return React.createElement(\"button\", Object.assign({}, resizeProps));\n        }\n    }\n    setWidth(width) {\n        this.setState({\n            width,\n        });\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), style: this.generateStyleAttribute(), ref: this.rootElement, id: this.props.id, \"aria-hidden\": this.props.hidden }),\n            this.props.children,\n            this.renderResizeControl()));\n    }\n    generateClassNames() {\n        const { pane, pane__resizeEast, pane__resizeWest, pane__overlay, pane__hidden, } = this.props.managedClasses;\n        const resizeFrom = this.props.resizeFrom;\n        const classes = classNames(pane, [pane__resizeEast, resizeFrom === PaneResizeDirection.east], [pane__resizeWest, resizeFrom === PaneResizeDirection.west], [pane__overlay, this.props.overlay], [pane__hidden, this.props.hidden]);\n        return super.generateClassNames(classes);\n    }\n}\nPane.displayName = \"Pane\";\n/**\n * The default props of the Pane component\n */\nPane.defaultProps = {\n    initialWidth: 300,\n    collapsedWidth: 40,\n    minWidth: 100,\n    maxWidth: 800,\n    resizable: false,\n    collapsed: false,\n    overlay: false,\n    hidden: false,\n    managedClasses: {},\n};\nexport * from \"./pane.props\";\n"]},"metadata":{},"sourceType":"module"}