{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\n/**\n * Radio slot options\n */\n\nexport var RadioSlot;\n\n(function (RadioSlot) {\n  RadioSlot[\"label\"] = \"label\";\n})(RadioSlot || (RadioSlot = {}));\n\nclass Radio extends Foundation {\n  constructor(props) {\n    super(props);\n    /**\n     * Handled props instantiation\n     */\n\n    this.handledProps = {\n      inputId: void 0,\n      checked: void 0,\n      disabled: void 0,\n      managedClasses: void 0,\n      name: void 0,\n      onChange: void 0,\n      label: void 0,\n      value: void 0\n    };\n\n    this.handleRadioChange = e => {\n      if (typeof this.props.checked !== \"boolean\") {\n        this.setState({\n          checked: !this.state.checked\n        });\n      }\n\n      if (typeof this.props.onChange === \"function\") {\n        this.props.onChange(e);\n      }\n    };\n\n    this.state = {\n      checked: this.props.checked || false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (typeof nextProps.checked === \"boolean\" && nextProps.checked !== prevState.checked) {\n      return {\n        checked: nextProps.checked\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$props$managedCl = this.props.managedClasses,\n          radio_input = _this$props$managedCl.radio_input,\n          radio_stateIndicator = _this$props$managedCl.radio_stateIndicator;\n    return React.createElement(\"div\", Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames()\n    }), React.createElement(\"input\", {\n      className: classNames(radio_input),\n      type: \"radio\",\n      id: this.props.inputId,\n      name: this.props.name,\n      onChange: this.handleRadioChange,\n      disabled: this.props.disabled || null,\n      checked: this.state.checked,\n      value: this.props.value\n    }), React.createElement(\"span\", {\n      className: classNames(radio_stateIndicator)\n    }), this.renderChildrenWithSlot(RadioSlot.label), this.renderLabel());\n  }\n  /**\n   * Generates class names\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl2 = this.props.managedClasses,\n          radio = _this$props$managedCl2.radio,\n          radio__disabled = _this$props$managedCl2.radio__disabled,\n          radio__checked = _this$props$managedCl2.radio__checked;\n    return super.generateClassNames(classNames(radio, [radio__disabled, this.props.disabled], [radio__checked, this.state.checked]));\n  }\n  /**\n   * @deprecated - remove in next major version\n   */\n\n\n  renderChildrenWithSlot(slot) {\n    const node = this.withSlot(RadioSlot.label);\n    return React.Children.map(node, (child, index) => {\n      return React.cloneElement(child, {\n        className: classNames(child.props.className, this.props.managedClasses.radio_label)\n      });\n    });\n  }\n\n  renderLabel() {\n    if (typeof this.props.label === \"function\") {\n      return this.props.label(classNames(this.props.managedClasses.radio_label));\n    }\n  }\n\n}\n\nRadio.displayName = `${DisplayNamePrefix}Radio`;\nRadio.defaultProps = {\n  managedClasses: {}\n};\nexport default Radio;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/radio/radio.js"],"names":["Foundation","classNames","React","DisplayNamePrefix","RadioSlot","Radio","constructor","props","handledProps","inputId","checked","disabled","managedClasses","name","onChange","label","value","handleRadioChange","e","setState","state","getDerivedStateFromProps","nextProps","prevState","render","radio_input","radio_stateIndicator","createElement","Object","assign","unhandledProps","className","generateClassNames","type","id","renderChildrenWithSlot","renderLabel","radio","radio__disabled","radio__checked","slot","node","withSlot","Children","map","child","index","cloneElement","radio_label","displayName","defaultProps"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\n/**\n * Radio slot options\n */\nexport var RadioSlot;\n(function (RadioSlot) {\n    RadioSlot[\"label\"] = \"label\";\n})(RadioSlot || (RadioSlot = {}));\nclass Radio extends Foundation {\n    constructor(props) {\n        super(props);\n        /**\n         * Handled props instantiation\n         */\n        this.handledProps = {\n            inputId: void 0,\n            checked: void 0,\n            disabled: void 0,\n            managedClasses: void 0,\n            name: void 0,\n            onChange: void 0,\n            label: void 0,\n            value: void 0,\n        };\n        this.handleRadioChange = (e) => {\n            if (typeof this.props.checked !== \"boolean\") {\n                this.setState({ checked: !this.state.checked });\n            }\n            if (typeof this.props.onChange === \"function\") {\n                this.props.onChange(e);\n            }\n        };\n        this.state = {\n            checked: this.props.checked || false,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (typeof nextProps.checked === \"boolean\" &&\n            nextProps.checked !== prevState.checked) {\n            return {\n                checked: nextProps.checked,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { radio_input, radio_stateIndicator, } = this.props.managedClasses;\n        return (React.createElement(\"div\", Object.assign({}, this.unhandledProps(), { className: this.generateClassNames() }),\n            React.createElement(\"input\", { className: classNames(radio_input), type: \"radio\", id: this.props.inputId, name: this.props.name, onChange: this.handleRadioChange, disabled: this.props.disabled || null, checked: this.state.checked, value: this.props.value }),\n            React.createElement(\"span\", { className: classNames(radio_stateIndicator) }),\n            this.renderChildrenWithSlot(RadioSlot.label),\n            this.renderLabel()));\n    }\n    /**\n     * Generates class names\n     */\n    generateClassNames() {\n        const { radio, radio__disabled, radio__checked, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(radio, [radio__disabled, this.props.disabled], [radio__checked, this.state.checked]));\n    }\n    /**\n     * @deprecated - remove in next major version\n     */\n    renderChildrenWithSlot(slot) {\n        const node = this.withSlot(RadioSlot.label);\n        return React.Children.map(node, (child, index) => {\n            return React.cloneElement(child, {\n                className: classNames(child.props.className, this.props.managedClasses.radio_label),\n            });\n        });\n    }\n    renderLabel() {\n        if (typeof this.props.label === \"function\") {\n            return this.props.label(classNames(this.props.managedClasses.radio_label));\n        }\n    }\n}\nRadio.displayName = `${DisplayNamePrefix}Radio`;\nRadio.defaultProps = {\n    managedClasses: {},\n};\nexport default Radio;\n"]},"metadata":{},"sourceType":"module"}