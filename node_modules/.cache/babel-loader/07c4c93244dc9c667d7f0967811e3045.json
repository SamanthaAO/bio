{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Tabs as BaseTabs } from \"@microsoft/fast-components-react-base\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport { classNames, Direction } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DisplayNamePrefix } from \"../utilities\";\n\nvar Pivot =\n/*#__PURE__*/\nfunction (_Foundation) {\n  _inherits(Pivot, _Foundation);\n\n  /**\n   * The constructor\n   */\n  function Pivot(props) {\n    var _this;\n\n    _classCallCheck(this, Pivot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pivot).call(this, props));\n    _this.handledProps = {\n      label: void 0,\n      items: void 0,\n      managedClasses: void 0\n    };\n\n    _this.handleTabsUpdate = function (activeTabId) {\n      _this.setState({\n        activeId: activeTabId\n      });\n\n      if (typeof _this.props.onUpdate === \"function\") {\n        _this.props.onUpdate(activeTabId);\n      }\n    };\n\n    if (Array.isArray(_this.props.items)) {\n      _this.state = {\n        offsetX: 0,\n        tabPanelIndex: 0,\n        activeId: typeof _this.props.activeId === \"string\" ? _this.props.activeId : get(_this.props.items[0], \"id\", \"\")\n      };\n    }\n\n    _this.tabsRef = React.createRef();\n    return _this;\n  }\n  /**\n   * React life-cycle method\n   */\n\n\n  _createClass(Pivot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ltr = this.getLTR();\n      this.setActiveIndicatorOffset();\n      this.prevTabPanelIndex = this.state.tabPanelIndex;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.ltr !== this.getLTR()) {\n        this.setActiveIndicatorOffset();\n        this.ltr = this.getLTR();\n      }\n\n      if (this.state.activeId !== prevState.activeId) {\n        this.setActiveIndicatorOffset();\n        this.updateTabPanelIndex();\n      }\n\n      if (this.state.tabPanelIndex !== prevState.tabPanelIndex) {\n        this.prevTabPanelIndex = this.state.tabPanelIndex;\n      }\n    }\n    /**\n     * Renders the component\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BaseTabs, Object.assign({}, this.unhandledProps(), {\n        ref: this.tabsRef,\n        managedClasses: this.generatePivotClassNames(),\n        activeId: this.state.activeId,\n        onUpdate: this.handleTabsUpdate,\n        items: this.props.items,\n        label: this.props.label\n      }), React.createElement(\"span\", {\n        style: {\n          transform: \"translateX(\".concat(toPx(this.state.offsetX), \")\")\n        },\n        className: classNames(this.props.managedClasses.pivot_activeIndicator)\n      }));\n    }\n    /**\n     * Returns tabs managedclasses with new carousel-specific JSS\n     */\n\n  }, {\n    key: \"generatePivotClassNames\",\n    value: function generatePivotClassNames() {\n      var _this$props$managedCl = this.props.managedClasses,\n          pivot = _this$props$managedCl.pivot,\n          pivot_tabList = _this$props$managedCl.pivot_tabList,\n          pivot_tabContent = _this$props$managedCl.pivot_tabContent,\n          pivot_tabPanelContent = _this$props$managedCl.pivot_tabPanelContent,\n          pivot_tab = _this$props$managedCl.pivot_tab,\n          pivot_tab__active = _this$props$managedCl.pivot_tab__active,\n          pivot_tabPanel = _this$props$managedCl.pivot_tabPanel,\n          pivot_tabPanel__hidden = _this$props$managedCl.pivot_tabPanel__hidden;\n      return {\n        tabs: pivot,\n        tabs_tabPanels: this.generateTabPanelsClassNames(),\n        tabs_tabList: pivot_tabList,\n        tabs_tabContent: pivot_tabContent,\n        tabs_tabPanelContent: pivot_tabPanelContent,\n        tab: pivot_tab,\n        tab__active: pivot_tab__active,\n        tabPanel: pivot_tabPanel,\n        tabPanel__hidden: pivot_tabPanel__hidden\n      };\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(element) {\n      return element.attributes[\"aria-selected\"].value === \"true\";\n    }\n  }, {\n    key: \"updateTabPanelIndex\",\n    value: function updateTabPanelIndex() {\n      if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n        var tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n        var mytabsArray = Array.prototype.slice.call(tabElement.querySelectorAll(\"[role='tab']\"));\n        this.setState({\n          tabPanelIndex: mytabsArray.findIndex(this.isSelected)\n        });\n      }\n    }\n  }, {\n    key: \"generateTabPanelsClassNames\",\n    value: function generateTabPanelsClassNames() {\n      var _this$props$managedCl2 = this.props.managedClasses,\n          pivot_tabPanels = _this$props$managedCl2.pivot_tabPanels,\n          pivot_tabPanels__animatePrevious = _this$props$managedCl2.pivot_tabPanels__animatePrevious,\n          pivot_tabPanels__animateNext = _this$props$managedCl2.pivot_tabPanels__animateNext;\n      var indexNotChanged = this.state.tabPanelIndex === this.prevTabPanelIndex;\n      var shouldReverse = this.state.tabPanelIndex < this.prevTabPanelIndex;\n      return classNames(pivot_tabPanels, [pivot_tabPanels__animatePrevious, shouldReverse], [pivot_tabPanels__animateNext, !shouldReverse && !indexNotChanged]);\n    }\n  }, {\n    key: \"setActiveIndicatorOffset\",\n    value: function setActiveIndicatorOffset() {\n      if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n        var tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n        var mytab = tabElement.querySelector(\"[aria-selected='true']\");\n\n        if (mytab !== null && tabElement !== null) {\n          var width = mytab.getBoundingClientRect().width;\n          var center = width / 2;\n          var offsetX = mytab.getBoundingClientRect().left - tabElement.getBoundingClientRect().left + center;\n\n          if (offsetX !== this.state.offsetX) {\n            this.setState({\n              offsetX: offsetX\n            });\n          }\n        }\n      }\n    } // TODO #1438: Add optional direction prop to Pivot and Horizontal overflow\n\n    /**\n     * Gets the direction of the element\n     */\n\n  }, {\n    key: \"getLTR\",\n    value: function getLTR() {\n      if (canUseDOM()) {\n        var tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n        return !tabElement ? Direction.ltr : getComputedStyle(tabElement).direction === Direction.rtl ? Direction.rtl : Direction.ltr;\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n        return {\n          activeId: nextProps.activeId\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Pivot;\n}(Foundation);\n\nPivot.displayName = \"\".concat(DisplayNamePrefix, \"Pivot\");\nPivot.defaultProps = {\n  managedClasses: {}\n};\nexport default Pivot;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/pivot/pivot.js"],"names":["Foundation","Tabs","BaseTabs","toPx","classNames","Direction","canUseDOM","get","React","ReactDOM","DisplayNamePrefix","Pivot","props","handledProps","label","items","managedClasses","handleTabsUpdate","activeTabId","setState","activeId","onUpdate","Array","isArray","state","offsetX","tabPanelIndex","tabsRef","createRef","ltr","getLTR","setActiveIndicatorOffset","prevTabPanelIndex","prevProps","prevState","updateTabPanelIndex","createElement","Object","assign","unhandledProps","ref","generatePivotClassNames","style","transform","className","pivot_activeIndicator","pivot","pivot_tabList","pivot_tabContent","pivot_tabPanelContent","pivot_tab","pivot_tab__active","pivot_tabPanel","pivot_tabPanel__hidden","tabs","tabs_tabPanels","generateTabPanelsClassNames","tabs_tabList","tabs_tabContent","tabs_tabPanelContent","tab","tab__active","tabPanel","tabPanel__hidden","element","attributes","value","current","tabElement","findDOMNode","mytabsArray","prototype","slice","call","querySelectorAll","findIndex","isSelected","pivot_tabPanels","pivot_tabPanels__animatePrevious","pivot_tabPanels__animateNext","indexNotChanged","shouldReverse","mytab","querySelector","width","getBoundingClientRect","center","left","getComputedStyle","direction","rtl","nextProps","displayName","defaultProps"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Tabs as BaseTabs } from \"@microsoft/fast-components-react-base\";\nimport { toPx } from \"@microsoft/fast-jss-utilities\";\nimport { classNames, Direction } from \"@microsoft/fast-web-utilities\";\nimport { canUseDOM } from \"exenv-es6\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DisplayNamePrefix } from \"../utilities\";\nclass Pivot extends Foundation {\n    /**\n     * The constructor\n     */\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            label: void 0,\n            items: void 0,\n            managedClasses: void 0,\n        };\n        this.handleTabsUpdate = (activeTabId) => {\n            this.setState({\n                activeId: activeTabId,\n            });\n            if (typeof this.props.onUpdate === \"function\") {\n                this.props.onUpdate(activeTabId);\n            }\n        };\n        if (Array.isArray(this.props.items)) {\n            this.state = {\n                offsetX: 0,\n                tabPanelIndex: 0,\n                activeId: typeof this.props.activeId === \"string\"\n                    ? this.props.activeId\n                    : get(this.props.items[0], \"id\", \"\"),\n            };\n        }\n        this.tabsRef = React.createRef();\n    }\n    /**\n     * React life-cycle method\n     */\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.activeId && nextProps.activeId !== prevState.activeId) {\n            return {\n                activeId: nextProps.activeId,\n            };\n        }\n        return null;\n    }\n    componentDidMount() {\n        this.ltr = this.getLTR();\n        this.setActiveIndicatorOffset();\n        this.prevTabPanelIndex = this.state.tabPanelIndex;\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.ltr !== this.getLTR()) {\n            this.setActiveIndicatorOffset();\n            this.ltr = this.getLTR();\n        }\n        if (this.state.activeId !== prevState.activeId) {\n            this.setActiveIndicatorOffset();\n            this.updateTabPanelIndex();\n        }\n        if (this.state.tabPanelIndex !== prevState.tabPanelIndex) {\n            this.prevTabPanelIndex = this.state.tabPanelIndex;\n        }\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(BaseTabs, Object.assign({}, this.unhandledProps(), { ref: this.tabsRef, managedClasses: this.generatePivotClassNames(), activeId: this.state.activeId, onUpdate: this.handleTabsUpdate, items: this.props.items, label: this.props.label }),\n            React.createElement(\"span\", { style: { transform: `translateX(${toPx(this.state.offsetX)})` }, className: classNames(this.props.managedClasses.pivot_activeIndicator) })));\n    }\n    /**\n     * Returns tabs managedclasses with new carousel-specific JSS\n     */\n    generatePivotClassNames() {\n        const { pivot, pivot_tabList, pivot_tabContent, pivot_tabPanelContent, pivot_tab, pivot_tab__active, pivot_tabPanel, pivot_tabPanel__hidden, } = this.props.managedClasses;\n        return {\n            tabs: pivot,\n            tabs_tabPanels: this.generateTabPanelsClassNames(),\n            tabs_tabList: pivot_tabList,\n            tabs_tabContent: pivot_tabContent,\n            tabs_tabPanelContent: pivot_tabPanelContent,\n            tab: pivot_tab,\n            tab__active: pivot_tab__active,\n            tabPanel: pivot_tabPanel,\n            tabPanel__hidden: pivot_tabPanel__hidden,\n        };\n    }\n    isSelected(element) {\n        return element.attributes[\"aria-selected\"].value === \"true\";\n    }\n    updateTabPanelIndex() {\n        if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            const mytabsArray = Array.prototype.slice.call(tabElement.querySelectorAll(\"[role='tab']\"));\n            this.setState({\n                tabPanelIndex: mytabsArray.findIndex(this.isSelected),\n            });\n        }\n    }\n    generateTabPanelsClassNames() {\n        const { pivot_tabPanels, pivot_tabPanels__animatePrevious, pivot_tabPanels__animateNext, } = this.props.managedClasses;\n        const indexNotChanged = this.state.tabPanelIndex === this.prevTabPanelIndex;\n        const shouldReverse = this.state.tabPanelIndex < this.prevTabPanelIndex;\n        return classNames(pivot_tabPanels, [pivot_tabPanels__animatePrevious, shouldReverse], [pivot_tabPanels__animateNext, !shouldReverse && !indexNotChanged]);\n    }\n    setActiveIndicatorOffset() {\n        if (canUseDOM() && this.tabsRef.current && Array.isArray(this.props.items)) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            const mytab = tabElement.querySelector(\"[aria-selected='true']\");\n            if (mytab !== null && tabElement !== null) {\n                const width = mytab.getBoundingClientRect().width;\n                const center = width / 2;\n                const offsetX = mytab.getBoundingClientRect().left -\n                    tabElement.getBoundingClientRect().left +\n                    center;\n                if (offsetX !== this.state.offsetX) {\n                    this.setState({\n                        offsetX,\n                    });\n                }\n            }\n        }\n    }\n    // TODO #1438: Add optional direction prop to Pivot and Horizontal overflow\n    /**\n     * Gets the direction of the element\n     */\n    getLTR() {\n        if (canUseDOM()) {\n            const tabElement = ReactDOM.findDOMNode(this.tabsRef.current);\n            return !tabElement\n                ? Direction.ltr\n                : getComputedStyle(tabElement).direction === Direction.rtl\n                    ? Direction.rtl\n                    : Direction.ltr;\n        }\n    }\n}\nPivot.displayName = `${DisplayNamePrefix}Pivot`;\nPivot.defaultProps = {\n    managedClasses: {},\n};\nexport default Pivot;\n"]},"metadata":{},"sourceType":"module"}