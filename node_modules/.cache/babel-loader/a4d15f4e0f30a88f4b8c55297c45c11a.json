{"ast":null,"code":"/**\n * @param input Can be in the form ANYTHING?a=1&b=2&c=3  ... or just a=1&b=2&c=3 ...\n *              all query string keys and values will be run through decodeURIComponent\n */\nexport function parseQueryStringParams(input) {\n  const retVal = new Map();\n\n  if (typeof input !== \"string\" || input.length <= 0) {\n    return retVal;\n  }\n\n  const splitLocation = input.split(\"?\");\n  let rawQuery;\n\n  if (splitLocation.length === 1) {\n    rawQuery = splitLocation[0];\n  } else {\n    rawQuery = splitLocation[1];\n  }\n\n  const querySegments = rawQuery.split(\"&\");\n\n  for (const querySegment of querySegments) {\n    const paramSegments = querySegment.split(\"=\");\n\n    if (paramSegments.length === 2) {\n      retVal.set(decodeURIComponent(paramSegments[0]), decodeURIComponent(paramSegments[1]));\n    }\n  }\n\n  return retVal;\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-web-utilities/dist/query.js"],"names":["parseQueryStringParams","input","retVal","Map","length","splitLocation","split","rawQuery","querySegments","querySegment","paramSegments","set","decodeURIComponent"],"mappings":"AAAA;;;;AAIA,OAAO,SAASA,sBAAT,CAAgCC,KAAhC,EAAuC;AAC1C,QAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,MAAI,OAAOF,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACG,MAAN,IAAgB,CAAjD,EAAoD;AAChD,WAAOF,MAAP;AACH;;AACD,QAAMG,aAAa,GAAGJ,KAAK,CAACK,KAAN,CAAY,GAAZ,CAAtB;AACA,MAAIC,QAAJ;;AACA,MAAIF,aAAa,CAACD,MAAd,KAAyB,CAA7B,EAAgC;AAC5BG,IAAAA,QAAQ,GAAGF,aAAa,CAAC,CAAD,CAAxB;AACH,GAFD,MAGK;AACDE,IAAAA,QAAQ,GAAGF,aAAa,CAAC,CAAD,CAAxB;AACH;;AACD,QAAMG,aAAa,GAAGD,QAAQ,CAACD,KAAT,CAAe,GAAf,CAAtB;;AACA,OAAK,MAAMG,YAAX,IAA2BD,aAA3B,EAA0C;AACtC,UAAME,aAAa,GAAGD,YAAY,CAACH,KAAb,CAAmB,GAAnB,CAAtB;;AACA,QAAII,aAAa,CAACN,MAAd,KAAyB,CAA7B,EAAgC;AAC5BF,MAAAA,MAAM,CAACS,GAAP,CAAWC,kBAAkB,CAACF,aAAa,CAAC,CAAD,CAAd,CAA7B,EAAiDE,kBAAkB,CAACF,aAAa,CAAC,CAAD,CAAd,CAAnE;AACH;AACJ;;AACD,SAAOR,MAAP;AACH","sourcesContent":["/**\n * @param input Can be in the form ANYTHING?a=1&b=2&c=3  ... or just a=1&b=2&c=3 ...\n *              all query string keys and values will be run through decodeURIComponent\n */\nexport function parseQueryStringParams(input) {\n    const retVal = new Map();\n    if (typeof input !== \"string\" || input.length <= 0) {\n        return retVal;\n    }\n    const splitLocation = input.split(\"?\");\n    let rawQuery;\n    if (splitLocation.length === 1) {\n        rawQuery = splitLocation[0];\n    }\n    else {\n        rawQuery = splitLocation[1];\n    }\n    const querySegments = rawQuery.split(\"&\");\n    for (const querySegment of querySegments) {\n        const paramSegments = querySegment.split(\"=\");\n        if (paramSegments.length === 2) {\n            retVal.set(decodeURIComponent(paramSegments[0]), decodeURIComponent(paramSegments[1]));\n        }\n    }\n    return retVal;\n}\n"]},"metadata":{},"sourceType":"module"}