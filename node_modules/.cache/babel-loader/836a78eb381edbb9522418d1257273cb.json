{"ast":null,"code":"import { findClosestBackgroundIndex, getSwatch, isDarkMode } from \"./palette\";\nimport { colorRecipeFactory } from \"./common\";\nimport { neutralFillInputActiveDelta, neutralFillInputFocusDelta, neutralFillInputHoverDelta, neutralFillInputRestDelta, neutralFillInputSelectedDelta, neutralPalette } from \"../design-system\";\n/**\n * Algorithm for determining neutral backplate colors\n */\n\nfunction neutralFillInputAlgorithm(indexResolver) {\n  return designSystem => {\n    const direction = isDarkMode(designSystem) ? -1 : 1;\n    return getSwatch(findClosestBackgroundIndex(designSystem) - indexResolver(designSystem) * direction, neutralPalette(designSystem));\n  };\n}\n\nexport const neutralFillInput = colorRecipeFactory(designSystem => {\n  return {\n    rest: neutralFillInputRest(designSystem),\n    hover: neutralFillInputHover(designSystem),\n    active: neutralFillInputActive(designSystem),\n    focus: neutralFillInputFocus(designSystem),\n    selected: neutralFillInputSelected(designSystem)\n  };\n});\nexport const neutralFillInputRest = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputRestDelta));\nexport const neutralFillInputHover = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputHoverDelta));\nexport const neutralFillInputActive = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputActiveDelta));\nexport const neutralFillInputFocus = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputFocusDelta));\nexport const neutralFillInputSelected = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputSelectedDelta));","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-styles-msft/dist/utilities/color/neutral-fill-input.js"],"names":["findClosestBackgroundIndex","getSwatch","isDarkMode","colorRecipeFactory","neutralFillInputActiveDelta","neutralFillInputFocusDelta","neutralFillInputHoverDelta","neutralFillInputRestDelta","neutralFillInputSelectedDelta","neutralPalette","neutralFillInputAlgorithm","indexResolver","designSystem","direction","neutralFillInput","rest","neutralFillInputRest","hover","neutralFillInputHover","active","neutralFillInputActive","focus","neutralFillInputFocus","selected","neutralFillInputSelected"],"mappings":"AAAA,SAASA,0BAAT,EAAqCC,SAArC,EAAgDC,UAAhD,QAAkE,WAAlE;AACA,SAASC,kBAAT,QAAoC,UAApC;AACA,SAASC,2BAAT,EAAsCC,0BAAtC,EAAkEC,0BAAlE,EAA8FC,yBAA9F,EAAyHC,6BAAzH,EAAwJC,cAAxJ,QAA+K,kBAA/K;AACA;;;;AAGA,SAASC,yBAAT,CAAmCC,aAAnC,EAAkD;AAC9C,SAAQC,YAAD,IAAkB;AACrB,UAAMC,SAAS,GAAGX,UAAU,CAACU,YAAD,CAAV,GAA2B,CAAC,CAA5B,GAAgC,CAAlD;AACA,WAAOX,SAAS,CAACD,0BAA0B,CAACY,YAAD,CAA1B,GACbD,aAAa,CAACC,YAAD,CAAb,GAA8BC,SADlB,EAC6BJ,cAAc,CAACG,YAAD,CAD3C,CAAhB;AAEH,GAJD;AAKH;;AACD,OAAO,MAAME,gBAAgB,GAAGX,kBAAkB,CAAES,YAAD,IAAkB;AACjE,SAAO;AACHG,IAAAA,IAAI,EAAEC,oBAAoB,CAACJ,YAAD,CADvB;AAEHK,IAAAA,KAAK,EAAEC,qBAAqB,CAACN,YAAD,CAFzB;AAGHO,IAAAA,MAAM,EAAEC,sBAAsB,CAACR,YAAD,CAH3B;AAIHS,IAAAA,KAAK,EAAEC,qBAAqB,CAACV,YAAD,CAJzB;AAKHW,IAAAA,QAAQ,EAAEC,wBAAwB,CAACZ,YAAD;AAL/B,GAAP;AAOH,CARiD,CAA3C;AASP,OAAO,MAAMI,oBAAoB,GAAGb,kBAAkB,CAACO,yBAAyB,CAACH,yBAAD,CAA1B,CAA/C;AACP,OAAO,MAAMW,qBAAqB,GAAGf,kBAAkB,CAACO,yBAAyB,CAACJ,0BAAD,CAA1B,CAAhD;AACP,OAAO,MAAMc,sBAAsB,GAAGjB,kBAAkB,CAACO,yBAAyB,CAACN,2BAAD,CAA1B,CAAjD;AACP,OAAO,MAAMkB,qBAAqB,GAAGnB,kBAAkB,CAACO,yBAAyB,CAACL,0BAAD,CAA1B,CAAhD;AACP,OAAO,MAAMmB,wBAAwB,GAAGrB,kBAAkB,CAACO,yBAAyB,CAACF,6BAAD,CAA1B,CAAnD","sourcesContent":["import { findClosestBackgroundIndex, getSwatch, isDarkMode } from \"./palette\";\nimport { colorRecipeFactory, } from \"./common\";\nimport { neutralFillInputActiveDelta, neutralFillInputFocusDelta, neutralFillInputHoverDelta, neutralFillInputRestDelta, neutralFillInputSelectedDelta, neutralPalette, } from \"../design-system\";\n/**\n * Algorithm for determining neutral backplate colors\n */\nfunction neutralFillInputAlgorithm(indexResolver) {\n    return (designSystem) => {\n        const direction = isDarkMode(designSystem) ? -1 : 1;\n        return getSwatch(findClosestBackgroundIndex(designSystem) -\n            indexResolver(designSystem) * direction, neutralPalette(designSystem));\n    };\n}\nexport const neutralFillInput = colorRecipeFactory((designSystem) => {\n    return {\n        rest: neutralFillInputRest(designSystem),\n        hover: neutralFillInputHover(designSystem),\n        active: neutralFillInputActive(designSystem),\n        focus: neutralFillInputFocus(designSystem),\n        selected: neutralFillInputSelected(designSystem),\n    };\n});\nexport const neutralFillInputRest = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputRestDelta));\nexport const neutralFillInputHover = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputHoverDelta));\nexport const neutralFillInputActive = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputActiveDelta));\nexport const neutralFillInputFocus = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputFocusDelta));\nexport const neutralFillInputSelected = colorRecipeFactory(neutralFillInputAlgorithm(neutralFillInputSelectedDelta));\n"]},"metadata":{},"sourceType":"module"}