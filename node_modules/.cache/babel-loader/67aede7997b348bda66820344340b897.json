{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\n// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\"; // CIELAB color space\n// https://en.wikipedia.org/wiki/CIELAB_color_space\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\n\nexport var ColorLAB =\n/*#__PURE__*/\nfunction () {\n  function ColorLAB(l, a, b) {\n    _classCallCheck(this, ColorLAB);\n\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n\n  _createClass(ColorLAB, [{\n    key: \"equalValue\",\n    value: function equalValue(rhs) {\n      return this.l === rhs.l && this.a === rhs.a && this.b === rhs.b;\n    }\n  }, {\n    key: \"roundToPrecision\",\n    value: function roundToPrecision(precision) {\n      return new ColorLAB(roundToPrecisionSmall(this.l, precision), roundToPrecisionSmall(this.a, precision), roundToPrecisionSmall(this.b, precision));\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return {\n        l: this.l,\n        a: this.a,\n        b: this.b\n      };\n    }\n  }], [{\n    key: \"fromObject\",\n    value: function fromObject(data) {\n      if (data && !isNaN(data.l) && !isNaN(data.a) && !isNaN(data.b)) {\n        return new ColorLAB(data.l, data.a, data.b);\n      }\n\n      return null;\n    }\n  }]);\n\n  return ColorLAB;\n}();\nColorLAB.epsilon = 216 / 24389;\nColorLAB.kappa = 24389 / 27;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-colors/dist/color-lab.js"],"names":["roundToPrecisionSmall","ColorLAB","l","a","b","rhs","precision","data","isNaN","epsilon","kappa"],"mappings":";;AAAA;AACA,SAASA,qBAAT,QAAsC,kBAAtC,C,CACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,QAAb;AAAA;AAAA;AACI,oBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAAA;;AACjB,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACH;;AALL;AAAA;AAAA,+BAYeC,GAZf,EAYoB;AACZ,aAAO,KAAKH,CAAL,KAAWG,GAAG,CAACH,CAAf,IAAoB,KAAKC,CAAL,KAAWE,GAAG,CAACF,CAAnC,IAAwC,KAAKC,CAAL,KAAWC,GAAG,CAACD,CAA9D;AACH;AAdL;AAAA;AAAA,qCAeqBE,SAfrB,EAegC;AACxB,aAAO,IAAIL,QAAJ,CAAaD,qBAAqB,CAAC,KAAKE,CAAN,EAASI,SAAT,CAAlC,EAAuDN,qBAAqB,CAAC,KAAKG,CAAN,EAASG,SAAT,CAA5E,EAAiGN,qBAAqB,CAAC,KAAKI,CAAN,EAASE,SAAT,CAAtH,CAAP;AACH;AAjBL;AAAA;AAAA,+BAkBe;AACP,aAAO;AAAEJ,QAAAA,CAAC,EAAE,KAAKA,CAAV;AAAaC,QAAAA,CAAC,EAAE,KAAKA,CAArB;AAAwBC,QAAAA,CAAC,EAAE,KAAKA;AAAhC,OAAP;AACH;AApBL;AAAA;AAAA,+BAMsBG,IANtB,EAM4B;AACpB,UAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACL,CAAN,CAAd,IAA0B,CAACM,KAAK,CAACD,IAAI,CAACJ,CAAN,CAAhC,IAA4C,CAACK,KAAK,CAACD,IAAI,CAACH,CAAN,CAAtD,EAAgE;AAC5D,eAAO,IAAIH,QAAJ,CAAaM,IAAI,CAACL,CAAlB,EAAqBK,IAAI,CAACJ,CAA1B,EAA6BI,IAAI,CAACH,CAAlC,CAAP;AACH;;AACD,aAAO,IAAP;AACH;AAXL;;AAAA;AAAA;AAsBAH,QAAQ,CAACQ,OAAT,GAAmB,MAAM,KAAzB;AACAR,QAAQ,CAACS,KAAT,GAAiB,QAAQ,EAAzB","sourcesContent":["// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\";\n// CIELAB color space\n// https://en.wikipedia.org/wiki/CIELAB_color_space\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\nexport class ColorLAB {\n    constructor(l, a, b) {\n        this.l = l;\n        this.a = a;\n        this.b = b;\n    }\n    static fromObject(data) {\n        if (data && !isNaN(data.l) && !isNaN(data.a) && !isNaN(data.b)) {\n            return new ColorLAB(data.l, data.a, data.b);\n        }\n        return null;\n    }\n    equalValue(rhs) {\n        return this.l === rhs.l && this.a === rhs.a && this.b === rhs.b;\n    }\n    roundToPrecision(precision) {\n        return new ColorLAB(roundToPrecisionSmall(this.l, precision), roundToPrecisionSmall(this.a, precision), roundToPrecisionSmall(this.b, precision));\n    }\n    toObject() {\n        return { l: this.l, a: this.a, b: this.b };\n    }\n}\nColorLAB.epsilon = 216 / 24389;\nColorLAB.kappa = 24389 / 27;\n"]},"metadata":{},"sourceType":"module"}