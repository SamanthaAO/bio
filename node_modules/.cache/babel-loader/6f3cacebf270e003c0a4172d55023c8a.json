{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { textFieldOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { TextField } from \"../text-field\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TextActionAppearance, TextActionButtonPosition } from \"./text-action.props\";\n\nvar TextAction =\n/*#__PURE__*/\nfunction (_Foundation) {\n  _inherits(TextAction, _Foundation);\n\n  function TextAction(props) {\n    var _this;\n\n    _classCallCheck(this, TextAction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextAction).call(this, props));\n    _this.handledProps = {\n      appearance: void 0,\n      afterGlyph: void 0,\n      beforeGlyph: void 0,\n      button: void 0,\n      buttonPosition: void 0,\n      className: void 0,\n      managedClasses: void 0\n    };\n    /**\n     * Adds focus state to outer wrapper and fires callback if passed\n     * In order to correctly focus the input and then the\n     * possible button, a class must be added instead of using\n     * focus-within via style\n     */\n\n    _this.handleOnFocus = function (e) {\n      _this.setState({\n        focused: true\n      });\n\n      if (typeof _this.props.onFocus === \"function\") {\n        _this.props.onFocus(e);\n      }\n    };\n    /**\n     * Removes focus state and fires callback if passed\n     */\n\n\n    _this.handleOnBlur = function (e) {\n      _this.setState({\n        focused: false\n      });\n\n      if (typeof _this.props.onBlur === \"function\") {\n        _this.props.onBlur(e);\n      }\n    };\n\n    _this.state = {\n      focused: false\n    };\n    return _this;\n  }\n  /**\n   * Renders the component\n   */\n\n\n  _createClass(TextAction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.generateClassNames()\n      }, this.buttonExists() && this.props.buttonPosition === TextActionButtonPosition.before ? this.generateButton() : null, this.generateBeforeGlyph(), React.createElement(TextField, Object.assign({}, this.unhandledProps(), {\n        disabled: get(this.props, \"disabled\", null),\n        placeholder: get(this.props, \"placeholder\", null),\n        jssStyleSheet: textFieldOverrides,\n        onBlur: this.handleOnBlur,\n        onFocus: this.handleOnFocus\n      })), this.generateAfterGlyph(), this.buttonExists() && this.props.buttonPosition === TextActionButtonPosition.after ? this.generateButton() : null);\n    }\n    /**\n     * Generates class names\n     */\n\n  }, {\n    key: \"generateClassNames\",\n    value: function generateClassNames() {\n      var _this$props$managedCl = this.props.managedClasses,\n          textAction = _this$props$managedCl.textAction,\n          textAction__disabled = _this$props$managedCl.textAction__disabled,\n          textAction__focus = _this$props$managedCl.textAction__focus;\n      return _get(_getPrototypeOf(TextAction.prototype), \"generateClassNames\", this).call(this, classNames(textAction, [this.props.managedClasses[\"textAction__\".concat(TextActionAppearance[this.props.appearance])], !!this.props.appearance], [textAction__disabled, this.props.disabled], [textAction__focus, this.state.focused]));\n    }\n    /**\n     * Returns truthy if button exist\n     */\n\n  }, {\n    key: \"buttonExists\",\n    value: function buttonExists() {\n      return typeof this.props.button === \"function\";\n    }\n    /**\n     * Generate button\n     */\n\n  }, {\n    key: \"generateButton\",\n    value: function generateButton() {\n      return this.props.button(classNames(this.props.managedClasses.textAction_button), this.props.disabled);\n    }\n    /**\n     * Generates after glyph based on props\n     */\n\n  }, {\n    key: \"generateAfterGlyph\",\n    value: function generateAfterGlyph() {\n      if (typeof this.props.afterGlyph === \"function\") {\n        return this.props.afterGlyph(classNames(this.props.managedClasses.textAction_afterGlyph));\n      }\n    }\n    /**\n     * Generates before glyph based on props\n     */\n\n  }, {\n    key: \"generateBeforeGlyph\",\n    value: function generateBeforeGlyph() {\n      if (typeof this.props.beforeGlyph === \"function\") {\n        return this.props.beforeGlyph(classNames(this.props.managedClasses.textAction_beforeGlyph));\n      }\n    }\n  }]);\n\n  return TextAction;\n}(Foundation);\n\nTextAction.displayName = \"\".concat(DisplayNamePrefix, \"TextAction\");\nTextAction.defaultProps = {\n  buttonPosition: TextActionButtonPosition.after,\n  managedClasses: {}\n};\nexport default TextAction;\nexport * from \"./text-action.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/text-action/text-action.js"],"names":["Foundation","textFieldOverrides","classNames","get","React","TextField","DisplayNamePrefix","TextActionAppearance","TextActionButtonPosition","TextAction","props","handledProps","appearance","afterGlyph","beforeGlyph","button","buttonPosition","className","managedClasses","handleOnFocus","e","setState","focused","onFocus","handleOnBlur","onBlur","state","createElement","generateClassNames","buttonExists","before","generateButton","generateBeforeGlyph","Object","assign","unhandledProps","disabled","placeholder","jssStyleSheet","generateAfterGlyph","after","textAction","textAction__disabled","textAction__focus","textAction_button","textAction_afterGlyph","textAction_beforeGlyph","displayName","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,6CAAvB;AACA,SAASC,kBAAT,QAAmC,wCAAnC;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,oBAAT,EAA+BC,wBAA/B,QAAgE,qBAAhE;;IACMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB;AAChBC,MAAAA,UAAU,EAAE,KAAK,CADD;AAEhBC,MAAAA,UAAU,EAAE,KAAK,CAFD;AAGhBC,MAAAA,WAAW,EAAE,KAAK,CAHF;AAIhBC,MAAAA,MAAM,EAAE,KAAK,CAJG;AAKhBC,MAAAA,cAAc,EAAE,KAAK,CALL;AAMhBC,MAAAA,SAAS,EAAE,KAAK,CANA;AAOhBC,MAAAA,cAAc,EAAE,KAAK;AAPL,KAApB;AASA;;;;;;;AAMA,UAAKC,aAAL,GAAqB,UAACC,CAAD,EAAO;AACxB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI,OAAO,MAAKZ,KAAL,CAAWa,OAAlB,KAA8B,UAAlC,EAA8C;AAC1C,cAAKb,KAAL,CAAWa,OAAX,CAAmBH,CAAnB;AACH;AACJ,KALD;AAMA;;;;;AAGA,UAAKI,YAAL,GAAoB,UAACJ,CAAD,EAAO;AACvB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI,OAAO,MAAKZ,KAAL,CAAWe,MAAlB,KAA6B,UAAjC,EAA6C;AACzC,cAAKf,KAAL,CAAWe,MAAX,CAAkBL,CAAlB;AACH;AACJ,KALD;;AAMA,UAAKM,KAAL,GAAa;AACTJ,MAAAA,OAAO,EAAE;AADA,KAAb;AAhCe;AAmClB;AACD;;;;;;;6BAGS;AACL,aAAQlB,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;AAAEV,QAAAA,SAAS,EAAE,KAAKW,kBAAL;AAAb,OAA3B,EACJ,KAAKC,YAAL,MACI,KAAKnB,KAAL,CAAWM,cAAX,KAA8BR,wBAAwB,CAACsB,MAD3D,GAEM,KAAKC,cAAL,EAFN,GAGM,IAJF,EAKJ,KAAKC,mBAAL,EALI,EAMJ5B,KAAK,CAACuB,aAAN,CAAoBtB,SAApB,EAA+B4B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,cAAL,EAAlB,EAAyC;AAAEC,QAAAA,QAAQ,EAAEjC,GAAG,CAAC,KAAKO,KAAN,EAAa,UAAb,EAAyB,IAAzB,CAAf;AAA+C2B,QAAAA,WAAW,EAAElC,GAAG,CAAC,KAAKO,KAAN,EAAa,aAAb,EAA4B,IAA5B,CAA/D;AAAkG4B,QAAAA,aAAa,EAAErC,kBAAjH;AAAqIwB,QAAAA,MAAM,EAAE,KAAKD,YAAlJ;AAAgKD,QAAAA,OAAO,EAAE,KAAKJ;AAA9K,OAAzC,CAA/B,CANI,EAOJ,KAAKoB,kBAAL,EAPI,EAQJ,KAAKV,YAAL,MACI,KAAKnB,KAAL,CAAWM,cAAX,KAA8BR,wBAAwB,CAACgC,KAD3D,GAEM,KAAKT,cAAL,EAFN,GAGM,IAXF,CAAR;AAYH;AACD;;;;;;yCAGqB;AAAA,kCACgD,KAAKrB,KAAL,CAAWQ,cAD3D;AAAA,UACTuB,UADS,yBACTA,UADS;AAAA,UACGC,oBADH,yBACGA,oBADH;AAAA,UACyBC,iBADzB,yBACyBA,iBADzB;AAEjB,gGAAgCzC,UAAU,CAACuC,UAAD,EAAa,CACnD,KAAK/B,KAAL,CAAWQ,cAAX,uBAAyCX,oBAAoB,CAAC,KAAKG,KAAL,CAAWE,UAAZ,CAA7D,EADmD,EAEnD,CAAC,CAAC,KAAKF,KAAL,CAAWE,UAFsC,CAAb,EAGvC,CAAC8B,oBAAD,EAAuB,KAAKhC,KAAL,CAAW0B,QAAlC,CAHuC,EAGM,CAACO,iBAAD,EAAoB,KAAKjB,KAAL,CAAWJ,OAA/B,CAHN,CAA1C;AAIH;AACD;;;;;;mCAGe;AACX,aAAO,OAAO,KAAKZ,KAAL,CAAWK,MAAlB,KAA6B,UAApC;AACH;AACD;;;;;;qCAGiB;AACb,aAAO,KAAKL,KAAL,CAAWK,MAAX,CAAkBb,UAAU,CAAC,KAAKQ,KAAL,CAAWQ,cAAX,CAA0B0B,iBAA3B,CAA5B,EAA2E,KAAKlC,KAAL,CAAW0B,QAAtF,CAAP;AACH;AACD;;;;;;yCAGqB;AACjB,UAAI,OAAO,KAAK1B,KAAL,CAAWG,UAAlB,KAAiC,UAArC,EAAiD;AAC7C,eAAO,KAAKH,KAAL,CAAWG,UAAX,CAAsBX,UAAU,CAAC,KAAKQ,KAAL,CAAWQ,cAAX,CAA0B2B,qBAA3B,CAAhC,CAAP;AACH;AACJ;AACD;;;;;;0CAGsB;AAClB,UAAI,OAAO,KAAKnC,KAAL,CAAWI,WAAlB,KAAkC,UAAtC,EAAkD;AAC9C,eAAO,KAAKJ,KAAL,CAAWI,WAAX,CAAuBZ,UAAU,CAAC,KAAKQ,KAAL,CAAWQ,cAAX,CAA0B4B,sBAA3B,CAAjC,CAAP;AACH;AACJ;;;;EA3FoB9C,U;;AA6FzBS,UAAU,CAACsC,WAAX,aAA4BzC,iBAA5B;AACAG,UAAU,CAACuC,YAAX,GAA0B;AACtBhC,EAAAA,cAAc,EAAER,wBAAwB,CAACgC,KADnB;AAEtBtB,EAAAA,cAAc,EAAE;AAFM,CAA1B;AAIA,eAAeT,UAAf;AACA,cAAc,qBAAd","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { textFieldOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { get } from \"lodash-es\";\nimport React from \"react\";\nimport { TextField } from \"../text-field\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { TextActionAppearance, TextActionButtonPosition, } from \"./text-action.props\";\nclass TextAction extends Foundation {\n    constructor(props) {\n        super(props);\n        this.handledProps = {\n            appearance: void 0,\n            afterGlyph: void 0,\n            beforeGlyph: void 0,\n            button: void 0,\n            buttonPosition: void 0,\n            className: void 0,\n            managedClasses: void 0,\n        };\n        /**\n         * Adds focus state to outer wrapper and fires callback if passed\n         * In order to correctly focus the input and then the\n         * possible button, a class must be added instead of using\n         * focus-within via style\n         */\n        this.handleOnFocus = (e) => {\n            this.setState({ focused: true });\n            if (typeof this.props.onFocus === \"function\") {\n                this.props.onFocus(e);\n            }\n        };\n        /**\n         * Removes focus state and fires callback if passed\n         */\n        this.handleOnBlur = (e) => {\n            this.setState({ focused: false });\n            if (typeof this.props.onBlur === \"function\") {\n                this.props.onBlur(e);\n            }\n        };\n        this.state = {\n            focused: false,\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(\"div\", { className: this.generateClassNames() },\n            this.buttonExists() &&\n                this.props.buttonPosition === TextActionButtonPosition.before\n                ? this.generateButton()\n                : null,\n            this.generateBeforeGlyph(),\n            React.createElement(TextField, Object.assign({}, this.unhandledProps(), { disabled: get(this.props, \"disabled\", null), placeholder: get(this.props, \"placeholder\", null), jssStyleSheet: textFieldOverrides, onBlur: this.handleOnBlur, onFocus: this.handleOnFocus })),\n            this.generateAfterGlyph(),\n            this.buttonExists() &&\n                this.props.buttonPosition === TextActionButtonPosition.after\n                ? this.generateButton()\n                : null));\n    }\n    /**\n     * Generates class names\n     */\n    generateClassNames() {\n        const { textAction, textAction__disabled, textAction__focus, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(textAction, [\n            this.props.managedClasses[`textAction__${TextActionAppearance[this.props.appearance]}`],\n            !!this.props.appearance,\n        ], [textAction__disabled, this.props.disabled], [textAction__focus, this.state.focused]));\n    }\n    /**\n     * Returns truthy if button exist\n     */\n    buttonExists() {\n        return typeof this.props.button === \"function\";\n    }\n    /**\n     * Generate button\n     */\n    generateButton() {\n        return this.props.button(classNames(this.props.managedClasses.textAction_button), this.props.disabled);\n    }\n    /**\n     * Generates after glyph based on props\n     */\n    generateAfterGlyph() {\n        if (typeof this.props.afterGlyph === \"function\") {\n            return this.props.afterGlyph(classNames(this.props.managedClasses.textAction_afterGlyph));\n        }\n    }\n    /**\n     * Generates before glyph based on props\n     */\n    generateBeforeGlyph() {\n        if (typeof this.props.beforeGlyph === \"function\") {\n            return this.props.beforeGlyph(classNames(this.props.managedClasses.textAction_beforeGlyph));\n        }\n    }\n}\nTextAction.displayName = `${DisplayNamePrefix}TextAction`;\nTextAction.defaultProps = {\n    buttonPosition: TextActionButtonPosition.after,\n    managedClasses: {},\n};\nexport default TextAction;\nexport * from \"./text-action.props\";\n"]},"metadata":{},"sourceType":"module"}