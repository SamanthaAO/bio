{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { actionTriggerButtonOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { isNil } from \"lodash-es\";\nimport React from \"react\";\nimport { Button, ButtonAppearance } from \"../button\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { ActionTriggerAppearance } from \"./action-trigger.props\";\n\nclass ActionTrigger extends Foundation {\n  constructor() {\n    super(...arguments);\n    this.handledProps = {\n      appearance: void 0,\n      href: void 0,\n      managedClasses: void 0,\n      disabled: void 0,\n      glyph: void 0\n    };\n\n    this.generateGlyph = () => {\n      return this.props.glyph(classNames(this.props.managedClasses.actionTrigger_glyph));\n    };\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(Button, Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames(),\n      disabled: this.props.disabled,\n      href: this.props.href,\n      appearance: ButtonAppearance[ActionTriggerAppearance[this.props.appearance]],\n      jssStyleSheet: actionTriggerButtonOverrides,\n      beforeContent: this.generateGlyph\n    }), this.props.children);\n  }\n  /**\n   * Generates class names\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          actionTrigger = _this$props$managedCl.actionTrigger,\n          actionTrigger__disabled = _this$props$managedCl.actionTrigger__disabled,\n          actionTrigger__hasGlyphAndContent = _this$props$managedCl.actionTrigger__hasGlyphAndContent;\n    return super.generateClassNames(classNames(actionTrigger, [actionTrigger__disabled, this.props.disabled], [this.props.managedClasses[`actionTrigger__${this.props.appearance}`], typeof this.props.appearance === \"string\"], [actionTrigger__hasGlyphAndContent, this.hasGlyphAndContent()]));\n  }\n  /**\n   * Checks to see if action trigger is displaying both glyph and content or not\n   */\n\n\n  hasGlyphAndContent() {\n    return !isNil(this.props.glyph) && !isNil(this.props.children);\n  }\n\n}\n\nActionTrigger.displayName = `${DisplayNamePrefix}ActionTrigger`;\nActionTrigger.defaultProps = {\n  managedClasses: {}\n};\nexport default ActionTrigger;\nexport * from \"./action-trigger.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/action-trigger/action-trigger.js"],"names":["Foundation","actionTriggerButtonOverrides","classNames","isNil","React","Button","ButtonAppearance","DisplayNamePrefix","ActionTriggerAppearance","ActionTrigger","constructor","arguments","handledProps","appearance","href","managedClasses","disabled","glyph","generateGlyph","props","actionTrigger_glyph","render","createElement","Object","assign","unhandledProps","className","generateClassNames","jssStyleSheet","beforeContent","children","actionTrigger","actionTrigger__disabled","actionTrigger__hasGlyphAndContent","hasGlyphAndContent","displayName","defaultProps"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,6CAAvB;AACA,SAASC,4BAAT,QAA6C,wCAA7C;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,WAAzC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,uBAAT,QAAyC,wBAAzC;;AACA,MAAMC,aAAN,SAA4BT,UAA5B,CAAuC;AACnCU,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,YAAL,GAAoB;AAChBC,MAAAA,UAAU,EAAE,KAAK,CADD;AAEhBC,MAAAA,IAAI,EAAE,KAAK,CAFK;AAGhBC,MAAAA,cAAc,EAAE,KAAK,CAHL;AAIhBC,MAAAA,QAAQ,EAAE,KAAK,CAJC;AAKhBC,MAAAA,KAAK,EAAE,KAAK;AALI,KAApB;;AAOA,SAAKC,aAAL,GAAqB,MAAM;AACvB,aAAO,KAAKC,KAAL,CAAWF,KAAX,CAAiBf,UAAU,CAAC,KAAKiB,KAAL,CAAWJ,cAAX,CAA0BK,mBAA3B,CAA3B,CAAP;AACH,KAFD;AAGH;AACD;;;;;AAGAC,EAAAA,MAAM,GAAG;AACL,WAAQjB,KAAK,CAACkB,aAAN,CAAoBjB,MAApB,EAA4BkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,cAAL,EAAlB,EAAyC;AAAEC,MAAAA,SAAS,EAAE,KAAKC,kBAAL,EAAb;AAAwCX,MAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWH,QAA7D;AAAuEF,MAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IAAxF;AAA8FD,MAAAA,UAAU,EAAEP,gBAAgB,CAACE,uBAAuB,CAAC,KAAKW,KAAL,CAAWN,UAAZ,CAAxB,CAA1H;AAA4Ke,MAAAA,aAAa,EAAE3B,4BAA3L;AAAyN4B,MAAAA,aAAa,EAAE,KAAKX;AAA7O,KAAzC,CAA5B,EAAoU,KAAKC,KAAL,CAAWW,QAA/U,CAAR;AACH;AACD;;;;;AAGAH,EAAAA,kBAAkB,GAAG;AAAA,kCACsE,KAAKR,KAAL,CAAWJ,cADjF;AAAA,UACTgB,aADS,yBACTA,aADS;AAAA,UACMC,uBADN,yBACMA,uBADN;AAAA,UAC+BC,iCAD/B,yBAC+BA,iCAD/B;AAEjB,WAAO,MAAMN,kBAAN,CAAyBzB,UAAU,CAAC6B,aAAD,EAAgB,CAACC,uBAAD,EAA0B,KAAKb,KAAL,CAAWH,QAArC,CAAhB,EAAgE,CACtG,KAAKG,KAAL,CAAWJ,cAAX,CAA2B,kBAAiB,KAAKI,KAAL,CAAWN,UAAW,EAAlE,CADsG,EAEtG,OAAO,KAAKM,KAAL,CAAWN,UAAlB,KAAiC,QAFqE,CAAhE,EAGvC,CAACoB,iCAAD,EAAoC,KAAKC,kBAAL,EAApC,CAHuC,CAAnC,CAAP;AAIH;AACD;;;;;AAGAA,EAAAA,kBAAkB,GAAG;AACjB,WAAO,CAAC/B,KAAK,CAAC,KAAKgB,KAAL,CAAWF,KAAZ,CAAN,IAA4B,CAACd,KAAK,CAAC,KAAKgB,KAAL,CAAWW,QAAZ,CAAzC;AACH;;AAnCkC;;AAqCvCrB,aAAa,CAAC0B,WAAd,GAA6B,GAAE5B,iBAAkB,eAAjD;AACAE,aAAa,CAAC2B,YAAd,GAA6B;AACzBrB,EAAAA,cAAc,EAAE;AADS,CAA7B;AAGA,eAAeN,aAAf;AACA,cAAc,wBAAd","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { actionTriggerButtonOverrides } from \"@microsoft/fast-components-styles-msft\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { isNil } from \"lodash-es\";\nimport React from \"react\";\nimport { Button, ButtonAppearance } from \"../button\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { ActionTriggerAppearance, } from \"./action-trigger.props\";\nclass ActionTrigger extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            appearance: void 0,\n            href: void 0,\n            managedClasses: void 0,\n            disabled: void 0,\n            glyph: void 0,\n        };\n        this.generateGlyph = () => {\n            return this.props.glyph(classNames(this.props.managedClasses.actionTrigger_glyph));\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(Button, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), disabled: this.props.disabled, href: this.props.href, appearance: ButtonAppearance[ActionTriggerAppearance[this.props.appearance]], jssStyleSheet: actionTriggerButtonOverrides, beforeContent: this.generateGlyph }), this.props.children));\n    }\n    /**\n     * Generates class names\n     */\n    generateClassNames() {\n        const { actionTrigger, actionTrigger__disabled, actionTrigger__hasGlyphAndContent, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(actionTrigger, [actionTrigger__disabled, this.props.disabled], [\n            this.props.managedClasses[`actionTrigger__${this.props.appearance}`],\n            typeof this.props.appearance === \"string\",\n        ], [actionTrigger__hasGlyphAndContent, this.hasGlyphAndContent()]));\n    }\n    /**\n     * Checks to see if action trigger is displaying both glyph and content or not\n     */\n    hasGlyphAndContent() {\n        return !isNil(this.props.glyph) && !isNil(this.props.children);\n    }\n}\nActionTrigger.displayName = `${DisplayNamePrefix}ActionTrigger`;\nActionTrigger.defaultProps = {\n    managedClasses: {},\n};\nexport default ActionTrigger;\nexport * from \"./action-trigger.props\";\n"]},"metadata":{},"sourceType":"module"}