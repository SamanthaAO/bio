{"ast":null,"code":"import _defineProperty from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { add, applyFocusVisible, directionSwitch, divide, format, multiply, subtract, toPx } from \"@microsoft/fast-jss-utilities\";\nimport { accentForegroundRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRest, neutralFillStealthSelected, neutralFocus, neutralForegroundRest } from \"../utilities/color\";\nimport { heightNumber } from \"../utilities/density\";\nimport { designUnit, focusOutlineWidth } from \"../utilities/design-system\";\nimport { HighContrastColor, highContrastDoubleFocus, highContrastOptOutProperty, highContrastSelected, highContrastSelectedBackground, highContrastSelector } from \"../utilities/high-contrast\";\nimport { applyCornerRadius, applyFocusPlaceholderBorder } from \"../utilities/border\";\nimport { applyCursorPointer } from \"../utilities/cursor\";\nimport { glyphSize, glyphSizeNumber, height, horizontalSpacing } from \"../utilities/density\";\nimport { applyScaledLineHeight, applyScaledTypeRamp, getScaledLineHeight } from \"../utilities/typography\";\nimport { applyFontWeightNormal } from \"../utilities/fonts\";\nvar styles = {\n  // Container for item AND any children\n  treeViewItem: Object.assign({\n    position: \"relative\",\n    color: neutralForegroundRest,\n    background: neutralFillStealthRest\n  }, applyCursorPointer(), applyFocusVisible(\" > $treeViewItem_contentRegion\", Object.assign({\n    border: format(\"{0} solid {1}\", toPx(focusOutlineWidth), neutralFocus)\n  }, highContrastDoubleFocus)), {\n    \"& $treeViewItem_beforeContent, & $treeViewItem_afterContent\": _defineProperty({\n      width: glyphSize,\n      height: glyphSize,\n      fill: neutralForegroundRest\n    }, highContrastSelector, {\n      fill: HighContrastColor.buttonText\n    })\n  }),\n  treeViewItem_beforeContent: {\n    \"margin-right\": directionSwitch(horizontalSpacing(), \"\"),\n    \"margin-left\": directionSwitch(\"\", horizontalSpacing())\n  },\n  treeViewItem_afterContent: {\n    \"margin-left\": directionSwitch(horizontalSpacing(), \"\"),\n    \"margin-right\": directionSwitch(\"\", horizontalSpacing())\n  },\n  // Single item container, always full width\n  treeViewItem_contentRegion: Object.assign({\n    display: \"flex\",\n    position: \"relative\",\n    \"box-sizing\": \"border-box\",\n    height: height()\n  }, applyFocusPlaceholderBorder(), applyCornerRadius(), _defineProperty({\n    \"&:hover\": Object.assign({\n      background: neutralFillStealthHover\n    }, highContrastSelected, _defineProperty({}, \"& $treeViewItem_expandCollapseGlyph,\\n            & $treeViewItem_beforeContent, & $treeViewItem_afterContent\", _defineProperty({}, highContrastSelector, {\n      fill: HighContrastColor.selectedText\n    }))),\n    \"&:active\": {\n      background: neutralFillStealthActive\n    },\n    // Left indent padding for node level; em size set in treeViewItem_childNodeRegion\n    \"&::before\": {\n      content: \"''\",\n      display: \"block\",\n      width: \"0\",\n      \"flex-shrink\": \"0\"\n    }\n  }, highContrastSelector, Object.assign({}, highContrastOptOutProperty, {\n    color: HighContrastColor.buttonText,\n    border: format(\"{0} solid transparent\", toPx(focusOutlineWidth))\n  }))),\n  // Single item container for expand/collapse button, glyph, and text; Indented for node level\n  treeViewItem_innerContentRegion: Object.assign({\n    // Default margin for glyph and/or text, i.e. not nested\n    \"margin-left\": directionSwitch(horizontalSpacing(focusOutlineWidth), \"\"),\n    \"margin-right\": directionSwitch(\"\", horizontalSpacing(focusOutlineWidth)),\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"white-space\": \"nowrap\"\n  }, applyScaledTypeRamp(\"t7\"), applyFontWeightNormal()),\n  // Container for all child nodes of an item\n  treeViewItem_childNodeRegion: {\n    display: \"none\",\n    \"font-size\": format(\"calc(1em + {0})\", toPx(add(designUnit, glyphSizeNumber))),\n    \"& $treeViewItem_contentRegion\": {\n      \"&::before\": {\n        width: \"1em\"\n      }\n    }\n  },\n  // Basic button style, more below under treeViewItem__nested\n  treeViewItem_expandCollapseButton: Object.assign({\n    background: \"none\",\n    border: \"none\",\n    outline: \"none\",\n    width: toPx(add(glyphSizeNumber, multiply(designUnit, 4))),\n    height: toPx(add(glyphSizeNumber, multiply(designUnit, 4))),\n    padding: \"0\",\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }, applyCursorPointer()),\n  treeViewItem_expandCollapseGlyph: _defineProperty({\n    width: glyphSize,\n    height: glyphSize,\n    transition: \"transform .1s linear\",\n    transform: directionSwitch(\"rotate(-45deg)\", \"rotate(135deg)\"),\n    \"pointer-events\": \"none\",\n    fill: neutralForegroundRest\n  }, highContrastSelector, {\n    fill: HighContrastColor.buttonText\n  }),\n  treeViewItem__expanded: {\n    \"& > $treeViewItem_contentRegion $treeViewItem_expandCollapseGlyph\": {\n      transform: directionSwitch(\"rotate(0deg)\", \"rotate(90deg)\")\n    },\n    \"& > $treeViewItem_childNodeRegion\": {\n      display: \"block\"\n    }\n  },\n  treeViewItem__selected: _defineProperty({\n    \"& > $treeViewItem_contentRegion\": Object.assign({\n      background: neutralFillStealthSelected\n    }, highContrastSelected),\n    \"&::after\": Object.assign({\n      content: \"''\",\n      display: \"block\",\n      position: \"absolute\",\n      top: toPx(divide(subtract(heightNumber(), getScaledLineHeight(\"t7\")), 2)),\n      width: \"3px\",\n      height: applyScaledLineHeight(\"t7\"),\n      background: accentForegroundRest(neutralFillStealthSelected),\n      left: directionSwitch(toPx(focusOutlineWidth), \"unset\"),\n      right: directionSwitch(\"unset\", toPx(focusOutlineWidth))\n    }, applyCornerRadius(), highContrastSelectedBackground)\n  }, \"& > $treeViewItem_contentRegion $treeViewItem_beforeContent, & $treeViewItem_afterContent,\\n            & > $treeViewItem_contentRegion $treeViewItem_expandCollapseGlyph\", _defineProperty({}, highContrastSelector, {\n    fill: HighContrastColor.selectedText\n  })),\n  treeViewItem__nested: {\n    \"& $treeViewItem_innerContentRegion\": {\n      position: \"relative\",\n      // Push every innerContentRegion over to hold space for the expand/collapse button, whether parent node or not\n      \"margin-left\": directionSwitch(toPx(add(glyphSizeNumber, multiply(designUnit, 4))), \"\"),\n      \"margin-right\": directionSwitch(\"\", toPx(add(glyphSizeNumber, multiply(designUnit, 4))))\n    },\n    \"& $treeViewItem_expandCollapseButton\": {\n      position: \"absolute\",\n      // Bring the expand/collapse button back into the empty space\n      left: directionSwitch(toPx(multiply(add(glyphSizeNumber, multiply(designUnit, 4)), -1)), \"\"),\n      right: directionSwitch(\"\", toPx(multiply(add(glyphSizeNumber, multiply(designUnit, 4)), -1)))\n    }\n  }\n};\nexport default styles;","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-styles-msft/dist/tree-view-item/index.js"],"names":["add","applyFocusVisible","directionSwitch","divide","format","multiply","subtract","toPx","accentForegroundRest","neutralFillStealthActive","neutralFillStealthHover","neutralFillStealthRest","neutralFillStealthSelected","neutralFocus","neutralForegroundRest","heightNumber","designUnit","focusOutlineWidth","HighContrastColor","highContrastDoubleFocus","highContrastOptOutProperty","highContrastSelected","highContrastSelectedBackground","highContrastSelector","applyCornerRadius","applyFocusPlaceholderBorder","applyCursorPointer","glyphSize","glyphSizeNumber","height","horizontalSpacing","applyScaledLineHeight","applyScaledTypeRamp","getScaledLineHeight","applyFontWeightNormal","styles","treeViewItem","Object","assign","position","color","background","border","width","fill","buttonText","treeViewItem_beforeContent","treeViewItem_afterContent","treeViewItem_contentRegion","display","selectedText","content","treeViewItem_innerContentRegion","treeViewItem_childNodeRegion","treeViewItem_expandCollapseButton","outline","padding","treeViewItem_expandCollapseGlyph","transition","transform","treeViewItem__expanded","treeViewItem__selected","top","left","right","treeViewItem__nested"],"mappings":";AAAA,SAASA,GAAT,EAAcC,iBAAd,EAAiCC,eAAjC,EAAkDC,MAAlD,EAA0DC,MAA1D,EAAkEC,QAAlE,EAA4EC,QAA5E,EAAsFC,IAAtF,QAAmG,+BAAnG;AACA,SAASC,oBAAT,EAA+BC,wBAA/B,EAAyDC,uBAAzD,EAAkFC,sBAAlF,EAA0GC,0BAA1G,EAAsIC,YAAtI,EAAoJC,qBAApJ,QAAkL,oBAAlL;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,4BAA9C;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,EAAqDC,0BAArD,EAAiFC,oBAAjF,EAAuGC,8BAAvG,EAAuIC,oBAAvI,QAAoK,4BAApK;AACA,SAASC,iBAAT,EAA4BC,2BAA5B,QAA+D,qBAA/D;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,MAArC,EAA6CC,iBAA7C,QAAuE,sBAAvE;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,EAAqDC,mBAArD,QAAiF,yBAAjF;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,IAAMC,MAAM,GAAG;AACX;AACAC,EAAAA,YAAY,EAAEC,MAAM,CAACC,MAAP,CAAc;AAAEC,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE1B,qBAA/B;AAAsD2B,IAAAA,UAAU,EAAE9B;AAAlE,GAAd,EAA0Ge,kBAAkB,EAA5H,EAAgIzB,iBAAiB,CAAC,gCAAD,EAAmCoC,MAAM,CAACC,MAAP,CAAc;AAAEI,IAAAA,MAAM,EAAEtC,MAAM,CAAC,eAAD,EAAkBG,IAAI,CAACU,iBAAD,CAAtB,EAA2CJ,YAA3C;AAAhB,GAAd,EAA0FM,uBAA1F,CAAnC,CAAjJ,EAAyS;AAAE;AACjTwB,MAAAA,KAAK,EAAEhB,SAD0S;AAEjTE,MAAAA,MAAM,EAAEF,SAFyS;AAGjTiB,MAAAA,IAAI,EAAE9B;AAH2S,OAIhTS,oBAJgT,EAIzR;AACpBqB,MAAAA,IAAI,EAAE1B,iBAAiB,CAAC2B;AADJ,KAJyR;AAAF,GAAzS,CAFH;AAUXC,EAAAA,0BAA0B,EAAE;AACxB,oBAAgB5C,eAAe,CAAC4B,iBAAiB,EAAlB,EAAsB,EAAtB,CADP;AAExB,mBAAe5B,eAAe,CAAC,EAAD,EAAK4B,iBAAiB,EAAtB;AAFN,GAVjB;AAcXiB,EAAAA,yBAAyB,EAAE;AACvB,mBAAe7C,eAAe,CAAC4B,iBAAiB,EAAlB,EAAsB,EAAtB,CADP;AAEvB,oBAAgB5B,eAAe,CAAC,EAAD,EAAK4B,iBAAiB,EAAtB;AAFR,GAdhB;AAkBX;AACAkB,EAAAA,0BAA0B,EAAEX,MAAM,CAACC,MAAP,CAAc;AAAEW,IAAAA,OAAO,EAAE,MAAX;AAAmBV,IAAAA,QAAQ,EAAE,UAA7B;AAAyC,kBAAc,YAAvD;AAAqEV,IAAAA,MAAM,EAAEA,MAAM;AAAnF,GAAd,EAAuGJ,2BAA2B,EAAlI,EAAsID,iBAAiB,EAAvJ;AAA6J,eAAWa,MAAM,CAACC,MAAP,CAAc;AAAEG,MAAAA,UAAU,EAAE/B;AAAd,KAAd,EAAuDW,oBAAvD,2JAEvLE,oBAFuL,EAEhK;AACpBqB,MAAAA,IAAI,EAAE1B,iBAAiB,CAACgC;AADJ,KAFgK,GAAxK;AAKd,gBAAY;AAClBT,MAAAA,UAAU,EAAEhC;AADM,KALE;AAQxB;AACA,iBAAa;AACT0C,MAAAA,OAAO,EAAE,IADA;AAETF,MAAAA,OAAO,EAAE,OAFA;AAGTN,MAAAA,KAAK,EAAE,GAHE;AAIT,qBAAe;AAJN;AATW,KAcpBpB,oBAdoB,EAcGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,0BAAlB,EAA8C;AAAEoB,IAAAA,KAAK,EAAEtB,iBAAiB,CAAC2B,UAA3B;AAAuCH,IAAAA,MAAM,EAAEtC,MAAM,CAAC,uBAAD,EAA0BG,IAAI,CAACU,iBAAD,CAA9B;AAArD,GAA9C,CAdH,EAnBjB;AAkCX;AACAmC,EAAAA,+BAA+B,EAAEf,MAAM,CAACC,MAAP,CAAc;AAC3C;AACA,mBAAepC,eAAe,CAAC4B,iBAAiB,CAACb,iBAAD,CAAlB,EAAuC,EAAvC,CAFa;AAE+B,oBAAgBf,eAAe,CAAC,EAAD,EAAK4B,iBAAiB,CAACb,iBAAD,CAAtB,CAF9D;AAE0GgC,IAAAA,OAAO,EAAE,MAFnH;AAE2H,mBAAe,QAF1I;AAEoJ,mBAAe;AAFnK,GAAd,EAE6LjB,mBAAmB,CAAC,IAAD,CAFhN,EAEwNE,qBAAqB,EAF7O,CAnCtB;AAsCX;AACAmB,EAAAA,4BAA4B,EAAE;AAC1BJ,IAAAA,OAAO,EAAE,MADiB;AAE1B,iBAAa7C,MAAM,CAAC,iBAAD,EAAoBG,IAAI,CAACP,GAAG,CAACgB,UAAD,EAAaY,eAAb,CAAJ,CAAxB,CAFO;AAG1B,qCAAiC;AAC7B,mBAAa;AACTe,QAAAA,KAAK,EAAE;AADE;AADgB;AAHP,GAvCnB;AAgDX;AACAW,EAAAA,iCAAiC,EAAEjB,MAAM,CAACC,MAAP,CAAc;AAAEG,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,MAAM,EAAE,MAA9B;AAAsCa,IAAAA,OAAO,EAAE,MAA/C;AAAuDZ,IAAAA,KAAK,EAAEpC,IAAI,CAACP,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,CAAlE;AAAmHa,IAAAA,MAAM,EAAEtB,IAAI,CAACP,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,CAA/H;AAAgLwC,IAAAA,OAAO,EAAE,GAAzL;AAA8LP,IAAAA,OAAO,EAAE,MAAvM;AAA+M,uBAAmB,QAAlO;AAA4O,mBAAe;AAA3P,GAAd,EAAqRvB,kBAAkB,EAAvS,CAjDxB;AAkDX+B,EAAAA,gCAAgC;AAC5Bd,IAAAA,KAAK,EAAEhB,SADqB;AAE5BE,IAAAA,MAAM,EAAEF,SAFoB;AAG5B+B,IAAAA,UAAU,EAAE,sBAHgB;AAI5BC,IAAAA,SAAS,EAAEzD,eAAe,CAAC,gBAAD,EAAmB,gBAAnB,CAJE;AAK5B,sBAAkB,MALU;AAM5B0C,IAAAA,IAAI,EAAE9B;AANsB,KAO3BS,oBAP2B,EAOJ;AACpBqB,IAAAA,IAAI,EAAE1B,iBAAiB,CAAC2B;AADJ,GAPI,CAlDrB;AA6DXe,EAAAA,sBAAsB,EAAE;AACpB,yEAAqE;AACjED,MAAAA,SAAS,EAAEzD,eAAe,CAAC,cAAD,EAAiB,eAAjB;AADuC,KADjD;AAIpB,yCAAqC;AACjC+C,MAAAA,OAAO,EAAE;AADwB;AAJjB,GA7Db;AAqEXY,EAAAA,sBAAsB;AAClB,uCAAmCxB,MAAM,CAACC,MAAP,CAAc;AAAEG,MAAAA,UAAU,EAAE7B;AAAd,KAAd,EAA0DS,oBAA1D,CADjB;AAElB,gBAAYgB,MAAM,CAACC,MAAP,CAAc;AAAEa,MAAAA,OAAO,EAAE,IAAX;AAAiBF,MAAAA,OAAO,EAAE,OAA1B;AAAmCV,MAAAA,QAAQ,EAAE,UAA7C;AAAyDuB,MAAAA,GAAG,EAAEvD,IAAI,CAACJ,MAAM,CAACG,QAAQ,CAACS,YAAY,EAAb,EAAiBkB,mBAAmB,CAAC,IAAD,CAApC,CAAT,EAAsD,CAAtD,CAAP,CAAlE;AAAoIU,MAAAA,KAAK,EAAE,KAA3I;AAAkJd,MAAAA,MAAM,EAAEE,qBAAqB,CAAC,IAAD,CAA/K;AAAuLU,MAAAA,UAAU,EAAEjC,oBAAoB,CAACI,0BAAD,CAAvN;AAAqPmD,MAAAA,IAAI,EAAE7D,eAAe,CAACK,IAAI,CAACU,iBAAD,CAAL,EAA0B,OAA1B,CAA1Q;AAA8S+C,MAAAA,KAAK,EAAE9D,eAAe,CAAC,OAAD,EAAUK,IAAI,CAACU,iBAAD,CAAd;AAApU,KAAd,EAAwXO,iBAAiB,EAAzY,EAA6YF,8BAA7Y;AAFM,sMAKbC,oBALa,EAKU;AACpBqB,IAAAA,IAAI,EAAE1B,iBAAiB,CAACgC;AADJ,GALV,EArEX;AA+EXe,EAAAA,oBAAoB,EAAE;AAClB,0CAAsC;AAClC1B,MAAAA,QAAQ,EAAE,UADwB;AAElC;AACA,qBAAerC,eAAe,CAACK,IAAI,CAACP,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,CAAL,EAAsD,EAAtD,CAHI;AAIlC,sBAAgBd,eAAe,CAAC,EAAD,EAAKK,IAAI,CAACP,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,CAAT;AAJG,KADpB;AAOlB,4CAAwC;AACpCuB,MAAAA,QAAQ,EAAE,UAD0B;AAEpC;AACAwB,MAAAA,IAAI,EAAE7D,eAAe,CAACK,IAAI,CAACF,QAAQ,CAACL,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,EAAgD,CAAC,CAAjD,CAAT,CAAL,EAAoE,EAApE,CAHe;AAIpCgD,MAAAA,KAAK,EAAE9D,eAAe,CAAC,EAAD,EAAKK,IAAI,CAACF,QAAQ,CAACL,GAAG,CAAC4B,eAAD,EAAkBvB,QAAQ,CAACW,UAAD,EAAa,CAAb,CAA1B,CAAJ,EAAgD,CAAC,CAAjD,CAAT,CAAT;AAJc;AAPtB;AA/EX,CAAf;AA8FA,eAAemB,MAAf","sourcesContent":["import { add, applyFocusVisible, directionSwitch, divide, format, multiply, subtract, toPx, } from \"@microsoft/fast-jss-utilities\";\nimport { accentForegroundRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRest, neutralFillStealthSelected, neutralFocus, neutralForegroundRest, } from \"../utilities/color\";\nimport { heightNumber } from \"../utilities/density\";\nimport { designUnit, focusOutlineWidth } from \"../utilities/design-system\";\nimport { HighContrastColor, highContrastDoubleFocus, highContrastOptOutProperty, highContrastSelected, highContrastSelectedBackground, highContrastSelector, } from \"../utilities/high-contrast\";\nimport { applyCornerRadius, applyFocusPlaceholderBorder } from \"../utilities/border\";\nimport { applyCursorPointer } from \"../utilities/cursor\";\nimport { glyphSize, glyphSizeNumber, height, horizontalSpacing, } from \"../utilities/density\";\nimport { applyScaledLineHeight, applyScaledTypeRamp, getScaledLineHeight, } from \"../utilities/typography\";\nimport { applyFontWeightNormal } from \"../utilities/fonts\";\nconst styles = {\n    // Container for item AND any children\n    treeViewItem: Object.assign({ position: \"relative\", color: neutralForegroundRest, background: neutralFillStealthRest }, applyCursorPointer(), applyFocusVisible(\" > $treeViewItem_contentRegion\", Object.assign({ border: format(\"{0} solid {1}\", toPx(focusOutlineWidth), neutralFocus) }, highContrastDoubleFocus)), { \"& $treeViewItem_beforeContent, & $treeViewItem_afterContent\": {\n            width: glyphSize,\n            height: glyphSize,\n            fill: neutralForegroundRest,\n            [highContrastSelector]: {\n                fill: HighContrastColor.buttonText,\n            },\n        } }),\n    treeViewItem_beforeContent: {\n        \"margin-right\": directionSwitch(horizontalSpacing(), \"\"),\n        \"margin-left\": directionSwitch(\"\", horizontalSpacing()),\n    },\n    treeViewItem_afterContent: {\n        \"margin-left\": directionSwitch(horizontalSpacing(), \"\"),\n        \"margin-right\": directionSwitch(\"\", horizontalSpacing()),\n    },\n    // Single item container, always full width\n    treeViewItem_contentRegion: Object.assign({ display: \"flex\", position: \"relative\", \"box-sizing\": \"border-box\", height: height() }, applyFocusPlaceholderBorder(), applyCornerRadius(), { \"&:hover\": Object.assign({ background: neutralFillStealthHover }, highContrastSelected, { [`& $treeViewItem_expandCollapseGlyph,\n            & $treeViewItem_beforeContent, & $treeViewItem_afterContent`]: {\n                [highContrastSelector]: {\n                    fill: HighContrastColor.selectedText,\n                },\n            } }), \"&:active\": {\n            background: neutralFillStealthActive,\n        }, \n        // Left indent padding for node level; em size set in treeViewItem_childNodeRegion\n        \"&::before\": {\n            content: \"''\",\n            display: \"block\",\n            width: \"0\",\n            \"flex-shrink\": \"0\",\n        }, [highContrastSelector]: Object.assign({}, highContrastOptOutProperty, { color: HighContrastColor.buttonText, border: format(\"{0} solid transparent\", toPx(focusOutlineWidth)) }) }),\n    // Single item container for expand/collapse button, glyph, and text; Indented for node level\n    treeViewItem_innerContentRegion: Object.assign({ \n        // Default margin for glyph and/or text, i.e. not nested\n        \"margin-left\": directionSwitch(horizontalSpacing(focusOutlineWidth), \"\"), \"margin-right\": directionSwitch(\"\", horizontalSpacing(focusOutlineWidth)), display: \"flex\", \"align-items\": \"center\", \"white-space\": \"nowrap\" }, applyScaledTypeRamp(\"t7\"), applyFontWeightNormal()),\n    // Container for all child nodes of an item\n    treeViewItem_childNodeRegion: {\n        display: \"none\",\n        \"font-size\": format(\"calc(1em + {0})\", toPx(add(designUnit, glyphSizeNumber))),\n        \"& $treeViewItem_contentRegion\": {\n            \"&::before\": {\n                width: \"1em\",\n            },\n        },\n    },\n    // Basic button style, more below under treeViewItem__nested\n    treeViewItem_expandCollapseButton: Object.assign({ background: \"none\", border: \"none\", outline: \"none\", width: toPx(add(glyphSizeNumber, multiply(designUnit, 4))), height: toPx(add(glyphSizeNumber, multiply(designUnit, 4))), padding: \"0\", display: \"flex\", \"justify-content\": \"center\", \"align-items\": \"center\" }, applyCursorPointer()),\n    treeViewItem_expandCollapseGlyph: {\n        width: glyphSize,\n        height: glyphSize,\n        transition: \"transform .1s linear\",\n        transform: directionSwitch(\"rotate(-45deg)\", \"rotate(135deg)\"),\n        \"pointer-events\": \"none\",\n        fill: neutralForegroundRest,\n        [highContrastSelector]: {\n            fill: HighContrastColor.buttonText,\n        },\n    },\n    treeViewItem__expanded: {\n        \"& > $treeViewItem_contentRegion $treeViewItem_expandCollapseGlyph\": {\n            transform: directionSwitch(\"rotate(0deg)\", \"rotate(90deg)\"),\n        },\n        \"& > $treeViewItem_childNodeRegion\": {\n            display: \"block\",\n        },\n    },\n    treeViewItem__selected: {\n        \"& > $treeViewItem_contentRegion\": Object.assign({ background: neutralFillStealthSelected }, highContrastSelected),\n        \"&::after\": Object.assign({ content: \"''\", display: \"block\", position: \"absolute\", top: toPx(divide(subtract(heightNumber(), getScaledLineHeight(\"t7\")), 2)), width: \"3px\", height: applyScaledLineHeight(\"t7\"), background: accentForegroundRest(neutralFillStealthSelected), left: directionSwitch(toPx(focusOutlineWidth), \"unset\"), right: directionSwitch(\"unset\", toPx(focusOutlineWidth)) }, applyCornerRadius(), highContrastSelectedBackground),\n        [`& > $treeViewItem_contentRegion $treeViewItem_beforeContent, & $treeViewItem_afterContent,\n            & > $treeViewItem_contentRegion $treeViewItem_expandCollapseGlyph`]: {\n            [highContrastSelector]: {\n                fill: HighContrastColor.selectedText,\n            },\n        },\n    },\n    treeViewItem__nested: {\n        \"& $treeViewItem_innerContentRegion\": {\n            position: \"relative\",\n            // Push every innerContentRegion over to hold space for the expand/collapse button, whether parent node or not\n            \"margin-left\": directionSwitch(toPx(add(glyphSizeNumber, multiply(designUnit, 4))), \"\"),\n            \"margin-right\": directionSwitch(\"\", toPx(add(glyphSizeNumber, multiply(designUnit, 4)))),\n        },\n        \"& $treeViewItem_expandCollapseButton\": {\n            position: \"absolute\",\n            // Bring the expand/collapse button back into the empty space\n            left: directionSwitch(toPx(multiply(add(glyphSizeNumber, multiply(designUnit, 4)), -1)), \"\"),\n            right: directionSwitch(\"\", toPx(multiply(add(glyphSizeNumber, multiply(designUnit, 4)), -1))),\n        },\n    },\n};\nexport default styles;\n"]},"metadata":{},"sourceType":"module"}