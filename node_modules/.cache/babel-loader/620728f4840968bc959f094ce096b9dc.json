{"ast":null,"code":"import { canUseDOM } from \"exenv-es6\";\nexport var defaultBreakpoints = [0, 540, 768, 1084, 1400, 1779];\n/**\n * Identifies current breakpoint based on window width\n */\n\nexport function identifyBreakpoint(windowWidth) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBreakpoints;\n\n  for (var breakpoint = breakpoints.length - 1; breakpoint >= 0; breakpoint--) {\n    if (windowWidth >= breakpoints[breakpoint]) {\n      return breakpoint;\n    }\n  }\n}\n/**\n * Gets a value from an array where the index retrieved is either the current break-point\n * or the nearest preceding break-point if no entry exists for the current break-point\n */\n\nexport function getValueByBreakpoint(breakpointSet, breakpoints) {\n  if (!canUseDOM()) {\n    return breakpointSet[0];\n  }\n\n  var breakpoint = breakpoints ? identifyBreakpoint(window.innerWidth, breakpoints) : identifyBreakpoint(window.innerWidth);\n  return breakpointSet.slice(0, breakpoint + 1).pop();\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-layouts-react/dist/utilities/breakpoints.js"],"names":["canUseDOM","defaultBreakpoints","identifyBreakpoint","windowWidth","breakpoints","breakpoint","length","getValueByBreakpoint","breakpointSet","window","innerWidth","slice","pop"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,OAAO,IAAMC,kBAAkB,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,CAA3B;AACP;;;;AAGA,OAAO,SAASC,kBAAT,CAA4BC,WAA5B,EAA2E;AAAA,MAAlCC,WAAkC,uEAApBH,kBAAoB;;AAC9E,OAAK,IAAII,UAAU,GAAGD,WAAW,CAACE,MAAZ,GAAqB,CAA3C,EAA8CD,UAAU,IAAI,CAA5D,EAA+DA,UAAU,EAAzE,EAA6E;AACzE,QAAIF,WAAW,IAAIC,WAAW,CAACC,UAAD,CAA9B,EAA4C;AACxC,aAAOA,UAAP;AACH;AACJ;AACJ;AACD;;;;;AAIA,OAAO,SAASE,oBAAT,CAA8BC,aAA9B,EAA6CJ,WAA7C,EAA0D;AAC7D,MAAI,CAACJ,SAAS,EAAd,EAAkB;AACd,WAAOQ,aAAa,CAAC,CAAD,CAApB;AACH;;AACD,MAAMH,UAAU,GAAGD,WAAW,GACxBF,kBAAkB,CAACO,MAAM,CAACC,UAAR,EAAoBN,WAApB,CADM,GAExBF,kBAAkB,CAACO,MAAM,CAACC,UAAR,CAFxB;AAGA,SAAOF,aAAa,CAACG,KAAd,CAAoB,CAApB,EAAuBN,UAAU,GAAG,CAApC,EAAuCO,GAAvC,EAAP;AACH","sourcesContent":["import { canUseDOM } from \"exenv-es6\";\nexport const defaultBreakpoints = [0, 540, 768, 1084, 1400, 1779];\n/**\n * Identifies current breakpoint based on window width\n */\nexport function identifyBreakpoint(windowWidth, breakpoints = defaultBreakpoints) {\n    for (let breakpoint = breakpoints.length - 1; breakpoint >= 0; breakpoint--) {\n        if (windowWidth >= breakpoints[breakpoint]) {\n            return breakpoint;\n        }\n    }\n}\n/**\n * Gets a value from an array where the index retrieved is either the current break-point\n * or the nearest preceding break-point if no entry exists for the current break-point\n */\nexport function getValueByBreakpoint(breakpointSet, breakpoints) {\n    if (!canUseDOM()) {\n        return breakpointSet[0];\n    }\n    const breakpoint = breakpoints\n        ? identifyBreakpoint(window.innerWidth, breakpoints)\n        : identifyBreakpoint(window.innerWidth);\n    return breakpointSet.slice(0, breakpoint + 1).pop();\n}\n"]},"metadata":{},"sourceType":"module"}