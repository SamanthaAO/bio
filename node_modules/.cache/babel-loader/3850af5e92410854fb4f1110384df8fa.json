{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { isUndefined } from \"lodash-es\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { LabelTag } from \"./label.props\";\n\nclass Label extends Foundation {\n  constructor() {\n    super(...arguments);\n    this.handledProps = {\n      hidden: void 0,\n      managedClasses: void 0,\n      tag: void 0\n    };\n  }\n  /**\n   * Stores HTML tag for use in render\n   */\n\n\n  get tag() {\n    return isUndefined(LabelTag[this.props.tag]) ? LabelTag.label : LabelTag[this.props.tag];\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(this.tag, Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames()\n    }), this.props.children);\n  }\n  /**\n   * Generates class names based on props\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          label = _this$props$managedCl.label,\n          label__hidden = _this$props$managedCl.label__hidden;\n    return super.generateClassNames(classNames(label, [label__hidden, this.props.hidden]));\n  }\n\n}\n\nLabel.displayName = `${DisplayNamePrefix}Label`;\nLabel.defaultProps = {\n  tag: LabelTag.label,\n  managedClasses: {}\n};\nexport default Label;\nexport * from \"./label.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-base/dist/label/label.js"],"names":["Foundation","classNames","isUndefined","React","DisplayNamePrefix","LabelTag","Label","constructor","arguments","handledProps","hidden","managedClasses","tag","props","label","render","createElement","Object","assign","unhandledProps","className","generateClassNames","children","label__hidden","displayName","defaultProps"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,6CAAvB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,SAASC,QAAT,QAA0B,eAA1B;;AACA,MAAMC,KAAN,SAAoBN,UAApB,CAA+B;AAC3BO,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,YAAL,GAAoB;AAChBC,MAAAA,MAAM,EAAE,KAAK,CADG;AAEhBC,MAAAA,cAAc,EAAE,KAAK,CAFL;AAGhBC,MAAAA,GAAG,EAAE,KAAK;AAHM,KAApB;AAKH;AACD;;;;;AAGA,MAAIA,GAAJ,GAAU;AACN,WAAOV,WAAW,CAACG,QAAQ,CAAC,KAAKQ,KAAL,CAAWD,GAAZ,CAAT,CAAX,GACDP,QAAQ,CAACS,KADR,GAEDT,QAAQ,CAAC,KAAKQ,KAAL,CAAWD,GAAZ,CAFd;AAGH;AACD;;;;;AAGAG,EAAAA,MAAM,GAAG;AACL,WAAQZ,KAAK,CAACa,aAAN,CAAoB,KAAKJ,GAAzB,EAA8BK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,cAAL,EAAlB,EAAyC;AAAEC,MAAAA,SAAS,EAAE,KAAKC,kBAAL;AAAb,KAAzC,CAA9B,EAAkH,KAAKR,KAAL,CAAWS,QAA7H,CAAR;AACH;AACD;;;;;AAGAD,EAAAA,kBAAkB,GAAG;AAAA,kCACiB,KAAKR,KAAL,CAAWF,cAD5B;AAAA,UACTG,KADS,yBACTA,KADS;AAAA,UACFS,aADE,yBACFA,aADE;AAEjB,WAAO,MAAMF,kBAAN,CAAyBpB,UAAU,CAACa,KAAD,EAAQ,CAACS,aAAD,EAAgB,KAAKV,KAAL,CAAWH,MAA3B,CAAR,CAAnC,CAAP;AACH;;AA7B0B;;AA+B/BJ,KAAK,CAACkB,WAAN,GAAqB,GAAEpB,iBAAkB,OAAzC;AACAE,KAAK,CAACmB,YAAN,GAAqB;AACjBb,EAAAA,GAAG,EAAEP,QAAQ,CAACS,KADG;AAEjBH,EAAAA,cAAc,EAAE;AAFC,CAArB;AAIA,eAAeL,KAAf;AACA,cAAc,eAAd","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport { isUndefined } from \"lodash-es\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { LabelTag, } from \"./label.props\";\nclass Label extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            hidden: void 0,\n            managedClasses: void 0,\n            tag: void 0,\n        };\n    }\n    /**\n     * Stores HTML tag for use in render\n     */\n    get tag() {\n        return isUndefined(LabelTag[this.props.tag])\n            ? LabelTag.label\n            : LabelTag[this.props.tag];\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(this.tag, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames() }), this.props.children));\n    }\n    /**\n     * Generates class names based on props\n     */\n    generateClassNames() {\n        const { label, label__hidden, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(label, [label__hidden, this.props.hidden]));\n    }\n}\nLabel.displayName = `${DisplayNamePrefix}Label`;\nLabel.defaultProps = {\n    tag: LabelTag.label,\n    managedClasses: {},\n};\nexport default Label;\nexport * from \"./label.props\";\n"]},"metadata":{},"sourceType":"module"}