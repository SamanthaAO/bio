{"ast":null,"code":"import _classCallCheck from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/createClass\";\n// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\"; // XYZ color space\n// https://en.wikipedia.org/wiki/CIE_1931_color_space\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\n\nexport var ColorXYZ =\n/*#__PURE__*/\nfunction () {\n  function ColorXYZ(x, y, z) {\n    _classCallCheck(this, ColorXYZ);\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  _createClass(ColorXYZ, [{\n    key: \"equalValue\",\n    value: function equalValue(rhs) {\n      return this.x === rhs.x && this.y === rhs.y && this.z === rhs.z;\n    }\n  }, {\n    key: \"roundToPrecision\",\n    value: function roundToPrecision(precision) {\n      return new ColorXYZ(roundToPrecisionSmall(this.x, precision), roundToPrecisionSmall(this.y, precision), roundToPrecisionSmall(this.z, precision));\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return {\n        x: this.x,\n        y: this.y,\n        z: this.z\n      };\n    }\n  }], [{\n    key: \"fromObject\",\n    value: function fromObject(data) {\n      if (data && !isNaN(data.x) && !isNaN(data.y) && !isNaN(data.z)) {\n        return new ColorXYZ(data.x, data.y, data.z);\n      }\n\n      return null;\n    }\n  }]);\n\n  return ColorXYZ;\n}(); // D65 2 degree white point\n\nColorXYZ.whitePoint = new ColorXYZ(0.95047, 1.0, 1.08883);","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-colors/dist/color-xyz.js"],"names":["roundToPrecisionSmall","ColorXYZ","x","y","z","rhs","precision","data","isNaN","whitePoint"],"mappings":";;AAAA;AACA,SAASA,qBAAT,QAAsC,kBAAtC,C,CACA;AACA;AACA;AACA;AACA;;AACA,WAAaC,QAAb;AAAA;AAAA;AACI,oBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAAA;;AACjB,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACH;;AALL;AAAA;AAAA,+BAYeC,GAZf,EAYoB;AACZ,aAAO,KAAKH,CAAL,KAAWG,GAAG,CAACH,CAAf,IAAoB,KAAKC,CAAL,KAAWE,GAAG,CAACF,CAAnC,IAAwC,KAAKC,CAAL,KAAWC,GAAG,CAACD,CAA9D;AACH;AAdL;AAAA;AAAA,qCAeqBE,SAfrB,EAegC;AACxB,aAAO,IAAIL,QAAJ,CAAaD,qBAAqB,CAAC,KAAKE,CAAN,EAASI,SAAT,CAAlC,EAAuDN,qBAAqB,CAAC,KAAKG,CAAN,EAASG,SAAT,CAA5E,EAAiGN,qBAAqB,CAAC,KAAKI,CAAN,EAASE,SAAT,CAAtH,CAAP;AACH;AAjBL;AAAA;AAAA,+BAkBe;AACP,aAAO;AAAEJ,QAAAA,CAAC,EAAE,KAAKA,CAAV;AAAaC,QAAAA,CAAC,EAAE,KAAKA,CAArB;AAAwBC,QAAAA,CAAC,EAAE,KAAKA;AAAhC,OAAP;AACH;AApBL;AAAA;AAAA,+BAMsBG,IANtB,EAM4B;AACpB,UAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACL,CAAN,CAAd,IAA0B,CAACM,KAAK,CAACD,IAAI,CAACJ,CAAN,CAAhC,IAA4C,CAACK,KAAK,CAACD,IAAI,CAACH,CAAN,CAAtD,EAAgE;AAC5D,eAAO,IAAIH,QAAJ,CAAaM,IAAI,CAACL,CAAlB,EAAqBK,IAAI,CAACJ,CAA1B,EAA6BI,IAAI,CAACH,CAAlC,CAAP;AACH;;AACD,aAAO,IAAP;AACH;AAXL;;AAAA;AAAA,I,CAsBA;;AACAH,QAAQ,CAACQ,UAAT,GAAsB,IAAIR,QAAJ,CAAa,OAAb,EAAsB,GAAtB,EAA2B,OAA3B,CAAtB","sourcesContent":["// tslint:disable:member-ordering\nimport { roundToPrecisionSmall } from \"./math-utilities\";\n// XYZ color space\n// https://en.wikipedia.org/wiki/CIE_1931_color_space\n// This implementation uses the D65 constants for 2 degrees. That determines the constants used for the pure white point of the XYZ space of 0.95047, 1.0, 1.08883.\n// https://en.wikipedia.org/wiki/Illuminant_D65\n// These constants determine how the XYZ, LCH and LAB colors convert to/from RGB.\nexport class ColorXYZ {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromObject(data) {\n        if (data && !isNaN(data.x) && !isNaN(data.y) && !isNaN(data.z)) {\n            return new ColorXYZ(data.x, data.y, data.z);\n        }\n        return null;\n    }\n    equalValue(rhs) {\n        return this.x === rhs.x && this.y === rhs.y && this.z === rhs.z;\n    }\n    roundToPrecision(precision) {\n        return new ColorXYZ(roundToPrecisionSmall(this.x, precision), roundToPrecisionSmall(this.y, precision), roundToPrecisionSmall(this.z, precision));\n    }\n    toObject() {\n        return { x: this.x, y: this.y, z: this.z };\n    }\n}\n// D65 2 degree white point\nColorXYZ.whitePoint = new ColorXYZ(0.95047, 1.0, 1.08883);\n"]},"metadata":{},"sourceType":"module"}