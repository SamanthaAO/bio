{"ast":null,"code":"import _defineProperty from \"/Users/samorcutt/Desktop/bio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { canUseFocusVisible } from \"@microsoft/fast-web-utilities\";\n/**\n * Returns the selector for the browser native :focus-visible implementation\n */\n\nexport function applyFocusVisibleSelector() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return \"&:focus-visible\".concat(selector);\n}\n/**\n * Returns the selector for the focus-visible polyfill\n */\n\nexport function applyFocusVisiblePolyfillSelector() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return \"body:not(.js-focus-visible) &:focus\".concat(selector, \", .js-focus-visible &.focus-visible\").concat(selector, \", .js-focus-visible [data-focus-visible-added]&\").concat(selector);\n}\nexport function applyFocusVisible(a, b) {\n  var styles;\n  var selector;\n\n  if (typeof a === \"object\" && a !== null) {\n    selector = \"\";\n    styles = a;\n  } else if (typeof a === \"string\") {\n    selector = a;\n    styles = b;\n  } else {\n    return {};\n  }\n\n  return Object.assign({\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  }, canUseFocusVisible() ? _defineProperty({}, applyFocusVisibleSelector(selector), styles) : _defineProperty({}, applyFocusVisiblePolyfillSelector(selector), styles));\n}","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-jss-utilities/dist/apply-focus-visible.js"],"names":["canUseFocusVisible","applyFocusVisibleSelector","selector","applyFocusVisiblePolyfillSelector","applyFocusVisible","a","b","styles","Object","assign","outline"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,+BAAnC;AACA;;;;AAGA,OAAO,SAASC,yBAAT,GAAkD;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACrD,kCAAyBA,QAAzB;AACH;AACD;;;;AAGA,OAAO,SAASC,iCAAT,GAA0D;AAAA,MAAfD,QAAe,uEAAJ,EAAI;AAC7D,sDAA6CA,QAA7C,gDAA2FA,QAA3F,4DAAqJA,QAArJ;AACH;AACD,OAAO,SAASE,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;AACpC,MAAIC,MAAJ;AACA,MAAIL,QAAJ;;AACA,MAAI,OAAOG,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAnC,EAAyC;AACrCH,IAAAA,QAAQ,GAAG,EAAX;AACAK,IAAAA,MAAM,GAAGF,CAAT;AACH,GAHD,MAIK,IAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAC5BH,IAAAA,QAAQ,GAAGG,CAAX;AACAE,IAAAA,MAAM,GAAGD,CAAT;AACH,GAHI,MAIA;AACD,WAAO,EAAP;AACH;;AACD,SAAOE,MAAM,CAACC,MAAP,CAAc;AACjB,eAAW;AACPC,MAAAA,OAAO,EAAE;AADF;AADM,GAAd,EAIJV,kBAAkB,yBAEZC,yBAAyB,CAACC,QAAD,CAFb,EAE0BK,MAF1B,wBAKZJ,iCAAiC,CAACD,QAAD,CALrB,EAKkCK,MALlC,CAJd,CAAP;AAWH","sourcesContent":["import { canUseFocusVisible } from \"@microsoft/fast-web-utilities\";\n/**\n * Returns the selector for the browser native :focus-visible implementation\n */\nexport function applyFocusVisibleSelector(selector = \"\") {\n    return `&:focus-visible${selector}`;\n}\n/**\n * Returns the selector for the focus-visible polyfill\n */\nexport function applyFocusVisiblePolyfillSelector(selector = \"\") {\n    return `body:not(.js-focus-visible) &:focus${selector}, .js-focus-visible &.focus-visible${selector}, .js-focus-visible [data-focus-visible-added]&${selector}`;\n}\nexport function applyFocusVisible(a, b) {\n    let styles;\n    let selector;\n    if (typeof a === \"object\" && a !== null) {\n        selector = \"\";\n        styles = a;\n    }\n    else if (typeof a === \"string\") {\n        selector = a;\n        styles = b;\n    }\n    else {\n        return {};\n    }\n    return Object.assign({\n        \"&:focus\": {\n            outline: \"none\",\n        },\n    }, canUseFocusVisible()\n        ? {\n            [applyFocusVisibleSelector(selector)]: styles,\n        }\n        : {\n            [applyFocusVisiblePolyfillSelector(selector)]: styles,\n        });\n}\n"]},"metadata":{},"sourceType":"module"}