{"ast":null,"code":"import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Progress as BaseProgress, ProgressType } from \"@microsoft/fast-components-react-base\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { ProgressSize } from \"./progress.props\";\n\nclass Progress extends Foundation {\n  constructor() {\n    super(...arguments);\n    this.handledProps = {\n      children: void 0,\n      value: void 0,\n      minValue: void 0,\n      maxValue: void 0,\n      managedClasses: void 0,\n      circular: void 0,\n      paused: void 0,\n      size: void 0\n    };\n  }\n  /**\n   * Renders the component\n   */\n\n\n  render() {\n    return React.createElement(BaseProgress, Object.assign({}, this.unhandledProps(), {\n      className: this.generateClassNames(),\n      managedClasses: this.props.managedClasses,\n      value: this.props.value,\n      minValue: this.props.minValue,\n      maxValue: this.props.maxValue\n    }), this.renderProgress());\n  }\n  /**\n   * Create class names\n   */\n\n\n  generateClassNames() {\n    const _this$props$managedCl = this.props.managedClasses,\n          progress = _this$props$managedCl.progress,\n          progress__circular = _this$props$managedCl.progress__circular,\n          progress__paused = _this$props$managedCl.progress__paused;\n    return super.generateClassNames(classNames(progress, [progress__circular, this.props.circular], [progress__paused, this.props.paused]));\n  }\n\n  generateCircularValueIndicatorClassNames() {\n    const _this$props$managedCl2 = this.props.managedClasses,\n          progress_valueIndicator = _this$props$managedCl2.progress_valueIndicator,\n          progress_valueIndicator__indeterminate = _this$props$managedCl2.progress_valueIndicator__indeterminate;\n    return classNames(progress_valueIndicator, [progress_valueIndicator__indeterminate, !this.props.value]);\n  }\n\n  generateSVGClassNames() {\n    return classNames(this.props.managedClasses[`progress_circularSVG__${this.props.size}`]);\n  }\n\n  progressIndicatorClasses() {\n    const _this$props$managedCl3 = this.props.managedClasses,\n          progress_indicator = _this$props$managedCl3.progress_indicator,\n          progress_indicator__determinate = _this$props$managedCl3.progress_indicator__determinate;\n    return classNames(progress_indicator, progress_indicator__determinate);\n  }\n\n  renderIndeterminateItems() {\n    const managedClasses = this.props.managedClasses;\n    const dotClass = managedClasses.progress_dot;\n    return new Array(Progress.indicatorCount).fill(undefined).map((item, index) => {\n      return React.createElement(\"span\", {\n        className: classNames(dotClass, managedClasses[`progress_dot__${index + 1}`]),\n        key: index\n      });\n    });\n  }\n\n  renderCircle(className, style) {\n    return React.createElement(\"circle\", {\n      className: className,\n      style: style,\n      cx: \"8px\",\n      cy: \"8px\",\n      r: \"7px\"\n    });\n  }\n\n  renderCircularBackground() {\n    return this.renderCircle(classNames(this.props.managedClasses.progress_indicator));\n  }\n\n  renderProgress() {\n    const _this$props$managedCl4 = this.props.managedClasses,\n          progress_valueIndicator = _this$props$managedCl4.progress_valueIndicator,\n          progress_indicator = _this$props$managedCl4.progress_indicator;\n\n    if (this.props.circular) {\n      const strokeValue = 44 * this.props.value / 100;\n      return [React.createElement(\"div\", {\n        slot: ProgressType.determinate,\n        key: \"0\"\n      }, React.createElement(\"svg\", {\n        className: this.generateSVGClassNames(),\n        viewBox: \"0 0 16 16\"\n      }, this.renderCircularBackground(), this.renderCircle(this.generateCircularValueIndicatorClassNames(), {\n        strokeDasharray: `${strokeValue}px 44px`\n      }))), React.createElement(\"div\", {\n        slot: ProgressType.indeterminate,\n        key: \"1\"\n      }, React.createElement(\"svg\", {\n        className: this.generateSVGClassNames(),\n        viewBox: \"0 0 16 16\"\n      }, this.renderCircularBackground(), this.renderCircle(this.generateCircularValueIndicatorClassNames())))];\n    }\n\n    return [React.createElement(\"div\", {\n      className: this.progressIndicatorClasses(),\n      slot: ProgressType.determinate,\n      key: \"0\"\n    }, React.createElement(\"div\", {\n      className: classNames(progress_valueIndicator),\n      style: {\n        width: `${this.props.value}%`\n      }\n    })), React.createElement(\"div\", {\n      slot: ProgressType.indeterminate,\n      className: classNames(progress_indicator),\n      key: \"1\"\n    }, this.renderIndeterminateItems())];\n  }\n\n}\n\nProgress.defaultProps = {\n  minValue: 0,\n  maxValue: 100,\n  circular: false,\n  paused: false,\n  size: ProgressSize.container,\n  managedClasses: {}\n};\nProgress.displayName = `${DisplayNamePrefix}Progress`;\nProgress.indicatorCount = 2;\nexport default Progress;\nexport * from \"./progress.props\";","map":{"version":3,"sources":["/Users/samorcutt/Desktop/bio/node_modules/@microsoft/fast-components-react-msft/dist/progress/progress.js"],"names":["Foundation","Progress","BaseProgress","ProgressType","classNames","React","DisplayNamePrefix","ProgressSize","constructor","arguments","handledProps","children","value","minValue","maxValue","managedClasses","circular","paused","size","render","createElement","Object","assign","unhandledProps","className","generateClassNames","props","renderProgress","progress","progress__circular","progress__paused","generateCircularValueIndicatorClassNames","progress_valueIndicator","progress_valueIndicator__indeterminate","generateSVGClassNames","progressIndicatorClasses","progress_indicator","progress_indicator__determinate","renderIndeterminateItems","dotClass","progress_dot","Array","indicatorCount","fill","undefined","map","item","index","key","renderCircle","style","cx","cy","r","renderCircularBackground","strokeValue","slot","determinate","viewBox","strokeDasharray","indeterminate","width","defaultProps","container","displayName"],"mappings":"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","sourcesContent":["import Foundation from \"@microsoft/fast-components-foundation-react\";\nimport { Progress as BaseProgress, ProgressType, } from \"@microsoft/fast-components-react-base\";\nimport { classNames } from \"@microsoft/fast-web-utilities\";\nimport React from \"react\";\nimport { DisplayNamePrefix } from \"../utilities\";\nimport { ProgressSize, } from \"./progress.props\";\nclass Progress extends Foundation {\n    constructor() {\n        super(...arguments);\n        this.handledProps = {\n            children: void 0,\n            value: void 0,\n            minValue: void 0,\n            maxValue: void 0,\n            managedClasses: void 0,\n            circular: void 0,\n            paused: void 0,\n            size: void 0,\n        };\n    }\n    /**\n     * Renders the component\n     */\n    render() {\n        return (React.createElement(BaseProgress, Object.assign({}, this.unhandledProps(), { className: this.generateClassNames(), managedClasses: this.props.managedClasses, value: this.props.value, minValue: this.props.minValue, maxValue: this.props.maxValue }), this.renderProgress()));\n    }\n    /**\n     * Create class names\n     */\n    generateClassNames() {\n        const { progress, progress__circular, progress__paused, } = this.props.managedClasses;\n        return super.generateClassNames(classNames(progress, [progress__circular, this.props.circular], [progress__paused, this.props.paused]));\n    }\n    generateCircularValueIndicatorClassNames() {\n        const { progress_valueIndicator, progress_valueIndicator__indeterminate, } = this.props.managedClasses;\n        return classNames(progress_valueIndicator, [\n            progress_valueIndicator__indeterminate,\n            !this.props.value,\n        ]);\n    }\n    generateSVGClassNames() {\n        return classNames(this.props.managedClasses[`progress_circularSVG__${this.props.size}`]);\n    }\n    progressIndicatorClasses() {\n        const { progress_indicator, progress_indicator__determinate, } = this.props.managedClasses;\n        return classNames(progress_indicator, progress_indicator__determinate);\n    }\n    renderIndeterminateItems() {\n        const managedClasses = this.props\n            .managedClasses;\n        const dotClass = managedClasses.progress_dot;\n        return new Array(Progress.indicatorCount)\n            .fill(undefined)\n            .map((item, index) => {\n            return (React.createElement(\"span\", { className: classNames(dotClass, managedClasses[`progress_dot__${index + 1}`]), key: index }));\n        });\n    }\n    renderCircle(className, style) {\n        return React.createElement(\"circle\", { className: className, style: style, cx: \"8px\", cy: \"8px\", r: \"7px\" });\n    }\n    renderCircularBackground() {\n        return this.renderCircle(classNames(this.props.managedClasses.progress_indicator));\n    }\n    renderProgress() {\n        const { progress_valueIndicator, progress_indicator, } = this.props.managedClasses;\n        if (this.props.circular) {\n            const strokeValue = (44 * this.props.value) / 100;\n            return [\n                React.createElement(\"div\", { slot: ProgressType.determinate, key: \"0\" },\n                    React.createElement(\"svg\", { className: this.generateSVGClassNames(), viewBox: \"0 0 16 16\" },\n                        this.renderCircularBackground(),\n                        this.renderCircle(this.generateCircularValueIndicatorClassNames(), { strokeDasharray: `${strokeValue}px 44px` }))),\n                React.createElement(\"div\", { slot: ProgressType.indeterminate, key: \"1\" },\n                    React.createElement(\"svg\", { className: this.generateSVGClassNames(), viewBox: \"0 0 16 16\" },\n                        this.renderCircularBackground(),\n                        this.renderCircle(this.generateCircularValueIndicatorClassNames()))),\n            ];\n        }\n        return [\n            React.createElement(\"div\", { className: this.progressIndicatorClasses(), slot: ProgressType.determinate, key: \"0\" },\n                React.createElement(\"div\", { className: classNames(progress_valueIndicator), style: { width: `${this.props.value}%` } })),\n            React.createElement(\"div\", { slot: ProgressType.indeterminate, className: classNames(progress_indicator), key: \"1\" }, this.renderIndeterminateItems()),\n        ];\n    }\n}\nProgress.defaultProps = {\n    minValue: 0,\n    maxValue: 100,\n    circular: false,\n    paused: false,\n    size: ProgressSize.container,\n    managedClasses: {},\n};\nProgress.displayName = `${DisplayNamePrefix}Progress`;\nProgress.indicatorCount = 2;\nexport default Progress;\nexport * from \"./progress.props\";\n"]},"metadata":{},"sourceType":"module"}